{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@swimlane/ngx-charts/lib/common/tooltip/position/placement.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/position/position.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/style.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/alignment.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/show.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/injection.service.ts","ng://@swimlane/ngx-charts/lib/utils/throttle.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.component.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.service.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/injection-registery.service.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.directive.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.module.ts","ng://@swimlane/ngx-charts/lib/common/charts/chart.component.ts","ng://@swimlane/ngx-charts/lib/common/label.helper.ts","ng://@swimlane/ngx-charts/lib/common/legend/legend.component.ts","ng://@swimlane/ngx-charts/lib/common/legend/scale-legend.component.ts","ng://@swimlane/ngx-charts/lib/common/legend/legend-entry.component.ts","ng://@swimlane/ngx-charts/lib/common/trim-label.helper.ts","ng://@swimlane/ngx-charts/lib/common/legend/advanced-legend.component.ts","ng://@swimlane/ngx-charts/lib/utils/id.ts","ng://@swimlane/ngx-charts/lib/utils/color-sets.ts","ng://@swimlane/ngx-charts/lib/utils/sort.ts","ng://@swimlane/ngx-charts/lib/utils/color-utils.ts","ng://@swimlane/ngx-charts/lib/utils/visibility-observer.ts","ng://@swimlane/ngx-charts/lib/utils/types.ts","ng://@swimlane/ngx-charts/lib/common/base-chart.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/axis-label.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/ticks.helper.ts","ng://@swimlane/ngx-charts/lib/common/axes/x-axis-ticks.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/x-axis.component.ts","ng://@swimlane/ngx-charts/lib/common/shape.helper.ts","ng://@swimlane/ngx-charts/lib/events.ts","ng://@swimlane/ngx-charts/lib/common/axes/y-axis-ticks.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/y-axis.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/axes.module.ts","ng://@swimlane/ngx-charts/lib/common/circle-series.component.ts","ng://@swimlane/ngx-charts/lib/common/circle.component.ts","ng://@swimlane/ngx-charts/lib/common/grid-panel.component.ts","ng://@swimlane/ngx-charts/lib/common/grid-panel-series.component.ts","ng://@swimlane/ngx-charts/lib/common/svg-linear-gradient.component.ts","ng://@swimlane/ngx-charts/lib/common/svg-radial-gradient.component.ts","ng://@swimlane/ngx-charts/lib/common/timeline/timeline.component.ts","ng://@swimlane/ngx-charts/lib/common/area.component.ts","ng://@swimlane/ngx-charts/lib/common/tooltip-area.component.ts","ng://@swimlane/ngx-charts/lib/common/count/count.helper.ts","ng://@swimlane/ngx-charts/lib/common/count/count.directive.ts","ng://@swimlane/ngx-charts/lib/common/chart-common.module.ts","ng://@swimlane/ngx-charts/lib/common/view-dimensions.helper.ts","ng://@swimlane/ngx-charts/lib/common/color.helper.ts","ng://@swimlane/ngx-charts/lib/common/domain.helper.ts","ng://@swimlane/ngx-charts/lib/bar-chart/series-vertical.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart-normalized.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart-stacked.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-series.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart.module.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal-2d.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal-normalized.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal-stacked.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical-2d.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical-normalized.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical-stacked.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/series-horizontal.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-label.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-chart.module.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-chart.utils.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-chart.component.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-series.component.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-chart.module.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map-cell.component.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map-cell-series.component.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map.component.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map.module.ts","ng://@swimlane/ngx-charts/lib/line-chart/line.component.ts","ng://@swimlane/ngx-charts/lib/line-chart/line-chart.component.ts","ng://@swimlane/ngx-charts/lib/line-chart/line-series.component.ts","ng://@swimlane/ngx-charts/lib/line-chart/line-chart.module.ts","ng://@swimlane/ngx-charts/lib/polar-chart/polar-chart.component.ts","ng://@swimlane/ngx-charts/lib/polar-chart/polar-series.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/advanced-pie-chart.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-label.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-arc.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-chart.component.ts","ng://@swimlane/ngx-charts/lib/common/grid-layout.helper.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-grid.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-grid-series.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-series.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-chart.module.ts","ng://@swimlane/ngx-charts/lib/polar-chart/polar-chart.module.ts","ng://@swimlane/ngx-charts/lib/number-card/card.component.ts","ng://@swimlane/ngx-charts/lib/number-card/card-series.component.ts","ng://@swimlane/ngx-charts/lib/number-card/number-card.component.ts","ng://@swimlane/ngx-charts/lib/number-card/number-card.module.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map-cell.component.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map-cell-series.component.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map.component.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map.module.ts","ng://@swimlane/ngx-charts/lib/gauge/linear-gauge.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge-arc.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge-axis.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge.module.ts","ng://@swimlane/ngx-charts/lib/ngx-charts.module.ts","ng://@swimlane/ngx-charts/lib/polyfills.ts","ng://@swimlane/ngx-charts/lib/common/tick-format.helper.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","PlacementTypes","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","height","horizontalPosition","left","width","StyleTypes","AlignmentTypes","ShowTypes","PositionHelper","calculateVerticalAlignment","result","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","right","bottom","positionContent","determinePlacement","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","InjectionService_1","globalRootViewContainer","getRootViewContainer","_container","components","Error","setRootViewContainer","getComponentRootNode","componentRef","hostView","rootNodes","location","nativeElement","getRootViewContainerNode","projectComponentBindings","component","bindings","undefined","inputs","bindingKeys","getOwnPropertyNames","bindingKeys_1","bindingKeys_1_1","bindingName","instance","outputs","eventKeys","eventKeys_1","eventKeys_1_1","eventName","appendComponent","componentClass","appendLocation","portalHost","DomPortalHost","portal","ComponentPortal","attach","ApplicationRef","ComponentFactoryResolver","Injector","Injectable","throttle","func","wait","options","context","args","timeout","previous","later","leading","Date","now","remaining","clearTimeout","trailing","setTimeout","throttleable","duration","descriptor","configurable","enumerable","get","TooltipContentComponent","element","renderer","clz","type","cssClass","ngAfterViewInit","position","bind","_this","nativeElm","host","getBoundingClientRect","checkFlip","showCaret","addClass","_a","setStyle","caretElm","onWindowResize","ElementRef","Renderer2","Input","ViewChild","HostBinding","HostListener","Component","selector","template","encapsulation","ViewEncapsulation","None","TooltipService","injectionService","_super","InjectionRegisteryService","defaults","Map","getByType","createByType","assignDefaults","injectComponent","register","destroy","compsByType","componentType","idx","indexOf","splice","destroyAll","destroyByType","comps","has","set","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipTitle","tooltipAppendToBody","tooltipSpacing","tooltipDisabled","tooltipShowCaret","tooltipPlacement","tooltipAlignment","center","tooltipType","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","EventEmitter","hide","focus","mouseover","ngOnDestroy","hideTooltip","onFocus","listensForFocus","showTooltip","onBlur","onMouseEnter","listensForHover","onMouseLeave","contains","onMouseClick","immediate","time","createBoundOptions","addHideListeners","emit","tooltip","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","document","event","destroyFn","title","tooltipTemplate","tooltipContext","ViewContainerRef","Output","Directive","TooltipModule","NgModule","declarations","providers","exports","imports","CommonModule","entryComponents","ChartComponent","vcr","showLegend","animations","legendLabelClick","legendLabelActivate","legendLabelDeactivate","ngOnChanges","changes","update","legendColumns","legendType","getLegendType","legendOptions","chartColumns","chartWidth","Math","floor","view","legendWidth","scaleType","changeDetection","ChangeDetectionStrategy","OnPush","trigger","transition","style","opacity","animate","formatLabel","label","toLocaleDateString","toLocaleString","escapeLabel","replace","match","&","'","`","\"","<",">","LegendComponent","cd","horizontal","labelClick","labelActivate","labelDeactivate","legendEntries","markForCheck","getLegendEntries","items","formattedLabel","findIndex","color","this_1","colors","getColor","_b","data","_c","isActive","entry","activeEntries","find","name","activate","item","deactivate","trackBy","index","ChangeDetectorRef","ScaleLegendComponent","sanitizer","gradientValues","gradientString","range","domain","direction","gradient","bypassSecurityTrustStyle","splits","pairs","reverse","forEach","round","join","DomSanitizer","LegendEntryComponent","select","toggle","trimLabel","max","trim","slice","AdvancedLegendComponent","legendItems","labelFormatting","percentageFormatting","percentage","defaultValueFormatting","getTotal","map","reduce","sum","total","roundedTotal","getLegendItems","_value","displayLabel","origialLabel","cache","id","newId","random","pow","toString","colorSets","selectable","group","sortLinear","property","sort","a","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","aDate","getTime","bDate","invertColor","d3_color.rgb","g","shadeRGBColor","percent","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","NgZone","isDate","BaseChartComponent","chartElement","scheme","schemeType","bindWindowResizeEvent","visibilityObserver","subscribe","unbindEvents","unsubscribe","results","cloneData","dims","getContainerDims","hostElem","parentNode","formatDates","series","j","resizeSubscription","subscription","observableFromEvent","pipe","debounceTime","data_1","data_1_1","copy","e_2","_d","seriesItem","seriesItemCopy","JSON","parse","stringify","AxisLabelComponent","textHeight","margin","strokeWidth","textAnchor","transform","orient","y","offset","x","reduceTicks","ticks","maxTicks","reduced","modulus","XAxisTicksComponent","tickArguments","tickStroke","trimTicks","maxTickLength","showGridLines","rotateTicks","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","maxTicksLength","maxAllowedLength","updateDims","parseInt","ticksElement","scale","getTicks","tickFormatting","tickFormat","angle","getRotationAngle","adjustedScale","bandwidth","textTransform","tick","tickLength","tickTrim","wordWidth","min","baseWidth","maxBaseWidth","cos","PI","getMaxTicks","maxScaleTicks","tickValues","tickWidth","tickTransform","gridLineTransform","XAxisComponent","xOrient","xAxisOffset","xAxisClassName","labelOffset","fill","stroke","padding","xAxisTickCount","emitTicksHeight","newLabelOffset","roundedRect","w","h","tl","tr","bl","br","retval","root","YAxisTicksComponent","showRefLabels","showRefLines","referenceLineLength","sign","tickSpacing","console","log","referenceLines","setReferencelines","y2","y1","dy","x2","x1","getLogTick","refMin","refMax","referenceAreaPath","gridLineWidth","tickHeight","YAxisComponent","yOrient","yAxisOffset","yAxisClassName","yAxisTickCount","emitTicksWidth","AxesModule","CircleSeriesComponent","barVisible","ngOnInit","gradientId","gradientFill","circle","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","cx","seriesName","tooltipLabel","xScale","Number","cy","yScale","d1","classNames","radius","gradientStops","getGradientStops","getTooltipText","getTooltipMinMaxText","onClick","activateCircle","deactivateCircle","CircleComponent","isArray","GridPanelComponent","GridPanelSeriesComponent","gridPanels","getGridPanels","className","step","paddingInner","class","SvgLinearGradientComponent","orientation","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","startOpacity","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","_e","_f","includes","v","scaleTime","scaleLinear","scalePoint","brushX","extent","on","newDomain","d3event","selection","invert","attr","AreaComponent","hasGradient","loadAnimation","stops","getGradient","updatePathEl","areaPath","startingPath","node","path","global","MouseEvent","createMouseEvent","bubbles","cancelable","event_1","createEvent","initEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","groupName","val","d0","toFixed","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","xSet","lastAnchorPos","ev","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","abs","getToolTipText","tooltipItem","static","easeOutExpo","count","countFrom","countTo","countDecimals","countDuration","callback","startTime","startVal","endVal","countDown","decimals","dec","requestAnimationFrame","timestamp","runCount","frameVal","progress","finished","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","start","cancelAnimationFrame","animationReq","valueFormatting","COMPONENTS","ChartCommonModule","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","_g","showYLabel","_h","_j","_k","legendPosition","_l","columns","xOffset","chartHeight","ColorHelper","customColors","cs","colorDomain","generateColorScheme","colorScale","scaleQuantile","scaleOrdinal","points","valueScale","formattedValue_1","found","mapping","toLowerCase","getLinearGradientStops","colorValueScale","scaleBand","endColor","startColor","currentVal","originalOffset","stops_1","stops_1_1","getUniqueXDomainValues","valueSet","Set","results_1","results_1_1","add","from","getScaleType","checkDateType","every","D0Types","AreaChartComponent","legendTitle","baseValue","curve","curveLinear","trimXAxisTicks","trimYAxisTicks","rotateXAxisTicks","maxXAxisTickLength","maxYAxisTickLength","roundDomains","timelineHeight","timelinePadding","xAxis","yAxis","showXAxisLabel","showYAxisLabel","legend","timeline","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","clipPath","timelineWidth","timelineXDomain","timelineXScale","timelineYScale","timelineTransform","xScaleMin","xScaleMax","autoScale","yScaleMin","yScaleMax","nice","date","num","values_1","values_1_1","updateDomain","updateHoveredVertical","hoveredVertical","deactivateAll","hideCircles","opts","updateYAxisWidth","updateXAxisHeight","onActivate","entries","onDeactivate","ContentChild","AreaChartNormalizedComponent","e_1","valueOf","AreaChartStackedComponent","this_2","AreaSeriesComponent","stacked","normalized","currentArea","startingArea","updateGradient","xProperty","area","y0","d0values","d1values","isInactive","AreaChartModule","BarComponent","roundEdges","noBarWhenZero","hideBar","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarHorizontalComponent","barPadding","showDataLabel","dataLabelMaxWidth","negative","positive","rangeRound","onDataLabelMaxWidthChanged","size","fromLegend","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valuesDomain","getValueDomain","groupScale","getGroupScale","innerScale","getInnerScale","getValueScale","paddingOuter","e_3","e_5","groupTransform","groupIndex","flat","BarHorizontalNormalizedComponent","valueDomain","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","BarVerticalComponent","dataLabelMaxHeight","getYScaleLog","yDomainLog","getYDomainLog","yAxisTicks","some","isNaN","logvalues","getLogTicks","newTicks","log10","onDataLabelMaxHeightChanged","BarVertical2DComponent","BarVerticalNormalizedComponent","BarVerticalStackedComponent","SeriesVerticalComponent","dataLabelHeightChanged","barsForDataLabels","updateTooltipSettings","d0Type","bars","oldValue","getLabel","bar","offset1","offset0","ariaLabel","tooltipText","updateDataLabels","section","totalPositive","totalNegative","dataItem","trackDataLabelBy","barLabel","SeriesHorizontal","dataLabelWidthChanged","click","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","BarChartModule","getDomain","minVal","maxVal","getScale","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","rScale","getRScale","setScales","getBubblePadding","yMin","xMin","yMax","xMax","xScaleType","yScaleType","e_4","e_6","Infinity","e_8","BubbleSeriesComponent","circles","getCircles","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","xAxisLabel","yAxisLabel","BubbleChartModule","HeatMapCellComponent","gradientUrl","animateToCurrentForm","HeatCellSeriesComponent","cells","getCells","row","cell","HeatMapComponent","innerPadding","rects","getRects","getDimension","N","L","split","f","yVal","rx","HeatMapModule","LineComponent","initialPath","strokeDasharray","strokeDashoffset","LineChartComponent","hasRange","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","outerPath","line","areaGradientStops","LineChartModule","twoPI","PolarChartComponent","curveCardinalClosed","rangeFillOpacity","showSeriesOnHover","yAxisMinScale","labelTrim","labelTrimSize","setDims","setTicks","halfWidth","halfHeight","outerRadius","yOffset","yAxisDims","transformYAxis","transformPlot","xValues","getXValues","yAxisScale","xAxisTickFormatting","thetaTicks","startAngle","dd","startPos","sin","innerRadius","endAngle","pos","radiusTicks","getYValues","PolarSeriesComponent","circleRadius","linearScaleType","seriesColor","getAngle","active","inactive","defaultTooltipText","lineRadial","AdvancedPieChartComponent","PieLabelComponent","isIE","test","navigator","userAgent","startRadius","explodeSlices","innerPos","arc","centroid","outerPos","textX","textY","midAngle","PieArcComponent","cornerRadius","pointerEvents","dblclick","getPointerEvents","calc","calculateArc","radialGradientId","updateAnimation","selectAll","attrTween","_current","copyOfD","interpolater","interpolate","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieChartComponent","labels","doughnut","arcWidth","trimLabels","maxLabelLength","hasNoOptionalMarginsSet","translation","gridSize","len","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","PieGridComponent","getSeries","format","other","PieGridSeriesComponent","layout","pie","arcs","getArcs","PieSeriesComponent","arcData","pieGenerator","calculateLabelPositions","outerArc","pieData","labelPositions","labelVisible","myArc","showLabels","getTooltipTitle","labelText","PieChartModule","PolarChartModule","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","hasValue","card","textWidth","cardData","transformBand","paddedValue","setPadding","bandPath","scaleText","startCount","medianSize","repeat","val_1","decs","valueFormatting_1","textEl","availableWidth","availableHeight","resizeScale","CardSeriesComponent","emptyColor","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","bandColor","textColor","NumberCardComponent","observers","NumberCardModule","TreeMapCellComponent","cellData","formattedValue","getTextColor","TreeMapCellSeriesComponent","children","depth","x0","valueType","TreeMapComponent","treemap","stratify","parentId","isRoot","TreeMapModule","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","hasPreviousValue","previousValue","displayValue","getDisplayValue","transformLine","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","GaugeComponent","bigSegments","smallSegments","showAxis","angleSpan","showText","rotation","availableRadius","radiusPerArc","textRadius","backgroundArc","valueArc","dataMin","dataMax","textValue","availableSpace","GaugeArcComponent","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","smallTickSegment","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","text","getTickPath","smallAngle","lineGenerator","GaugeModule","NgxChartsModule","SVGElement","HTMLDivElement","fieldType","groupByType","timeFormat","formatter"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum PlacementTypes {\r\n  top = 'top' as any,\r\n  bottom = 'bottom' as any,\r\n  left = 'left' as any,\r\n  right = 'right' as any\r\n}\r\n","import { PlacementTypes } from './placement.type';\r\n\r\nconst caretOffset = 7;\r\n\r\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\r\n  if (alignment === 'top') {\r\n    return elDimensions.top - caretOffset;\r\n  }\r\n\r\n  if (alignment === 'bottom') {\r\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\r\n  }\r\n\r\n  if (alignment === 'center') {\r\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\r\n  if (alignment === 'left') {\r\n    return elDimensions.left - caretOffset;\r\n  }\r\n\r\n  if (alignment === 'right') {\r\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\r\n  }\r\n\r\n  if (alignment === 'center') {\r\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Position helper for the popover directive.\r\n *\r\n * @export\r\n */\r\nexport class PositionHelper {\r\n  /**\r\n   * Calculate vertical alignment position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment): number {\r\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n\r\n    if (result + popoverDimensions.height > window.innerHeight) {\r\n      result = window.innerHeight - popoverDimensions.height;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate vertical caret position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\r\n    let result;\r\n\r\n    if (alignment === 'top') {\r\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\r\n    }\r\n\r\n    if (alignment === 'bottom') {\r\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\r\n    }\r\n\r\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\r\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate horz alignment position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment): number {\r\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n\r\n    if (result + popoverDimensions.width > window.innerWidth) {\r\n      result = window.innerWidth - popoverDimensions.width;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate horz caret position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\r\n    let result;\r\n\r\n    if (alignment === 'left') {\r\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\r\n    }\r\n\r\n    if (alignment === 'right') {\r\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\r\n    }\r\n\r\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\r\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Checks if the element's position should be flipped\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing): boolean {\r\n    let flip = false;\r\n\r\n    if (placement === 'right') {\r\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'left') {\r\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'top') {\r\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'bottom') {\r\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    return flip;\r\n  }\r\n\r\n  /**\r\n   * Position caret\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment): any {\r\n    let top = 0;\r\n    let left = 0;\r\n\r\n    if (placement === PlacementTypes.right) {\r\n      left = -7;\r\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    } else if (placement === PlacementTypes.left) {\r\n      left = elmDim.width;\r\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    } else if (placement === PlacementTypes.top) {\r\n      top = elmDim.height;\r\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    } else if (placement === PlacementTypes.bottom) {\r\n      top = -7;\r\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    }\r\n\r\n    return { top, left };\r\n  }\r\n\r\n  /**\r\n   * Position content\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static positionContent(placement, elmDim, hostDim, spacing, alignment): any {\r\n    let top = 0;\r\n    let left = 0;\r\n\r\n    if (placement === PlacementTypes.right) {\r\n      left = hostDim.left + hostDim.width + spacing;\r\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\r\n    } else if (placement === PlacementTypes.left) {\r\n      left = hostDim.left - elmDim.width - spacing;\r\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\r\n    } else if (placement === PlacementTypes.top) {\r\n      top = hostDim.top - elmDim.height - spacing;\r\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\r\n    } else if (placement === PlacementTypes.bottom) {\r\n      top = hostDim.top + hostDim.height + spacing;\r\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\r\n    }\r\n\r\n    return { top, left };\r\n  }\r\n\r\n  /**\r\n   * Determine placement based on flip\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static determinePlacement(placement, elmDim, hostDim, spacing): any {\r\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\r\n\r\n    if (shouldFlip) {\r\n      if (placement === PlacementTypes.right) {\r\n        return PlacementTypes.left;\r\n      } else if (placement === PlacementTypes.left) {\r\n        return PlacementTypes.right;\r\n      } else if (placement === PlacementTypes.top) {\r\n        return PlacementTypes.bottom;\r\n      } else if (placement === PlacementTypes.bottom) {\r\n        return PlacementTypes.top;\r\n      }\r\n    }\r\n\r\n    return placement;\r\n  }\r\n}\r\n","export enum StyleTypes {\r\n  popover = 'popover' as any,\r\n  tooltip = 'tooltip' as any\r\n}\r\n","export enum AlignmentTypes {\r\n  left = 'left' as any,\r\n  center = 'center' as any,\r\n  right = 'right' as any\r\n}\r\n","export enum ShowTypes {\r\n  all = 'all' as any,\r\n  focus = 'focus' as any,\r\n  mouseover = 'mouseover' as any\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n  EmbeddedViewRef,\r\n  Type\r\n} from '@angular/core';\r\nimport { DomPortalHost, ComponentPortal } from '@angular/cdk/portal';\r\n\r\n/**\r\n * Injection service is a helper to append components\r\n * dynamically to a known location in the DOM, most\r\n * noteably for dialogs/tooltips appending to body.\r\n *\r\n * @export\r\n */\r\n@Injectable()\r\nexport class InjectionService {\r\n  static globalRootViewContainer: ViewContainerRef = null;\r\n\r\n  /**\r\n   * Sets a default global root view container. This is useful for\r\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\r\n   *\r\n   * @param container\r\n   */\r\n  static setGlobalRootViewContainer(container: ViewContainerRef): void {\r\n    InjectionService.globalRootViewContainer = container;\r\n  }\r\n\r\n  private _container: ViewContainerRef;\r\n\r\n  constructor(\r\n    private applicationRef: ApplicationRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  /**\r\n   * Gets the root view container to inject the component to.\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  getRootViewContainer(): ViewContainerRef | ComponentRef<any> {\r\n    if (this._container) return this._container;\r\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\r\n\r\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\r\n\r\n    throw new Error(\r\n      'View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Overrides the default root view container. This is useful for\r\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\r\n   *\r\n   * @param container\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  setRootViewContainer(container: ViewContainerRef): void {\r\n    this._container = container;\r\n  }\r\n\r\n  /**\r\n   * Gets the html element for a component ref.\r\n   *\r\n   * @param componentRef\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  getComponentRootNode(componentRef: any): HTMLElement {\r\n    if (componentRef.hostView && (componentRef.hostView as EmbeddedViewRef<any>).rootNodes.length > 0) {\r\n      return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    }\r\n\r\n    // the top most component root node has no `hostView`\r\n    return componentRef.location.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Gets the root component container html element.\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  getRootViewContainerNode(componentRef): HTMLElement {\r\n    return this.getComponentRootNode(componentRef);\r\n  }\r\n\r\n  /**\r\n   * Projects the bindings onto the component\r\n   *\r\n   * @param component\r\n   * @param options\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  projectComponentBindings(component: ComponentRef<any>, bindings: any): ComponentRef<any> {\r\n    if (bindings) {\r\n      if (bindings.inputs !== undefined) {\r\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\r\n        for (const bindingName of bindingKeys) {\r\n          component.instance[bindingName] = bindings.inputs[bindingName];\r\n        }\r\n      }\r\n\r\n      if (bindings.outputs !== undefined) {\r\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\r\n        for (const eventName of eventKeys) {\r\n          component.instance[eventName] = bindings.outputs[eventName];\r\n        }\r\n      }\r\n    }\r\n\r\n    return component;\r\n  }\r\n\r\n  /**\r\n   * Appends a component to a adjacent location\r\n   *\r\n   * @param componentClass\r\n   * @param [options={}]\r\n   * @param [location]\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  appendComponent<T>(componentClass: Type<T>, bindings: any = {}, location?: any): ComponentRef<any> {\r\n    if (!location) location = this.getRootViewContainer();\r\n    const appendLocation = this.getComponentRootNode(location);\r\n\r\n    const portalHost = new DomPortalHost(\r\n      appendLocation,\r\n      this.componentFactoryResolver,\r\n      this.applicationRef,\r\n      this.injector\r\n    );\r\n\r\n    const portal = new ComponentPortal(componentClass);\r\n\r\n    const componentRef = portalHost.attach(portal);\r\n    this.projectComponentBindings(componentRef, bindings);\r\n    return componentRef;\r\n  }\r\n}\r\n","/**\r\n * Throttle a function\r\n *\r\n */\r\nexport function throttle(func: any, wait: number, options?: any) {\r\n  options = options || {};\r\n  let context;\r\n  let args;\r\n  let result;\r\n  let timeout = null;\r\n  let previous = 0;\r\n\r\n  function later() {\r\n    previous = options.leading === false ? 0 : +new Date();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n  }\r\n\r\n  return function() {\r\n    const now = +new Date();\r\n\r\n    if (!previous && options.leading === false) {\r\n      previous = now;\r\n    }\r\n\r\n    const remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function throttleable(duration: number, options?: any) {\r\n  return function innerDecorator(target, key, descriptor) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: descriptor.enumerable,\r\n      get: function getter() {\r\n        Object.defineProperty(this, key, {\r\n          configurable: true,\r\n          enumerable: descriptor.enumerable,\r\n          value: throttle(descriptor.value, duration, options)\r\n        });\r\n\r\n        return this[key];\r\n      }\r\n    };\r\n  };\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  ViewEncapsulation,\r\n  HostListener,\r\n  ViewChild,\r\n  HostBinding,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { throttleable } from '../../utils/throttle';\r\nimport { PositionHelper, PlacementTypes } from './position';\r\n\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\n\r\n@Component({\r\n  selector: 'ngx-tooltip-content',\r\n  template: `\r\n    <div>\r\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\r\n      <div class=\"tooltip-content\">\r\n        <span *ngIf=\"!title\">\r\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\r\n        </span>\r\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\r\n      </div>\r\n    </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./tooltip.component.scss']\r\n})\r\nexport class TooltipContentComponent implements AfterViewInit {\r\n  @Input() host: any;\r\n  @Input() showCaret: boolean;\r\n  @Input() type: StyleTypes;\r\n  @Input() placement: PlacementTypes;\r\n  @Input() alignment: AlignmentTypes;\r\n  @Input() spacing: number;\r\n  @Input() cssClass: string;\r\n  @Input() title: string;\r\n  @Input() template: any;\r\n  @Input() context: any;\r\n\r\n  @ViewChild('caretElm') caretElm;\r\n\r\n  @HostBinding('class')\r\n  get cssClasses(): string {\r\n    let clz = 'ngx-charts-tooltip-content';\r\n    clz += ` position-${this.placement}`;\r\n    clz += ` type-${this.type}`;\r\n    clz += ` ${this.cssClass}`;\r\n    return clz;\r\n  }\r\n\r\n  constructor(public element: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(this.position.bind(this));\r\n  }\r\n\r\n  position(): void {\r\n    const nativeElm = this.element.nativeElement;\r\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\r\n\r\n    // if no dims were found, never show\r\n    if (!hostDim.height && !hostDim.width) return;\r\n\r\n    const elmDim = nativeElm.getBoundingClientRect();\r\n    this.checkFlip(hostDim, elmDim);\r\n    this.positionContent(nativeElm, hostDim, elmDim);\r\n\r\n    if (this.showCaret) {\r\n      this.positionCaret(hostDim, elmDim);\r\n    }\r\n\r\n    // animate its entry\r\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\r\n  }\r\n\r\n  positionContent(nativeElm, hostDim, elmDim): void {\r\n    const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\r\n\r\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\r\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\r\n  }\r\n\r\n  positionCaret(hostDim, elmDim): void {\r\n    const caretElm = this.caretElm.nativeElement;\r\n    const caretDimensions = caretElm.getBoundingClientRect();\r\n    const { top, left } = PositionHelper.positionCaret(\r\n      this.placement,\r\n      elmDim,\r\n      hostDim,\r\n      caretDimensions,\r\n      this.alignment\r\n    );\r\n\r\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\r\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\r\n  }\r\n\r\n  checkFlip(hostDim, elmDim): void {\r\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  @throttleable(100)\r\n  onWindowResize(): void {\r\n    this.position();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InjectionService } from './injection.service';\r\nimport { TooltipContentComponent } from './tooltip.component';\r\nimport { InjectionRegisteryService } from './injection-registery.service';\r\n@Injectable()\r\nexport class TooltipService extends InjectionRegisteryService<TooltipContentComponent> {\r\n  type: any = TooltipContentComponent;\r\n\r\n  constructor(injectionService: InjectionService) {\r\n    super(injectionService);\r\n  }\r\n}\r\n","import { ComponentRef, Type } from '@angular/core';\r\nimport { InjectionService } from './injection.service';\r\n\r\nexport interface PartialBindings {\r\n  inputs?: object;\r\n  outputs?: object;\r\n}\r\n\r\nexport abstract class InjectionRegisteryService<T = any> {\r\n  protected abstract type: Type<T>;\r\n\r\n  protected defaults: PartialBindings = {};\r\n  protected components: Map<any, Array<ComponentRef<T>>> = new Map();\r\n\r\n  constructor(public injectionService: InjectionService) {}\r\n\r\n  getByType(type: Type<T> = this.type) {\r\n    return this.components.get(type);\r\n  }\r\n\r\n  create(bindings: object): ComponentRef<T> {\r\n    return this.createByType(this.type, bindings);\r\n  }\r\n\r\n  createByType(type: Type<T>, bindings: PartialBindings): ComponentRef<T> {\r\n    bindings = this.assignDefaults(bindings);\r\n\r\n    const component = this.injectComponent(type, bindings);\r\n    this.register(type, component);\r\n\r\n    return component;\r\n  }\r\n\r\n  destroy(instance: ComponentRef<T>): void {\r\n    const compsByType = this.components.get(instance.componentType);\r\n\r\n    if (compsByType && compsByType.length) {\r\n      const idx = compsByType.indexOf(instance);\r\n\r\n      if (idx > -1) {\r\n        const component = compsByType[idx];\r\n        component.destroy();\r\n        compsByType.splice(idx, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  destroyAll(): void {\r\n    this.destroyByType(this.type);\r\n  }\r\n\r\n  destroyByType(type: Type<T>): void {\r\n    const comps = this.components.get(type);\r\n\r\n    if (comps && comps.length) {\r\n      let i = comps.length - 1;\r\n      while (i >= 0) {\r\n        this.destroy(comps[i--]);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected injectComponent(type: Type<T>, bindings: PartialBindings): ComponentRef<T> {\r\n    return this.injectionService.appendComponent(type, bindings);\r\n  }\r\n\r\n  protected assignDefaults(bindings: PartialBindings): PartialBindings {\r\n    const inputs = { ...this.defaults.inputs };\r\n    const outputs = { ...this.defaults.outputs };\r\n\r\n    if (!bindings.inputs && !bindings.outputs) {\r\n      bindings = { inputs: bindings };\r\n    }\r\n\r\n    if (inputs) {\r\n      bindings.inputs = { ...inputs, ...bindings.inputs };\r\n    }\r\n\r\n    if (outputs) {\r\n      bindings.outputs = { ...outputs, ...bindings.outputs };\r\n    }\r\n\r\n    return bindings;\r\n  }\r\n\r\n  protected register(type: Type<T>, component: ComponentRef<T>): void {\r\n    if (!this.components.has(type)) {\r\n      this.components.set(type, []);\r\n    }\r\n\r\n    const types = this.components.get(type);\r\n    types.push(component);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewContainerRef,\r\n  Renderer2,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { PlacementTypes } from './position';\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\nimport { ShowTypes } from './show.type';\r\n\r\nimport { TooltipService } from './tooltip.service';\r\n\r\n@Directive({ selector: '[ngx-tooltip]' })\r\nexport class TooltipDirective implements OnDestroy {\r\n  @Input() tooltipCssClass: string = '';\r\n  @Input() tooltipTitle: string = '';\r\n  @Input() tooltipAppendToBody: boolean = true;\r\n  @Input() tooltipSpacing: number = 10;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipShowCaret: boolean = true;\r\n  @Input() tooltipPlacement: PlacementTypes = PlacementTypes.top;\r\n  @Input() tooltipAlignment: AlignmentTypes = AlignmentTypes.center;\r\n  @Input() tooltipType: StyleTypes = StyleTypes.popover;\r\n  @Input() tooltipCloseOnClickOutside: boolean = true;\r\n  @Input() tooltipCloseOnMouseLeave: boolean = true;\r\n  @Input() tooltipHideTimeout: number = 300;\r\n  @Input() tooltipShowTimeout: number = 100;\r\n  @Input() tooltipTemplate: any;\r\n  @Input() tooltipShowEvent: ShowTypes = ShowTypes.all;\r\n  @Input() tooltipContext: any;\r\n  @Input() tooltipImmediateExit: boolean = false;\r\n\r\n  @Output() show = new EventEmitter();\r\n  @Output() hide = new EventEmitter();\r\n\r\n  private get listensForFocus(): boolean {\r\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\r\n  }\r\n\r\n  private get listensForHover(): boolean {\r\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\r\n  }\r\n\r\n  private component: any;\r\n  private timeout: any;\r\n  private mouseLeaveContentEvent: any;\r\n  private mouseEnterContentEvent: any;\r\n  private documentClickEvent: any;\r\n\r\n  constructor(\r\n    private tooltipService: TooltipService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.hideTooltip(true);\r\n  }\r\n\r\n  @HostListener('focusin')\r\n  onFocus(): void {\r\n    if (this.listensForFocus) {\r\n      this.showTooltip();\r\n    }\r\n  }\r\n\r\n  @HostListener('blur')\r\n  onBlur(): void {\r\n    if (this.listensForFocus) {\r\n      this.hideTooltip(true);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    if (this.listensForHover) {\r\n      this.showTooltip();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event.target'])\r\n  onMouseLeave(target): void {\r\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\r\n      clearTimeout(this.timeout);\r\n\r\n      if (this.component) {\r\n        const contentDom = this.component.instance.element.nativeElement;\r\n        const contains = contentDom.contains(target);\r\n        if (contains) return;\r\n      }\r\n\r\n      this.hideTooltip(this.tooltipImmediateExit);\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  onMouseClick() {\r\n    if (this.listensForHover) {\r\n      this.hideTooltip(true);\r\n    }\r\n  }\r\n\r\n  showTooltip(immediate?: boolean): void {\r\n    if (this.component || this.tooltipDisabled) return;\r\n\r\n    const time = immediate ? 0 : this.tooltipShowTimeout;\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.tooltipService.destroyAll();\r\n\r\n      const options = this.createBoundOptions();\r\n      this.component = this.tooltipService.create(options);\r\n\r\n      // add a tiny timeout to avoid event re-triggers\r\n      setTimeout(() => {\r\n        if (this.component) {\r\n          this.addHideListeners(this.component.instance.element.nativeElement);\r\n        }\r\n      }, 10);\r\n\r\n      this.show.emit(true);\r\n    }, time);\r\n  }\r\n\r\n  addHideListeners(tooltip): void {\r\n    // on mouse enter, cancel the hide triggered by the leave\r\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\r\n      clearTimeout(this.timeout);\r\n    });\r\n\r\n    // content mouse leave listener\r\n    if (this.tooltipCloseOnMouseLeave) {\r\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\r\n        this.hideTooltip(this.tooltipImmediateExit);\r\n      });\r\n    }\r\n\r\n    // content close on click outside\r\n    if (this.tooltipCloseOnClickOutside) {\r\n      this.documentClickEvent = this.renderer.listen(document, 'click', event => {\r\n        const contains = tooltip.contains(event.target);\r\n        if (!contains) this.hideTooltip();\r\n      });\r\n    }\r\n  }\r\n\r\n  hideTooltip(immediate: boolean = false): void {\r\n    if (!this.component) return;\r\n\r\n    const destroyFn = () => {\r\n      // remove events\r\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\r\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\r\n      if (this.documentClickEvent) this.documentClickEvent();\r\n\r\n      // emit events\r\n      this.hide.emit(true);\r\n\r\n      // destroy component\r\n      this.tooltipService.destroy(this.component);\r\n      this.component = undefined;\r\n    };\r\n\r\n    clearTimeout(this.timeout);\r\n    if (!immediate) {\r\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\r\n    } else {\r\n      destroyFn();\r\n    }\r\n  }\r\n\r\n  private createBoundOptions(): any {\r\n    return {\r\n      title: this.tooltipTitle,\r\n      template: this.tooltipTemplate,\r\n      host: this.viewContainerRef.element,\r\n      placement: this.tooltipPlacement,\r\n      alignment: this.tooltipAlignment,\r\n      type: this.tooltipType,\r\n      showCaret: this.tooltipShowCaret,\r\n      cssClass: this.tooltipCssClass,\r\n      spacing: this.tooltipSpacing,\r\n      context: this.tooltipContext\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TooltipDirective } from './tooltip.directive';\r\nimport { TooltipContentComponent } from './tooltip.component';\r\nimport { TooltipService } from './tooltip.service';\r\n\r\nimport { InjectionService } from './injection.service';\r\n\r\n@NgModule({\r\n  declarations: [TooltipContentComponent, TooltipDirective],\r\n  providers: [InjectionService, TooltipService],\r\n  exports: [TooltipContentComponent, TooltipDirective],\r\n  imports: [CommonModule],\r\n  entryComponents: [TooltipContentComponent]\r\n})\r\nexport class TooltipModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  ViewContainerRef,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  Output,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { TooltipService } from '../tooltip';\r\n\r\n@Component({\r\n  providers: [TooltipService],\r\n  selector: 'ngx-charts-chart',\r\n  template: `\r\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [@animationState]=\"'active'\" [@.disabled]=\"!animations\">\r\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\r\n        <ng-content></ng-content>\r\n      </svg>\r\n      <ngx-charts-scale-legend\r\n        *ngIf=\"showLegend && legendType === 'scaleLegend'\"\r\n        class=\"chart-legend\"\r\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\r\n        [valueRange]=\"legendOptions.domain\"\r\n        [colors]=\"legendOptions.colors\"\r\n        [height]=\"view[1]\"\r\n        [width]=\"legendWidth\"\r\n      >\r\n      </ngx-charts-scale-legend>\r\n      <ngx-charts-legend\r\n        *ngIf=\"showLegend && legendType === 'legend'\"\r\n        class=\"chart-legend\"\r\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\r\n        [data]=\"legendOptions.domain\"\r\n        [title]=\"legendOptions.title\"\r\n        [colors]=\"legendOptions.colors\"\r\n        [height]=\"view[1]\"\r\n        [width]=\"legendWidth\"\r\n        [activeEntries]=\"activeEntries\"\r\n        (labelClick)=\"legendLabelClick.emit($event)\"\r\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\r\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\r\n      >\r\n      </ngx-charts-legend>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [style({ opacity: 0 }), animate('500ms 100ms', style({ opacity: 1 }))])\r\n    ])\r\n  ]\r\n})\r\nexport class ChartComponent implements OnChanges {\r\n  @Input() view;\r\n  @Input() showLegend = false;\r\n  @Input() legendOptions: any;\r\n\r\n  // remove\r\n  @Input() data;\r\n  @Input() legendData;\r\n  @Input() legendType: any;\r\n  @Input() colors: any;\r\n  @Input() activeEntries: any[];\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() legendLabelClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() legendLabelActivate: EventEmitter<any> = new EventEmitter();\r\n  @Output() legendLabelDeactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  chartWidth: any;\r\n  title: any;\r\n  legendWidth: any;\r\n\r\n  constructor(private vcr: ViewContainerRef, private tooltipService: TooltipService) {\r\n    // this.tooltipService.injectionService.setRootViewContainer(this.vcr);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    let legendColumns = 0;\r\n    if (this.showLegend) {\r\n      this.legendType = this.getLegendType();\r\n\r\n      if (!this.legendOptions || this.legendOptions.position === 'right') {\r\n        if (this.legendType === 'scaleLegend') {\r\n          legendColumns = 1;\r\n        } else {\r\n          legendColumns = 2;\r\n        }\r\n      }\r\n    }\r\n\r\n    const chartColumns = 12 - legendColumns;\r\n\r\n    this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\r\n    this.legendWidth =\r\n      !this.legendOptions || this.legendOptions.position === 'right'\r\n        ? Math.floor((this.view[0] * legendColumns) / 12.0)\r\n        : this.chartWidth;\r\n  }\r\n\r\n  getLegendType(): string {\r\n    if (this.legendOptions.scaleType === 'linear') {\r\n      return 'scaleLegend';\r\n    } else {\r\n      return 'legend';\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Formats a label given a date, number or string.\r\n *\r\n * @export\r\n */\r\nexport function formatLabel(label: any): string {\r\n  if (label instanceof Date) {\r\n    label = label.toLocaleDateString();\r\n  } else {\r\n    label = label.toLocaleString();\r\n  }\r\n\r\n  return label;\r\n}\r\n\r\n/**\r\n * Escapes a label.\r\n *\r\n * @export\r\n */\r\nexport function escapeLabel(label: any): string {\r\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\r\n    return {\r\n      '&': '&amp;',\r\n      // tslint:disable-next-line: quotemark\r\n      \"'\": '&#x27;',\r\n      '`': '&#x60;',\r\n      '\"': '&quot;',\r\n      '<': '&lt;',\r\n      '>': '&gt;'\r\n    }[match];\r\n  });\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ChangeDetectorRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { formatLabel } from '../label.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-legend',\r\n  template: `\r\n    <div [style.width.px]=\"width\">\r\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\r\n        <span class=\"legend-title-text\">{{ title }}</span>\r\n      </header>\r\n      <div class=\"legend-wrap\">\r\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\r\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\r\n            <ngx-charts-legend-entry\r\n              [label]=\"entry.label\"\r\n              [formattedLabel]=\"entry.formattedLabel\"\r\n              [color]=\"entry.color\"\r\n              [isActive]=\"isActive(entry)\"\r\n              (select)=\"labelClick.emit($event)\"\r\n              (activate)=\"activate($event)\"\r\n              (deactivate)=\"deactivate($event)\"\r\n            >\r\n            </ngx-charts-legend-entry>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./legend.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LegendComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() title;\r\n  @Input() colors;\r\n  @Input() height;\r\n  @Input() width;\r\n  @Input() activeEntries;\r\n  @Input() horizontal = false;\r\n\r\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() labelActivate: EventEmitter<any> = new EventEmitter();\r\n  @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  legendEntries: any[] = [];\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.cd.markForCheck();\r\n    this.legendEntries = this.getLegendEntries();\r\n  }\r\n\r\n  getLegendEntries(): any[] {\r\n    const items = [];\r\n\r\n    for (const label of this.data) {\r\n      const formattedLabel = formatLabel(label);\r\n\r\n      const idx = items.findIndex(i => {\r\n        return i.label === formattedLabel;\r\n      });\r\n\r\n      if (idx === -1) {\r\n        items.push({\r\n          label,\r\n          formattedLabel,\r\n          color: this.colors.getColor(label)\r\n        });\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.label === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  activate(item) {\r\n    this.labelActivate.emit(item);\r\n  }\r\n\r\n  deactivate(item) {\r\n    this.labelDeactivate.emit(item);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.label;\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-scale-legend',\r\n  template: `\r\n    <div\r\n      class=\"scale-legend\"\r\n      [class.horizontal-legend]=\"horizontal\"\r\n      [style.height.px]=\"horizontal ? undefined : height\"\r\n      [style.width.px]=\"width\"\r\n    >\r\n      <div class=\"scale-legend-label\">\r\n        <span>{{ valueRange[1].toLocaleString() }}</span>\r\n      </div>\r\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\r\n      <div class=\"scale-legend-label\">\r\n        <span>{{ valueRange[0].toLocaleString() }}</span>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./scale-legend.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScaleLegendComponent implements OnChanges {\r\n  @Input() valueRange;\r\n  @Input() colors;\r\n  @Input() height;\r\n  @Input() width;\r\n  @Input() horizontal = false;\r\n\r\n  gradient: any;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\r\n    const direction = this.horizontal ? 'right' : 'bottom';\r\n    this.gradient = this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to ${direction}, ${gradientValues})`);\r\n  }\r\n\r\n  /**\r\n   * Generates the string used in the gradient stylesheet properties\r\n   * @param colors array of colors\r\n   * @param splits array of splits on a scale of (0, 1)\r\n   */\r\n  gradientString(colors, splits): string {\r\n    // add the 100%\r\n    splits.push(1);\r\n    const pairs = [];\r\n    colors.reverse().forEach((c, i) => {\r\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\r\n    });\r\n\r\n    return pairs.join(', ');\r\n  }\r\n}\r\n","import { Component, Input, Output, ChangeDetectionStrategy, HostListener, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-legend-entry',\r\n  template: `\r\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\r\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\r\n      <span class=\"legend-label-text\">\r\n        {{ trimmedLabel }}\r\n      </span>\r\n    </span>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LegendEntryComponent {\r\n  @Input() color: string;\r\n  @Input() label: any;\r\n  @Input() formattedLabel: string;\r\n  @Input() isActive: boolean = false;\r\n\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\r\n\r\n  get trimmedLabel(): string {\r\n    return this.formattedLabel || '(empty)';\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit({ name: this.label });\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit({ name: this.label });\r\n  }\r\n}\r\n","export function trimLabel(s, max = 16): string {\r\n  if (typeof s !== 'string') {\r\n    if (typeof s === 'number') {\r\n      return s + '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  s = s.trim();\r\n  if (s.length <= max) {\r\n    return s;\r\n  } else {\r\n    return `${s.slice(0, max)}...`;\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { trimLabel } from '../trim-label.helper';\r\nimport { formatLabel } from '../label.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-advanced-legend',\r\n  template: `\r\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\r\n      <div\r\n        *ngIf=\"animations\"\r\n        class=\"total-value\"\r\n        ngx-charts-count-up\r\n        [countTo]=\"roundedTotal\"\r\n        [valueFormatting]=\"valueFormatting\"\r\n      ></div>\r\n      <div class=\"total-value\" *ngIf=\"!animations\">\r\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\r\n      </div>\r\n      <div class=\"total-label\">\r\n        {{ label }}\r\n      </div>\r\n      <div class=\"legend-items-container\">\r\n        <div class=\"legend-items\">\r\n          <div\r\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\r\n            tabindex=\"-1\"\r\n            class=\"legend-item\"\r\n            (mouseenter)=\"activate.emit(legendItem.data)\"\r\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\r\n            (click)=\"select.emit(legendItem.data)\"\r\n          >\r\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\r\n            <div\r\n              *ngIf=\"animations\"\r\n              class=\"item-value\"\r\n              ngx-charts-count-up\r\n              [countTo]=\"legendItem._value\"\r\n              [valueFormatting]=\"valueFormatting\"\r\n            ></div>\r\n            <div *ngIf=\"!animations\" class=\"item-value\">\r\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\r\n            </div>\r\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\r\n            <div\r\n              *ngIf=\"animations\"\r\n              class=\"item-percent\"\r\n              ngx-charts-count-up\r\n              [countTo]=\"legendItem.percentage\"\r\n              [countSuffix]=\"'%'\"\r\n            ></div>\r\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./advanced-legend.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdvancedLegendComponent implements OnChanges {\r\n  @Input() width: number;\r\n  @Input() data;\r\n  @Input() colors;\r\n  @Input() label: string = 'Total';\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  legendItems: any[] = [];\r\n  total: number;\r\n  roundedTotal: number;\r\n\r\n  @Input() valueFormatting: (value: number) => any;\r\n  @Input() labelFormatting: (value: string) => any = label => label;\r\n  @Input() percentageFormatting: (value: number) => any = percentage => percentage;\r\n\r\n  defaultValueFormatting: (value: number) => any = value => value.toLocaleString();\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.data.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n  }\r\n\r\n  update(): void {\r\n    this.total = this.getTotal();\r\n    this.roundedTotal = this.total;\r\n\r\n    this.legendItems = this.getLegendItems();\r\n  }\r\n\r\n  getLegendItems(): any {\r\n    return this.data.map(d => {\r\n      const label = formatLabel(d.name);\r\n      const value = d.value;\r\n      const color = this.colors.getColor(label);\r\n      const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\r\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\r\n\r\n      return {\r\n        _value: value,\r\n        data: d,\r\n        value,\r\n        color,\r\n        label: formattedLabel,\r\n        displayLabel: trimLabel(formattedLabel, 20),\r\n        origialLabel: d.name,\r\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\r\n      };\r\n    });\r\n  }\r\n\r\n  trackBy(item) {\r\n    return item.formattedLabel;\r\n  }\r\n}\r\n","const cache = {};\r\n\r\n/**\r\n * Generates a short id.\r\n *\r\n * Description:\r\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\r\n *   This should only be used for JavaScript specific models.\r\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\r\n *\r\n *   Example: `ebgf`\r\n */\r\nexport function id(): string {\r\n  let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\r\n\r\n  // append a 'a' because neo gets mad\r\n  newId = `a${newId}`;\r\n\r\n  // ensure not already used\r\n  if (!cache[newId]) {\r\n    cache[newId] = true;\r\n    return newId;\r\n  }\r\n\r\n  return id();\r\n}\r\n","export let colorSets = [\r\n  {\r\n    name: 'vivid',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#647c8a',\r\n      '#3f51b5',\r\n      '#2196f3',\r\n      '#00b862',\r\n      '#afdf0a',\r\n      '#a7b61a',\r\n      '#f3e562',\r\n      '#ff9800',\r\n      '#ff5722',\r\n      '#ff4514'\r\n    ]\r\n  },\r\n  {\r\n    name: 'natural',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#bf9d76',\r\n      '#e99450',\r\n      '#d89f59',\r\n      '#f2dfa7',\r\n      '#a5d7c6',\r\n      '#7794b1',\r\n      '#afafaf',\r\n      '#707160',\r\n      '#ba9383',\r\n      '#d9d5c3'\r\n    ]\r\n  },\r\n  {\r\n    name: 'cool',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#a8385d',\r\n      '#7aa3e5',\r\n      '#a27ea8',\r\n      '#aae3f5',\r\n      '#adcded',\r\n      '#a95963',\r\n      '#8796c0',\r\n      '#7ed3ed',\r\n      '#50abcc',\r\n      '#ad6886'\r\n    ]\r\n  },\r\n  {\r\n    name: 'fire',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\r\n  },\r\n  {\r\n    name: 'solar',\r\n    selectable: true,\r\n    group: 'Continuous',\r\n    domain: [\r\n      '#fff8e1',\r\n      '#ffecb3',\r\n      '#ffe082',\r\n      '#ffd54f',\r\n      '#ffca28',\r\n      '#ffc107',\r\n      '#ffb300',\r\n      '#ffa000',\r\n      '#ff8f00',\r\n      '#ff6f00'\r\n    ]\r\n  },\r\n  {\r\n    name: 'air',\r\n    selectable: true,\r\n    group: 'Continuous',\r\n    domain: [\r\n      '#e1f5fe',\r\n      '#b3e5fc',\r\n      '#81d4fa',\r\n      '#4fc3f7',\r\n      '#29b6f6',\r\n      '#03a9f4',\r\n      '#039be5',\r\n      '#0288d1',\r\n      '#0277bd',\r\n      '#01579b'\r\n    ]\r\n  },\r\n  {\r\n    name: 'aqua',\r\n    selectable: true,\r\n    group: 'Continuous',\r\n    domain: [\r\n      '#e0f7fa',\r\n      '#b2ebf2',\r\n      '#80deea',\r\n      '#4dd0e1',\r\n      '#26c6da',\r\n      '#00bcd4',\r\n      '#00acc1',\r\n      '#0097a7',\r\n      '#00838f',\r\n      '#006064'\r\n    ]\r\n  },\r\n  {\r\n    name: 'flame',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#A10A28',\r\n      '#D3342D',\r\n      '#EF6D49',\r\n      '#FAAD67',\r\n      '#FDDE90',\r\n      '#DBED91',\r\n      '#A9D770',\r\n      '#6CBA67',\r\n      '#2C9653',\r\n      '#146738'\r\n    ]\r\n  },\r\n  {\r\n    name: 'ocean',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#1D68FB',\r\n      '#33C0FC',\r\n      '#4AFFFE',\r\n      '#AFFFFF',\r\n      '#FFFC63',\r\n      '#FDBD2D',\r\n      '#FC8A25',\r\n      '#FA4F1E',\r\n      '#FA141B',\r\n      '#BA38D1'\r\n    ]\r\n  },\r\n  {\r\n    name: 'forest',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#55C22D',\r\n      '#C1F33D',\r\n      '#3CC099',\r\n      '#AFFFFF',\r\n      '#8CFC9D',\r\n      '#76CFFA',\r\n      '#BA60FB',\r\n      '#EE6490',\r\n      '#C42A1C',\r\n      '#FC9F32'\r\n    ]\r\n  },\r\n  {\r\n    name: 'horizon',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#2597FB',\r\n      '#65EBFD',\r\n      '#99FDD0',\r\n      '#FCEE4B',\r\n      '#FEFCFA',\r\n      '#FDD6E3',\r\n      '#FCB1A8',\r\n      '#EF6F7B',\r\n      '#CB96E8',\r\n      '#EFDEE0'\r\n    ]\r\n  },\r\n  {\r\n    name: 'neons',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#FF3333',\r\n      '#FF33FF',\r\n      '#CC33FF',\r\n      '#0000FF',\r\n      '#33CCFF',\r\n      '#33FFFF',\r\n      '#33FF66',\r\n      '#CCFF33',\r\n      '#FFCC00',\r\n      '#FF6600'\r\n    ]\r\n  },\r\n  {\r\n    name: 'picnic',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#FAC51D',\r\n      '#66BD6D',\r\n      '#FAA026',\r\n      '#29BB9C',\r\n      '#E96B56',\r\n      '#55ACD2',\r\n      '#B7332F',\r\n      '#2C83C9',\r\n      '#9166B8',\r\n      '#92E7E8'\r\n    ]\r\n  },\r\n  {\r\n    name: 'night',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#2B1B5A',\r\n      '#501356',\r\n      '#183356',\r\n      '#28203F',\r\n      '#391B3C',\r\n      '#1E2B3C',\r\n      '#120634',\r\n      '#2D0432',\r\n      '#051932',\r\n      '#453080',\r\n      '#75267D',\r\n      '#2C507D',\r\n      '#4B3880',\r\n      '#752F7D',\r\n      '#35547D'\r\n    ]\r\n  },\r\n  {\r\n    name: 'nightLights',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#4e31a5',\r\n      '#9c25a7',\r\n      '#3065ab',\r\n      '#57468b',\r\n      '#904497',\r\n      '#46648b',\r\n      '#32118d',\r\n      '#a00fb3',\r\n      '#1052a2',\r\n      '#6e51bd',\r\n      '#b63cc3',\r\n      '#6c97cb',\r\n      '#8671c1',\r\n      '#b455be',\r\n      '#7496c3'\r\n    ]\r\n  }\r\n];\r\n","export function sortLinear(data, property, direction = 'asc') {\r\n  return data.sort((a, b) => {\r\n    if (direction === 'asc') {\r\n      return a[property] - b[property];\r\n    } else {\r\n      return b[property] - a[property];\r\n    }\r\n  });\r\n}\r\n\r\nexport function sortByDomain(data, property, direction = 'asc', domain) {\r\n  return data.sort((a, b) => {\r\n    const aVal = a[property];\r\n    const bVal = b[property];\r\n\r\n    const aIdx = domain.indexOf(aVal);\r\n    const bIdx = domain.indexOf(bVal);\r\n\r\n    if (direction === 'asc') {\r\n      return aIdx - bIdx;\r\n    } else {\r\n      return bIdx - aIdx;\r\n    }\r\n  });\r\n}\r\n\r\nexport function sortByTime(data, property, direction = 'asc') {\r\n  return data.sort((a, b) => {\r\n    const aDate = a[property].getTime();\r\n    const bDate = b[property].getTime();\r\n\r\n    if (direction === 'asc') {\r\n      if (aDate > bDate) return 1;\r\n      if (bDate > aDate) return -1;\r\n      return 0;\r\n    } else {\r\n      if (aDate > bDate) return -1;\r\n      if (bDate > aDate) return 1;\r\n      return 0;\r\n    }\r\n  });\r\n}\r\n","import * as d3_color from 'd3-color';\r\n\r\n/**\r\n * Converts a hex to RGB\r\n *\r\n * @export\r\n */\r\nexport function hexToRgb(value: string): any {\r\n  // deprecated, use d3.color()\r\n  return d3_color.rgb(value);\r\n}\r\n\r\n/**\r\n * Accepts a color (string) and returns a inverted hex color (string)\r\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\r\n *\r\n * @export\r\n */\r\nexport function invertColor(value: string): string {\r\n  const color = d3_color.rgb(value);\r\n  const { r, g, b, opacity } = color;\r\n  if (opacity === 0) {\r\n    return color.toString();\r\n  }\r\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\r\n  const depth = yiq >= 128 ? -0.8 : 0.8;\r\n\r\n  return shadeRGBColor(color, depth);\r\n}\r\n\r\n/**\r\n * Given a rgb, it will darken/lighten\r\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\r\n *\r\n * @export\r\n * @param \\{ r, g, b }\r\n */\r\nexport function shadeRGBColor({ r, g, b }, percent) {\r\n  const t = percent < 0 ? 0 : 255;\r\n  const p = percent < 0 ? percent * -1 : percent;\r\n\r\n  r = Math.round((t - r) * p) + r;\r\n  g = Math.round((t - g) * p) + g;\r\n  b = Math.round((t - b) * p) + b;\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n}\r\n","import { Output, EventEmitter, NgZone, Directive } from '@angular/core';\r\n\r\n/**\r\n * Visibility Observer\r\n */\r\n@Directive()\r\nexport class VisibilityObserver {\r\n  @Output() visible: EventEmitter<any> = new EventEmitter();\r\n\r\n  timeout: any;\r\n  isVisible: boolean = false;\r\n\r\n  constructor(private element: any, private zone: NgZone) {\r\n    this.runCheck();\r\n  }\r\n\r\n  destroy(): void {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  onVisibilityChange(): void {\r\n    // trigger zone recalc for columns\r\n    this.zone.run(() => {\r\n      this.isVisible = true;\r\n      this.visible.emit(true);\r\n    });\r\n  }\r\n\r\n  runCheck(): void {\r\n    const check = () => {\r\n      if (!this.element) {\r\n        return;\r\n      }\r\n\r\n      // https://davidwalsh.name/offsetheight-visibility\r\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\r\n\r\n      if (offsetHeight && offsetWidth) {\r\n        clearTimeout(this.timeout);\r\n        this.onVisibilityChange();\r\n      } else {\r\n        clearTimeout(this.timeout);\r\n        this.zone.runOutsideAngular(() => {\r\n          this.timeout = setTimeout(() => check(), 100);\r\n        });\r\n      }\r\n    };\r\n\r\n    this.zone.runOutsideAngular(() => {\r\n      this.timeout = setTimeout(() => check());\r\n    });\r\n  }\r\n}\r\n","export function isDate(value) {\r\n  return toString.call(value) === '[object Date]';\r\n}\r\n\r\nexport function isNumber(value) {\r\n  return typeof value === 'number';\r\n}\r\n","import {\n  ElementRef,\n  NgZone,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport { fromEvent as observableFromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { VisibilityObserver } from '../utils';\n\n@Component({\n  selector: 'base-chart',\n  template: `\n    <div></div>\n  `\n})\nexport class BaseChartComponent implements OnChanges, AfterViewInit, OnDestroy {\n  @Input() results: any;\n  @Input() view: [number, number];\n  @Input() scheme: any = 'cool';\n  @Input() schemeType: string = 'ordinal';\n  @Input() customColors: any;\n  @Input() animations: boolean = true;\n  @Input() scaleType = 'log';\n  @Output() select = new EventEmitter();\n\n  width: number;\n  height: number;\n  resizeSubscription: any;\n  visibilityObserver: VisibilityObserver;\n\n  constructor(protected chartElement: ElementRef, protected zone: NgZone, protected cd: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this.bindWindowResizeEvent();\n\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n\n    if (!this.height) {\n      this.height = 400;\n    }\n\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n\n  getContainerDims(): any {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n\n    if (hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n\n    if (width && height) {\n      return { width, height };\n    }\n\n    return null;\n  }\n\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates(): void {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n      g.label = g.name;\n      if (g.label instanceof Date) {\n        g.label = g.label.toLocaleDateString();\n      }\n\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          d.label = d.name;\n          if (d.label instanceof Date) {\n            d.label = d.label.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n\n  protected unbindEvents(): void {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  private bindWindowResizeEvent(): void {\n    const source = observableFromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n\n  /**\n   * Clones the data into a new object\n   *\n   * @memberOf BaseChart\n   */\n  private cloneData(data): any {\n    const results = [];\n\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n}\n","import { Component, Input, ElementRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-axis-label]',\r\n  template: `\r\n    <svg:text\r\n      [attr.stroke-width]=\"strokeWidth\"\r\n      [attr.x]=\"x\"\r\n      [attr.y]=\"y\"\r\n      [attr.text-anchor]=\"textAnchor\"\r\n      [attr.transform]=\"transform\"\r\n    >\r\n      {{ label }}\r\n    </svg:text>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AxisLabelComponent implements OnChanges {\r\n  @Input() orient;\r\n  @Input() label;\r\n  @Input() offset;\r\n  @Input() width;\r\n  @Input() height;\r\n\r\n  x: any;\r\n  y: any;\r\n  transform: any;\r\n  strokeWidth: any;\r\n  textAnchor: any;\r\n  element: ElementRef;\r\n  textHeight = 25;\r\n  margin = 5;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.strokeWidth = '0.01';\r\n    this.textAnchor = 'middle';\r\n    this.transform = '';\r\n\r\n    switch (this.orient) {\r\n      case 'top':\r\n        this.y = this.offset;\r\n        this.x = this.width / 2;\r\n        break;\r\n      case 'bottom':\r\n        this.y = this.offset;\r\n        this.x = this.width / 2;\r\n        break;\r\n      case 'left':\r\n        this.y = -(this.offset + this.textHeight + this.margin);\r\n        this.x = -this.height / 2;\r\n        this.transform = 'rotate(270)';\r\n        break;\r\n      case 'right':\r\n        this.y = this.offset + this.margin;\r\n        this.x = -this.height / 2;\r\n        this.transform = 'rotate(270)';\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n}\r\n","export function reduceTicks(ticks, maxTicks) {\r\n  if (ticks.length > maxTicks) {\r\n    const reduced = [];\r\n    const modulus = Math.floor(ticks.length / maxTicks);\r\n    for (let i = 0; i < ticks.length; i++) {\r\n      if (i % modulus === 0) {\r\n        reduced.push(ticks[i]);\r\n      }\r\n    }\r\n    ticks = reduced;\r\n  }\r\n\r\n  return ticks;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ElementRef,\r\n  ViewChild,\r\n  SimpleChanges,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { trimLabel } from '../trim-label.helper';\r\nimport { reduceTicks } from './ticks.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-x-axis-ticks]',\r\n  template: `\r\n    <svg:g #ticksel>\r\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\r\n        <title>{{ tickFormat(tick) }}</title>\r\n        <svg:text\r\n          stroke-width=\"0.01\"\r\n          [attr.text-anchor]=\"textAnchor\"\r\n          [attr.transform]=\"textTransform\"\r\n          [style.font-size]=\"'12px'\"\r\n        >\r\n          {{ tickTrim(tickFormat(tick)) }}\r\n        </svg:text>\r\n      </svg:g>\r\n    </svg:g>\r\n\r\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\r\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\r\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\r\n      </svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class XAxisTicksComponent implements OnChanges, AfterViewInit {\r\n  @Input() scale;\r\n  @Input() orient;\r\n  @Input() tickArguments = [5];\r\n  @Input() tickValues: any[];\r\n  @Input() tickStroke = '#ccc';\r\n  @Input() trimTicks: boolean = true;\r\n  @Input() maxTickLength: number = 16;\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() gridLineHeight;\r\n  @Input() width;\r\n  @Input() rotateTicks: boolean = true;\r\n\r\n  @Output() dimensionsChanged = new EventEmitter();\r\n\r\n  verticalSpacing: number = 20;\r\n  rotateLabels: boolean = false;\r\n  innerTickSize: number = 6;\r\n  outerTickSize: number = 6;\r\n  tickPadding: number = 3;\r\n  textAnchor: string = 'middle';\r\n  maxTicksLength: number = 0;\r\n  maxAllowedLength: number = 16;\r\n  adjustedScale: any;\r\n  textTransform: any;\r\n  ticks: any;\r\n  tickFormat: (o: any) => any;\r\n  height: number = 0;\r\n\r\n  @ViewChild('ticksel') ticksElement: ElementRef;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.updateDims());\r\n  }\r\n\r\n  updateDims(): void {\r\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\r\n    if (height !== this.height) {\r\n      this.height = height;\r\n      this.dimensionsChanged.emit({ height });\r\n      setTimeout(() => this.updateDims());\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    const scale = this.scale;\r\n    this.ticks = this.getTicks();\r\n\r\n    if (this.tickFormatting) {\r\n      this.tickFormat = this.tickFormatting;\r\n    } else if (scale.tickFormat) {\r\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\r\n    } else {\r\n      this.tickFormat = function(d) {\r\n        if (d.constructor.name === 'Date') {\r\n          return d.toLocaleDateString();\r\n        }\r\n        return d.toLocaleString();\r\n      };\r\n    }\r\n\r\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\r\n\r\n    this.adjustedScale = this.scale.bandwidth\r\n      ? function(d) {\r\n          return this.scale(d) + this.scale.bandwidth() * 0.5;\r\n        }\r\n      : this.scale;\r\n\r\n    this.textTransform = '';\r\n    if (angle && angle !== 0) {\r\n      this.textTransform = `rotate(${angle})`;\r\n      this.textAnchor = 'end';\r\n      this.verticalSpacing = 10;\r\n    } else {\r\n      this.textAnchor = 'middle';\r\n    }\r\n\r\n    setTimeout(() => this.updateDims());\r\n  }\r\n\r\n  getRotationAngle(ticks): number {\r\n    let angle = 0;\r\n    this.maxTicksLength = 0;\r\n    for (let i = 0; i < ticks.length; i++) {\r\n      const tick = this.tickFormat(ticks[i]).toString();\r\n      let tickLength = tick.length;\r\n      if (this.trimTicks) {\r\n        tickLength = this.tickTrim(tick).length;\r\n      }\r\n\r\n      if (tickLength > this.maxTicksLength) {\r\n        this.maxTicksLength = tickLength;\r\n      }\r\n    }\r\n\r\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\r\n    const charWidth = 8; // need to measure this\r\n    const wordWidth = len * charWidth;\r\n\r\n    let baseWidth = wordWidth;\r\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\r\n\r\n    // calculate optimal angle\r\n    while (baseWidth > maxBaseWidth && angle > -90) {\r\n      angle -= 30;\r\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\r\n    }\r\n\r\n    return angle;\r\n  }\r\n\r\n  getTicks() {\r\n    let ticks;\r\n    const maxTicks = this.getMaxTicks(20);\r\n    const maxScaleTicks = this.getMaxTicks(100);\r\n\r\n    if (this.tickValues) {\r\n      ticks = this.tickValues;\r\n    } else if (this.scale.ticks) {\r\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\r\n    } else {\r\n      ticks = this.scale.domain();\r\n      ticks = reduceTicks(ticks, maxTicks);\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  getMaxTicks(tickWidth: number): number {\r\n    return Math.floor(this.width / tickWidth);\r\n  }\r\n\r\n  tickTransform(tick): string {\r\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\r\n  }\r\n\r\n  gridLineTransform(): string {\r\n    return `translate(0,${-this.verticalSpacing - 5})`;\r\n  }\r\n\r\n  tickTrim(label: string): string {\r\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ViewChild,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-x-axis]',\r\n  template: `\r\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\r\n      <svg:g\r\n        ngx-charts-x-axis-ticks\r\n        *ngIf=\"xScale\"\r\n        [trimTicks]=\"trimTicks\"\r\n        [rotateTicks]=\"rotateTicks\"\r\n        [maxTickLength]=\"maxTickLength\"\r\n        [tickFormatting]=\"tickFormatting\"\r\n        [tickArguments]=\"tickArguments\"\r\n        [tickStroke]=\"tickStroke\"\r\n        [scale]=\"xScale\"\r\n        [orient]=\"xOrient\"\r\n        [showGridLines]=\"showGridLines\"\r\n        [gridLineHeight]=\"dims.height\"\r\n        [width]=\"dims.width\"\r\n        [tickValues]=\"ticks\"\r\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-axis-label\r\n        *ngIf=\"showLabel\"\r\n        [label]=\"labelText\"\r\n        [offset]=\"labelOffset\"\r\n        [orient]=\"'bottom'\"\r\n        [height]=\"dims.height\"\r\n        [width]=\"dims.width\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class XAxisComponent implements OnChanges {\r\n  @Input() xScale;\r\n  @Input() dims;\r\n  @Input() trimTicks: boolean;\r\n  @Input() rotateTicks: boolean = true;\r\n  @Input() maxTickLength: number;\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() showLabel;\r\n  @Input() labelText;\r\n  @Input() ticks: any[];\r\n  @Input() xAxisTickInterval;\r\n  @Input() xAxisTickCount: any;\r\n  @Input() xOrient: string = 'bottom';\r\n  @Input() xAxisOffset: number = 0;\r\n\r\n  @Output() dimensionsChanged = new EventEmitter();\r\n\r\n  xAxisClassName: string = 'x axis';\r\n\r\n  tickArguments: any;\r\n  transform: any;\r\n  labelOffset: number = 0;\r\n  fill: string = 'none';\r\n  stroke: string = 'stroke';\r\n  tickStroke: string = '#ccc';\r\n  strokeWidth: string = 'none';\r\n  padding: number = 5;\r\n\r\n  @ViewChild(XAxisTicksComponent) ticksComponent: XAxisTicksComponent;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\r\n\r\n    if (typeof this.xAxisTickCount !== 'undefined') {\r\n      this.tickArguments = [this.xAxisTickCount];\r\n    }\r\n  }\r\n\r\n  emitTicksHeight({ height }): void {\r\n    const newLabelOffset = height + 25 + 5;\r\n    if (newLabelOffset !== this.labelOffset) {\r\n      this.labelOffset = newLabelOffset;\r\n      setTimeout(() => {\r\n        this.dimensionsChanged.emit({ height });\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Generates a rounded rectanglar path\r\n *\r\n * @export\r\n * @param x, y, w, h, r, tl, tr, bl, br\r\n */\r\nexport function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {\r\n  let retval = '';\r\n\r\n  w = Math.floor(w);\r\n  h = Math.floor(h);\r\n\r\n  w = w === 0 ? 1 : w;\r\n  h = h === 0 ? 1 : h;\r\n\r\n  retval = `M${[x + r, y]}`;\r\n  retval += `h${w - 2 * r}`;\r\n\r\n  if (tr) {\r\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\r\n  } else {\r\n    retval += `h${r}v${r}`;\r\n  }\r\n\r\n  retval += `v${h - 2 * r}`;\r\n\r\n  if (br) {\r\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\r\n  } else {\r\n    retval += `v${r}h${-r}`;\r\n  }\r\n\r\n  retval += `h${2 * r - w}`;\r\n\r\n  if (bl) {\r\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\r\n  } else {\r\n    retval += `h${-r}v${-r}`;\r\n  }\r\n\r\n  retval += `v${2 * r - h}`;\r\n\r\n  if (tl) {\r\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\r\n  } else {\r\n    retval += `v${-r}h${r}`;\r\n  }\r\n\r\n  retval += `z`;\r\n\r\n  return retval;\r\n}\r\n","declare let global: any;\r\n\r\n// If we don't check whether 'window' and 'global' variables are defined,\r\n// code will fail in browser/node with 'variable is undefined' error.\r\nlet root: any;\r\nif (typeof window !== 'undefined') {\r\n  root = window;\r\n} else if (typeof global !== 'undefined') {\r\n  root = global;\r\n}\r\n\r\n// tslint:disable-next-line:variable-name\r\nexport const MouseEvent = root.MouseEvent as MouseEvent & {\r\n  prototype?: MouseEvent;\r\n  new (typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\r\n};\r\n\r\nexport function createMouseEvent(name: string, bubbles: boolean = false, cancelable: boolean = true): MouseEvent {\r\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\r\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\r\n  if (typeof MouseEvent === 'function') {\r\n    // Sane browsers\r\n    return new MouseEvent(name, { bubbles, cancelable });\r\n  } else {\r\n    // IE\r\n    const event = document.createEvent('MouseEvent');\r\n    event.initEvent(name, bubbles, cancelable);\r\n    return event;\r\n  }\r\n}\r\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\nimport { roundedRect } from '../../common/shape.helper';\n\n@Component({\n  selector: 'g[ngx-charts-y-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ getLogTick(tickFormat(tick)) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ getLogTick(tickTrim(tickFormat(tick))) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === 'left'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === 'right'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisTicksComponent implements OnChanges, AfterViewInit {\n  @Input() scale;\n  @Input() scaleType;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks: boolean = true;\n  @Input() maxTickLength: number = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineWidth;\n  @Input() height;\n  @Input() referenceLines;\n  @Input() showRefLabels: boolean = false;\n  @Input() showRefLines: boolean = false;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  innerTickSize: any = 6;\n  tickPadding: any = 3;\n  tickSpacing: any;\n  verticalSpacing: number = 20;\n  textAnchor: any = 'middle';\n  dy: any;\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n  adjustedScale: any;\n  transform: (o: any) => string;\n  tickFormat: (o: any) => string;\n  ticks: any;\n  width: number = 0;\n  outerTickSize: number = 6;\n  rotateLabels: boolean = false;\n  refMax: number;\n  refMin: number;\n  referenceLineLength: number = 0;\n  referenceAreaPath: string;\n\n  @ViewChild('ticksel') ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({ width });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    let scale;\n    const sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n\n    scale = this.scale;\n    this.ticks = this.getTicks();\n    console.log(this.ticks);\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n\n    this.adjustedScale = scale.bandwidth\n      ? function(d) {\n          return scale(d) + scale.bandwidth() * 0.5;\n        }\n      : scale;\n\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n\n    switch (this.orient) {\n      case 'top':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'bottom':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'left':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'end';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case 'right':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'start';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n  getLogTick(tick: any): any {\n    console.log(this.scaleType);\n    if (this.scaleType === 'log') {\n      return Math.pow(10, tick);\n    } else {\n      return tick;\n    }\n  }\n\n  setReferencelines(): void {\n    this.refMin = this.adjustedScale(\n      Math.min.apply(\n        null,\n        this.referenceLines.map(item => item.value)\n      )\n    );\n    this.refMax = this.adjustedScale(\n      Math.max.apply(\n        null,\n        this.referenceLines.map(item => item.value)\n      )\n    );\n    this.referenceLineLength = this.referenceLines.length;\n\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n      false,\n      false,\n      false,\n      false\n    ]);\n  }\n\n  getTicks(): any {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickHeight: number): number {\n    return Math.floor(this.height / tickHeight);\n  }\n\n  tickTransform(tick): string {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n\n  gridLineTransform(): string {\n    return `translate(5,0)`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\n\n@Component({\n  selector: 'g[ngx-charts-y-axis]',\n  template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [scaleType]=\"scaleType\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"    \n      ></svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisComponent implements OnChanges {\n  @Input() yScale;\n  @Input() scaleType;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() ticks: any[];\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() yAxisTickInterval;\n  @Input() yAxisTickCount: any;\n  @Input() yOrient: string = 'left';\n  @Input() referenceLines;\n  @Input() showRefLines;\n  @Input() showRefLabels;\n  @Input() yAxisOffset: number = 0;\n  @Output() dimensionsChanged = new EventEmitter();\n\n  yAxisClassName: string = 'y axis';\n  tickArguments: any;\n  offset: any;\n  transform: any;\n  labelOffset: number = 15;\n  fill: string = 'none';\n  stroke: string = '#CCC';\n  tickStroke: string = '#CCC';\n  strokeWidth: number = 1;\n  padding: number = 5;\n\n  @ViewChild(YAxisTicksComponent) ticksComponent: YAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === 'right') {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.offset = this.offset;\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n\n  emitTicksWidth({ width }): void {\n    if (width !== this.labelOffset && this.yOrient === 'right') {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({ width });\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({ width });\n      }, 0);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { AxisLabelComponent } from './axis-label.component';\r\nimport { XAxisComponent } from './x-axis.component';\r\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\r\nimport { YAxisComponent } from './y-axis.component';\r\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\r\n  exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\r\n})\r\nexport class AxesModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  OnChanges,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\nimport { id } from '../utils/id';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-circle-series]',\r\n  template: `\r\n    <svg:g *ngIf=\"circle\">\r\n      <defs>\r\n        <svg:g\r\n          ngx-charts-svg-linear-gradient\r\n          orientation=\"vertical\"\r\n          [name]=\"gradientId\"\r\n          [stops]=\"circle.gradientStops\"\r\n        />\r\n      </defs>\r\n      <svg:rect\r\n        *ngIf=\"barVisible && type === 'standard'\"\r\n        [@animationState]=\"'active'\"\r\n        [attr.x]=\"circle.cx - circle.radius\"\r\n        [attr.y]=\"circle.cy\"\r\n        [attr.width]=\"circle.radius * 2\"\r\n        [attr.height]=\"circle.height\"\r\n        [attr.fill]=\"gradientFill\"\r\n        class=\"tooltip-bar\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-circle\r\n        class=\"circle\"\r\n        [cx]=\"circle.cx\"\r\n        [cy]=\"circle.cy\"\r\n        [r]=\"circle.radius\"\r\n        [fill]=\"circle.color\"\r\n        [class.active]=\"isActive({ name: circle.seriesName })\"\r\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\r\n        [data]=\"circle.value\"\r\n        [classNames]=\"circle.classNames\"\r\n        (select)=\"onClick(circle.data)\"\r\n        (activate)=\"activateCircle()\"\r\n        (deactivate)=\"deactivateCircle()\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'top'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipContext]=\"circle.data\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0\r\n        }),\r\n        animate(250, style({ opacity: 1 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class CircleSeriesComponent implements OnChanges, OnInit {\r\n  @Input() data;\r\n  @Input() type = 'standard';\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors: ColorHelper;\r\n  @Input() scaleType;\r\n  @Input() visibleValue;\r\n  @Input() activeEntries: any[];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  areaPath: any;\r\n  circle: any; // active circle\r\n  barVisible: boolean = false;\r\n  gradientId: string;\r\n  gradientFill: string;\r\n\r\n  ngOnInit() {\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientFill = `url(#${this.gradientId})`;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.circle = this.getActiveCircle();\r\n  }\r\n\r\n  getActiveCircle(): {} {\r\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\r\n      const label = d.name;\r\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\r\n    });\r\n\r\n    if (indexActiveDataPoint === -1) {\r\n      // No valid point is 'active/hovered over' at this moment.\r\n      return undefined;\r\n    }\r\n\r\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\r\n  }\r\n\r\n  mapDataPointToCircle(d: any, i: number): any {\r\n    const seriesName = this.data.name;\r\n\r\n    const value = d.value;\r\n    const label = d.name;\r\n    const tooltipLabel = formatLabel(label);\r\n\r\n    let cx;\r\n    if (this.scaleType === 'time') {\r\n      cx = this.xScale(label);\r\n    } else if (this.scaleType === 'linear') {\r\n      cx = this.xScale(Number(label));\r\n    } else {\r\n      cx = this.xScale(label);\r\n    }\r\n\r\n    const cy = this.yScale(this.type === 'standard' ? value : d.d1);\r\n    const radius = 5;\r\n    const height = this.yScale.range()[0] - cy;\r\n    const opacity = 1;\r\n\r\n    let color;\r\n    if (this.colors.scaleType === 'linear') {\r\n      if (this.type === 'standard') {\r\n        color = this.colors.getColor(value);\r\n      } else {\r\n        color = this.colors.getColor(d.d1);\r\n      }\r\n    } else {\r\n      color = this.colors.getColor(seriesName);\r\n    }\r\n\r\n    const data = Object.assign({}, d, {\r\n      series: seriesName,\r\n      value,\r\n      name: label\r\n    });\r\n\r\n    return {\r\n      classNames: [`circle-data-${i}`],\r\n      value,\r\n      label,\r\n      data,\r\n      cx,\r\n      cy,\r\n      radius,\r\n      height,\r\n      tooltipLabel,\r\n      color,\r\n      opacity,\r\n      seriesName,\r\n      gradientStops: this.getGradientStops(color),\r\n      min: d.min,\r\n      max: d.max\r\n    };\r\n  }\r\n\r\n  getTooltipText({ tooltipLabel, value, seriesName, min, max }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} â¢ ${escapeLabel(tooltipLabel)}</span>\r\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\r\n    `;\r\n  }\r\n\r\n  getTooltipMinMaxText(min: any, max: any) {\r\n    if (min !== undefined || max !== undefined) {\r\n      let result = ' (';\r\n      if (min !== undefined) {\r\n        if (max === undefined) {\r\n          result += 'â¥';\r\n        }\r\n        result += min.toLocaleString();\r\n        if (max !== undefined) {\r\n          result += ' - ';\r\n        }\r\n      } else if (max !== undefined) {\r\n        result += 'â¤';\r\n      }\r\n      if (max !== undefined) {\r\n        result += max.toLocaleString();\r\n      }\r\n      result += ')';\r\n      return result;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getGradientStops(color) {\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color,\r\n        opacity: 0.2\r\n      },\r\n      {\r\n        offset: 100,\r\n        color,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  activateCircle(): void {\r\n    this.barVisible = true;\r\n    this.activate.emit({ name: this.data.name });\r\n  }\r\n\r\n  deactivateCircle(): void {\r\n    this.barVisible = false;\r\n    this.circle.opacity = 0;\r\n    this.deactivate.emit({ name: this.data.name });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  HostListener\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-circle]',\r\n  template: `\r\n    <svg:circle\r\n      [attr.cx]=\"cx\"\r\n      [attr.cy]=\"cy\"\r\n      [attr.r]=\"r\"\r\n      [attr.fill]=\"fill\"\r\n      [attr.stroke]=\"stroke\"\r\n      [attr.opacity]=\"circleOpacity\"\r\n      [attr.class]=\"classNames\"\r\n      [attr.pointer-events]=\"pointerEvents\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CircleComponent implements OnChanges {\r\n  @Input() cx;\r\n  @Input() cy;\r\n  @Input() r;\r\n  @Input() fill;\r\n  @Input() stroke;\r\n  @Input() data;\r\n  @Input() classNames;\r\n  @Input() circleOpacity;\r\n  @Input() pointerEvents;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.select.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit(this.data);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\r\n    this.classNames += 'circle';\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-grid-panel]',\r\n  template: `\r\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GridPanelComponent {\r\n  @Input() path;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() x;\r\n  @Input() y;\r\n}\r\n","import { Component, SimpleChanges, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-grid-panel-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-grid-panel\r\n      *ngFor=\"let gridPanel of gridPanels\"\r\n      [height]=\"gridPanel.height\"\r\n      [width]=\"gridPanel.width\"\r\n      [x]=\"gridPanel.x\"\r\n      [y]=\"gridPanel.y\"\r\n      [class.grid-panel]=\"true\"\r\n      [class.odd]=\"gridPanel.class === 'odd'\"\r\n      [class.even]=\"gridPanel.class === 'even'\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GridPanelSeriesComponent implements OnChanges {\r\n  gridPanels: any[];\r\n\r\n  @Input()\r\n  data;\r\n\r\n  @Input()\r\n  dims;\r\n\r\n  @Input()\r\n  xScale;\r\n\r\n  @Input()\r\n  yScale;\r\n\r\n  @Input()\r\n  orient;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.gridPanels = this.getGridPanels();\r\n  }\r\n\r\n  getGridPanels(): any[] {\r\n    return this.data.map(d => {\r\n      let offset;\r\n      let width;\r\n      let height;\r\n      let x;\r\n      let y;\r\n      let className = 'odd';\r\n\r\n      if (this.orient === 'vertical') {\r\n        const position: number = this.xScale(d.name);\r\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\r\n\r\n        if (positionIndex % 2 === 1) {\r\n          className = 'even';\r\n        }\r\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\r\n        width = this.xScale.bandwidth() + offset;\r\n        height = this.dims.height;\r\n        x = this.xScale(d.name) - offset / 2;\r\n        y = 0;\r\n      } else if (this.orient === 'horizontal') {\r\n        const position = this.yScale(d.name);\r\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\r\n\r\n        if (positionIndex % 2 === 1) {\r\n          className = 'even';\r\n        }\r\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\r\n\r\n        width = this.dims.width;\r\n        height = this.yScale.bandwidth() + offset;\r\n        x = 0;\r\n        y = this.yScale(d.name) - offset / 2;\r\n      }\r\n\r\n      return {\r\n        name: d.name,\r\n        class: className,\r\n        height,\r\n        width,\r\n        x,\r\n        y\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-svg-linear-gradient]',\r\n  template: `\r\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\r\n      <svg:stop\r\n        *ngFor=\"let stop of stops\"\r\n        [attr.offset]=\"stop.offset + '%'\"\r\n        [style.stop-color]=\"stop.color\"\r\n        [style.stop-opacity]=\"stop.opacity\"\r\n      />\r\n    </svg:linearGradient>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SvgLinearGradientComponent implements OnChanges {\r\n  @Input() orientation = 'vertical';\r\n  @Input() name;\r\n  @Input() stops: any[];\r\n\r\n  x1: any;\r\n  x2: any;\r\n  y1: any;\r\n  y2: any;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.x1 = '0%';\r\n    this.x2 = '0%';\r\n    this.y1 = '0%';\r\n    this.y2 = '0%';\r\n\r\n    if (this.orientation === 'horizontal') {\r\n      this.x2 = '100%';\r\n    } else if (this.orientation === 'vertical') {\r\n      this.y1 = '100%';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-svg-radial-gradient]',\r\n  template: `\r\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\r\n      <svg:stop\r\n        *ngFor=\"let stop of stops\"\r\n        [attr.offset]=\"stop.offset + '%'\"\r\n        [style.stop-color]=\"stop.color\"\r\n        [style.stop-opacity]=\"stop.opacity\"\r\n      />\r\n    </svg:radialGradient>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SvgRadialGradientComponent implements OnChanges {\r\n  @Input() color: string;\r\n  @Input() name: string;\r\n  @Input() startOpacity: number;\r\n  @Input() endOpacity = 1;\r\n  @Input() cx: number = 0;\r\n  @Input() cy: number = 0;\r\n\r\n  @Input()\r\n  get stops(): any[] {\r\n    return this.stopsInput || this.stopsDefault;\r\n  }\r\n\r\n  set stops(value: any[]) {\r\n    this.stopsInput = value;\r\n  }\r\n\r\n  r: string;\r\n\r\n  private stopsInput: any[];\r\n  private stopsDefault: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.r = '30%';\r\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\r\n      this.stopsDefault = [\r\n        {\r\n          offset: 0,\r\n          color: this.color,\r\n          opacity: this.startOpacity\r\n        },\r\n        {\r\n          offset: 100,\r\n          color: this.color,\r\n          opacity: this.endOpacity\r\n        }\r\n      ];\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { brushX } from 'd3-brush';\r\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\r\nimport { select, event as d3event } from 'd3-selection';\r\n\r\nimport { id } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-timeline]',\r\n  template: `\r\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\r\n      <svg:filter [attr.id]=\"filterId\">\r\n        <svg:feColorMatrix\r\n          in=\"SourceGraphic\"\r\n          type=\"matrix\"\r\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\r\n        />\r\n      </svg:filter>\r\n      <svg:g class=\"embedded-chart\">\r\n        <ng-content></ng-content>\r\n      </svg:g>\r\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\r\n      <svg:g class=\"brush\"></svg:g>\r\n    </svg:g>\r\n  `,\r\n  styleUrls: ['./timeline.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class Timeline implements OnChanges {\r\n  @Input() view;\r\n  @Input() state;\r\n  @Input() results;\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n  @Input() legend;\r\n  @Input() miniChart;\r\n  @Input() autoScale;\r\n  @Input() scaleType;\r\n  @Input() height: number = 50;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() onDomainChange = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  dims: any;\r\n  xDomain: any[];\r\n  xScale: any;\r\n  brush: any;\r\n  transform: string;\r\n  initialized: boolean = false;\r\n  filterId: any;\r\n  filter: any;\r\n\r\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n\r\n    if (!this.initialized) {\r\n      this.addBrush();\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.dims = this.getDims();\r\n    this.height = this.dims.height;\r\n    const offsetY = this.view[1] - this.height;\r\n\r\n    this.xDomain = this.getXDomain();\r\n    this.xScale = this.getXScale();\r\n\r\n    if (this.brush) {\r\n      this.updateBrush();\r\n    }\r\n\r\n    this.transform = `translate(0 , ${offsetY})`;\r\n\r\n    this.filterId = 'filter' + id().toString();\r\n    this.filter = `url(#${this.filterId})`;\r\n\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.name)) {\r\n          values.push(d.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    let domain = [];\r\n    if (this.scaleType === 'time') {\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else {\r\n      domain = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getXScale() {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime()\r\n        .range([0, this.dims.width])\r\n        .domain(this.xDomain);\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear()\r\n        .range([0, this.dims.width])\r\n        .domain(this.xDomain);\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint()\r\n        .range([0, this.dims.width])\r\n        .padding(0.1)\r\n        .domain(this.xDomain);\r\n    }\r\n\r\n    return scale;\r\n  }\r\n\r\n  addBrush(): void {\r\n    if (this.brush) return;\r\n\r\n    const height = this.height;\r\n    const width = this.view[0];\r\n\r\n    this.brush = brushX()\r\n      .extent([\r\n        [0, 0],\r\n        [width, height]\r\n      ])\r\n      .on('brush end', () => {\r\n        const selection = d3event.selection || this.xScale.range();\r\n        const newDomain = selection.map(this.xScale.invert);\r\n\r\n        this.onDomainChange.emit(newDomain);\r\n        this.cd.markForCheck();\r\n      });\r\n\r\n    select(this.element)\r\n      .select('.brush')\r\n      .call(this.brush);\r\n  }\r\n\r\n  updateBrush(): void {\r\n    if (!this.brush) return;\r\n\r\n    const height = this.height;\r\n    const width = this.view[0];\r\n\r\n    this.brush.extent([\r\n      [0, 0],\r\n      [width, height]\r\n    ]);\r\n    select(this.element)\r\n      .select('.brush')\r\n      .call(this.brush);\r\n\r\n    // clear hardcoded properties so they can be defined by CSS\r\n    select(this.element)\r\n      .select('.selection')\r\n      .attr('fill', undefined)\r\n      .attr('stroke', undefined)\r\n      .attr('fill-opacity', undefined);\r\n\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  getDims(): any {\r\n    const width = this.view[0];\r\n\r\n    const dims = {\r\n      width,\r\n      height: this.height\r\n    };\r\n\r\n    return dims;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { select } from 'd3-selection';\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-area]',\r\n  template: `\r\n    <svg:defs *ngIf=\"gradient\">\r\n      <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n    </svg:defs>\r\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AreaComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() path;\r\n  @Input() startingPath;\r\n  @Input() fill;\r\n  @Input() opacity = 1;\r\n  @Input() startOpacity = 0.5;\r\n  @Input() endOpacity = 1;\r\n  @Input() activeLabel;\r\n  @Input() gradient: boolean = false;\r\n  @Input() stops: any[];\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  gradientId: string;\r\n  gradientFill: string;\r\n  areaPath: string;\r\n  initialized: boolean = false;\r\n  gradientStops: any[];\r\n  hasGradient: boolean = false;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this.initialized) {\r\n      this.loadAnimation();\r\n      this.initialized = true;\r\n    } else {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientFill = `url(#${this.gradientId})`;\r\n\r\n    if (this.gradient || this.stops) {\r\n      this.gradientStops = this.getGradient();\r\n      this.hasGradient = true;\r\n    } else {\r\n      this.hasGradient = false;\r\n    }\r\n\r\n    this.updatePathEl();\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    this.areaPath = this.startingPath;\r\n    setTimeout(this.update.bind(this), 100);\r\n  }\r\n\r\n  updatePathEl(): void {\r\n    const node = select(this.element).select('.area');\r\n\r\n    if (this.animations) {\r\n      node\r\n        .transition()\r\n        .duration(750)\r\n        .attr('d', this.path);\r\n    } else {\r\n      node.attr('d', this.path);\r\n    }\r\n  }\r\n\r\n  getGradient() {\r\n    if (this.stops) {\r\n      return this.stops;\r\n    }\r\n\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: this.startOpacity\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: this.endOpacity\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ViewChild, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { createMouseEvent } from '../events';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-tooltip-area]',\r\n  template: `\r\n    <svg:g>\r\n      <svg:rect\r\n        class=\"tooltip-area\"\r\n        [attr.x]=\"0\"\r\n        y=\"0\"\r\n        [attr.width]=\"dims.width\"\r\n        [attr.height]=\"dims.height\"\r\n        style=\"opacity: 0; cursor: 'auto';\"\r\n        (mousemove)=\"mouseMove($event)\"\r\n        (mouseleave)=\"hideTooltip()\"\r\n      />\r\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\r\n        <xhtml:div class=\"area-tooltip-container\">\r\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\r\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\r\n            {{ getToolTipText(tooltipItem) }}\r\n          </xhtml:div>\r\n        </xhtml:div>\r\n      </ng-template>\r\n      <svg:rect\r\n        #tooltipAnchor\r\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\r\n        class=\"tooltip-anchor\"\r\n        [attr.x]=\"anchorPos\"\r\n        y=\"0\"\r\n        [attr.width]=\"1\"\r\n        [attr.height]=\"dims.height\"\r\n        [style.opacity]=\"anchorOpacity\"\r\n        [style.pointer-events]=\"'none'\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'right'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipSpacing]=\"15\"\r\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\r\n        [tooltipContext]=\"anchorValues\"\r\n        [tooltipImmediateExit]=\"true\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition('inactive => active', [\r\n        style({\r\n          opacity: 0\r\n        }),\r\n        animate(250, style({ opacity: 0.7 }))\r\n      ]),\r\n      transition('active => inactive', [\r\n        style({\r\n          opacity: 0.7\r\n        }),\r\n        animate(250, style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class TooltipArea {\r\n  anchorOpacity: number = 0;\r\n  anchorPos: number = -1;\r\n  anchorValues: any[] = [];\r\n  lastAnchorPos: number;\r\n\r\n  @Input() dims;\r\n  @Input() xSet;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() results;\r\n  @Input() colors;\r\n  @Input() showPercentage: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n\r\n  @Output() hover = new EventEmitter();\r\n\r\n  @ViewChild('tooltipAnchor', { static: false }) tooltipAnchor;\r\n\r\n  getValues(xVal): any[] {\r\n    const results = [];\r\n\r\n    for (const group of this.results) {\r\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\r\n      let groupName = group.name;\r\n      if (groupName instanceof Date) {\r\n        groupName = groupName.toLocaleDateString();\r\n      }\r\n\r\n      if (item) {\r\n        const label = item.name;\r\n        let val = item.value;\r\n        if (this.showPercentage) {\r\n          val = (item.d1 - item.d0).toFixed(2) + '%';\r\n        }\r\n        let color;\r\n        if (this.colors.scaleType === 'linear') {\r\n          let v = val;\r\n          if (item.d1) {\r\n            v = item.d1;\r\n          }\r\n          color = this.colors.getColor(v);\r\n        } else {\r\n          color = this.colors.getColor(group.name);\r\n        }\r\n\r\n        const data = Object.assign({}, item, {\r\n          value: val,\r\n          name: label,\r\n          series: groupName,\r\n          min: item.min,\r\n          max: item.max,\r\n          color\r\n        });\r\n\r\n        results.push(data);\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  mouseMove(event) {\r\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\r\n\r\n    const closestIndex = this.findClosestPointIndex(xPos);\r\n    const closestPoint = this.xSet[closestIndex];\r\n    this.anchorPos = this.xScale(closestPoint);\r\n    this.anchorPos = Math.max(0, this.anchorPos);\r\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\r\n\r\n    this.anchorValues = this.getValues(closestPoint);\r\n    if (this.anchorPos !== this.lastAnchorPos) {\r\n      const ev = createMouseEvent('mouseleave');\r\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\r\n      this.anchorOpacity = 0.7;\r\n      this.hover.emit({\r\n        value: closestPoint\r\n      });\r\n      this.showTooltip();\r\n\r\n      this.lastAnchorPos = this.anchorPos;\r\n    }\r\n  }\r\n\r\n  findClosestPointIndex(xPos) {\r\n    let minIndex = 0;\r\n    let maxIndex = this.xSet.length - 1;\r\n    let minDiff = Number.MAX_VALUE;\r\n    let closestIndex = 0;\r\n\r\n    while (minIndex <= maxIndex) {\r\n      const currentIndex = ((minIndex + maxIndex) / 2) | 0;\r\n      const currentElement = this.xScale(this.xSet[currentIndex]);\r\n\r\n      const curDiff = Math.abs(currentElement - xPos);\r\n\r\n      if (curDiff < minDiff) {\r\n        minDiff = curDiff;\r\n        closestIndex = currentIndex;\r\n      }\r\n\r\n      if (currentElement < xPos) {\r\n        minIndex = currentIndex + 1;\r\n      } else if (currentElement > xPos) {\r\n        maxIndex = currentIndex - 1;\r\n      } else {\r\n        minDiff = 0;\r\n        closestIndex = currentIndex;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return closestIndex;\r\n  }\r\n\r\n  showTooltip(): void {\r\n    const event = createMouseEvent('mouseenter');\r\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\r\n  }\r\n\r\n  hideTooltip(): void {\r\n    const event = createMouseEvent('mouseleave');\r\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\r\n    this.anchorOpacity = 0;\r\n    this.lastAnchorPos = -1;\r\n  }\r\n\r\n  getToolTipText(tooltipItem: any): string {\r\n    let result: string = '';\r\n    if (tooltipItem.series !== undefined) {\r\n      result += tooltipItem.series;\r\n    } else {\r\n      result += '???';\r\n    }\r\n    result += ': ';\r\n    if (tooltipItem.value !== undefined) {\r\n      result += tooltipItem.value.toLocaleString();\r\n    }\r\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\r\n      result += ' (';\r\n      if (tooltipItem.min !== undefined) {\r\n        if (tooltipItem.max === undefined) {\r\n          result += 'â¥';\r\n        }\r\n        result += tooltipItem.min.toLocaleString();\r\n        if (tooltipItem.max !== undefined) {\r\n          result += ' - ';\r\n        }\r\n      } else if (tooltipItem.max !== undefined) {\r\n        result += 'â¤';\r\n      }\r\n      if (tooltipItem.max !== undefined) {\r\n        result += tooltipItem.max.toLocaleString();\r\n      }\r\n      result += ')';\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","// Robert Penner's easeOutExpo\r\nfunction easeOutExpo(t, b, c, d) {\r\n  return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\r\n}\r\n\r\n/**\r\n * Counts from a number to the end incrementally.\r\n */\r\nexport function count(countFrom, countTo, countDecimals, countDuration, callback) {\r\n  const startVal = Number(countFrom);\r\n  const endVal = Number(countTo);\r\n  const countDown = startVal > endVal;\r\n  const decimals = Math.max(0, countDecimals);\r\n  const dec = Math.pow(10, decimals);\r\n  const duration = Number(countDuration) * 1000;\r\n  let startTime;\r\n\r\n  function runCount(timestamp) {\r\n    let frameVal;\r\n    const progress = timestamp - startTime;\r\n\r\n    if (countDown) {\r\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\r\n    } else {\r\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\r\n    }\r\n\r\n    if (countDown) {\r\n      frameVal = frameVal < endVal ? endVal : frameVal;\r\n    } else {\r\n      frameVal = frameVal > endVal ? endVal : frameVal;\r\n    }\r\n\r\n    frameVal = Math.round(frameVal * dec) / dec;\r\n\r\n    const tick = progress < duration;\r\n    callback({\r\n      value: frameVal,\r\n      progress,\r\n      timestamp,\r\n      finished: !tick\r\n    });\r\n\r\n    if (tick) {\r\n      return requestAnimationFrame(val => runCount(val));\r\n    }\r\n  }\r\n\r\n  return requestAnimationFrame(timestamp => {\r\n    startTime = timestamp;\r\n    return runCount(timestamp);\r\n  });\r\n}\r\n\r\n/**\r\n * Determine decimals places\r\n *\r\n * @export\r\n */\r\nexport function decimalChecker(countTo) {\r\n  const endVal = Number(countTo);\r\n\r\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\r\n    return 2;\r\n  }\r\n\r\n  return 0;\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, OnDestroy, ElementRef } from '@angular/core';\r\nimport { count, decimalChecker } from './count.helper';\r\n\r\n/**\r\n * Count up component\r\n *\r\n * Loosely inspired by:\r\n *  - https://github.com/izupet/angular2-counto\r\n *  - https://inorganik.github.io/countUp.js/\r\n *\r\n * @export\r\n */\r\n@Component({\r\n  selector: '[ngx-charts-count-up]',\r\n  template: `\r\n    {{ value }}\r\n  `\r\n})\r\nexport class CountUpDirective implements OnDestroy {\r\n  @Input() countDuration: number = 1;\r\n  @Input() countPrefix: string = '';\r\n  @Input() countSuffix: string = '';\r\n  @Input() valueFormatting: any;\r\n\r\n  @Input()\r\n  set countDecimals(val: number) {\r\n    this._countDecimals = val;\r\n  }\r\n\r\n  get countDecimals(): number {\r\n    if (this._countDecimals) return this._countDecimals;\r\n    return decimalChecker(this.countTo);\r\n  }\r\n\r\n  @Input()\r\n  set countTo(val) {\r\n    this._countTo = parseFloat(val);\r\n    this.start();\r\n  }\r\n\r\n  get countTo(): any {\r\n    return this._countTo;\r\n  }\r\n\r\n  @Input()\r\n  set countFrom(val) {\r\n    this._countFrom = parseFloat(val);\r\n    this.start();\r\n  }\r\n\r\n  get countFrom(): any {\r\n    return this._countFrom;\r\n  }\r\n\r\n  @Output() countChange = new EventEmitter();\r\n  @Output() countFinish = new EventEmitter();\r\n\r\n  nativeElement: any;\r\n\r\n  value: any = '';\r\n  formattedValue: string;\r\n\r\n  private animationReq: any;\r\n\r\n  private _countDecimals: number = 0;\r\n  private _countTo: number = 0;\r\n  private _countFrom: number = 0;\r\n\r\n  constructor(private cd: ChangeDetectorRef, element: ElementRef) {\r\n    this.nativeElement = element.nativeElement;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    cancelAnimationFrame(this.animationReq);\r\n  }\r\n\r\n  start(): void {\r\n    cancelAnimationFrame(this.animationReq);\r\n\r\n    const valueFormatting =\r\n      this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\r\n\r\n    const callback = ({ value, progress, finished }) => {\r\n      this.value = valueFormatting(value);\r\n      this.cd.markForCheck();\r\n      if (!finished) this.countChange.emit({ value: this.value, progress });\r\n      if (finished) this.countFinish.emit({ value: this.value, progress });\r\n    };\r\n\r\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChartComponent } from './charts/chart.component';\r\nimport { ScaleLegendComponent, LegendComponent, LegendEntryComponent, AdvancedLegendComponent } from './legend';\r\nimport { BaseChartComponent } from './base-chart.component';\r\nimport { AxesModule } from './axes/axes.module';\r\nimport { TooltipModule } from './tooltip';\r\nimport { CircleSeriesComponent } from './circle-series.component';\r\nimport { CircleComponent } from './circle.component';\r\nimport { GridPanelComponent } from './grid-panel.component';\r\nimport { GridPanelSeriesComponent } from './grid-panel-series.component';\r\nimport { SvgLinearGradientComponent } from './svg-linear-gradient.component';\r\nimport { SvgRadialGradientComponent } from './svg-radial-gradient.component';\r\nimport { Timeline } from './timeline';\r\nimport { AreaComponent } from './area.component';\r\nimport { TooltipArea } from './tooltip-area.component';\r\nimport { CountUpDirective } from './count';\r\n\r\nconst COMPONENTS = [\r\n  AreaComponent,\r\n  BaseChartComponent,\r\n  CountUpDirective,\r\n  TooltipArea,\r\n  ChartComponent,\r\n  LegendComponent,\r\n  LegendEntryComponent,\r\n  ScaleLegendComponent,\r\n  CircleComponent,\r\n  CircleSeriesComponent,\r\n  GridPanelComponent,\r\n  GridPanelSeriesComponent,\r\n  SvgLinearGradientComponent,\r\n  SvgRadialGradientComponent,\r\n  Timeline,\r\n  AdvancedLegendComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AxesModule, TooltipModule],\r\n  declarations: [...COMPONENTS],\r\n  exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS]\r\n})\r\nexport class ChartCommonModule {}\r\n","export interface ViewDimensions {\r\n  width: number;\r\n  height: number;\r\n  xOffset: number;\r\n}\r\n\r\nexport function calculateViewDimensions({\r\n  width,\r\n  height,\r\n  margins,\r\n  showXAxis = false,\r\n  showYAxis = false,\r\n  xAxisHeight = 0,\r\n  yAxisWidth = 0,\r\n  showXLabel = false,\r\n  showYLabel = false,\r\n  showLegend = false,\r\n  legendType = 'ordinal',\r\n  legendPosition = 'right',\r\n  columns = 12\r\n}): ViewDimensions {\r\n  let xOffset = margins[3];\r\n  let chartWidth = width;\r\n  let chartHeight = height - margins[0] - margins[2];\r\n\r\n  if (showLegend && legendPosition === 'right') {\r\n    if (legendType === 'ordinal') {\r\n      columns -= 2;\r\n    } else {\r\n      columns -= 1;\r\n    }\r\n  }\r\n\r\n  chartWidth = (chartWidth * columns) / 12;\r\n\r\n  chartWidth = chartWidth - margins[1] - margins[3];\r\n\r\n  if (showXAxis) {\r\n    chartHeight -= 5;\r\n    chartHeight -= xAxisHeight;\r\n\r\n    if (showXLabel) {\r\n      // text height + spacing between axis label and tick labels\r\n      const offset = 25 + 5;\r\n      chartHeight -= offset;\r\n    }\r\n  }\r\n\r\n  if (showYAxis) {\r\n    chartWidth -= 5;\r\n    chartWidth -= yAxisWidth;\r\n    xOffset += yAxisWidth;\r\n    xOffset += 10;\r\n\r\n    if (showYLabel) {\r\n      // text height + spacing between axis label and tick labels\r\n      const offset = 25 + 5;\r\n      chartWidth -= offset;\r\n      xOffset += offset;\r\n    }\r\n  }\r\n\r\n  chartWidth = Math.max(0, chartWidth);\r\n  chartHeight = Math.max(0, chartHeight);\r\n\r\n  return {\r\n    width: Math.floor(chartWidth),\r\n    height: Math.floor(chartHeight),\r\n    xOffset: Math.floor(xOffset)\r\n  };\r\n}\r\n","import { range } from 'd3-array';\r\nimport { scaleBand, scaleLinear, scaleOrdinal, scaleQuantile } from 'd3-scale';\r\n\r\nimport { colorSets } from '../utils/color-sets';\r\n\r\nexport class ColorHelper {\r\n  scale: any;\r\n  scaleType: any;\r\n  colorDomain: any[];\r\n  domain: any;\r\n  customColors: any;\r\n\r\n  constructor(scheme, type, domain, customColors?) {\r\n    if (typeof scheme === 'string') {\r\n      scheme = colorSets.find(cs => {\r\n        return cs.name === scheme;\r\n      });\r\n    }\r\n    this.colorDomain = scheme.domain;\r\n    this.scaleType = type;\r\n    this.domain = domain;\r\n    this.customColors = customColors;\r\n\r\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\r\n  }\r\n\r\n  generateColorScheme(scheme, type, domain) {\r\n    if (typeof scheme === 'string') {\r\n      scheme = colorSets.find(cs => {\r\n        return cs.name === scheme;\r\n      });\r\n    }\r\n    let colorScale;\r\n    if (type === 'quantile') {\r\n      colorScale = scaleQuantile()\r\n        .range(scheme.domain)\r\n        .domain(domain);\r\n    } else if (type === 'ordinal') {\r\n      colorScale = scaleOrdinal()\r\n        .range(scheme.domain)\r\n        .domain(domain);\r\n    } else if (type === 'linear') {\r\n      // linear schemes must have at least 2 colors\r\n      const colorDomain = [...scheme.domain];\r\n      if (colorDomain.length === 1) {\r\n        colorDomain.push(colorDomain[0]);\r\n        this.colorDomain = colorDomain;\r\n      }\r\n\r\n      const points = range(0, 1, 1.0 / colorDomain.length);\r\n      colorScale = scaleLinear()\r\n        .domain(points)\r\n        .range(colorDomain);\r\n    }\r\n\r\n    return colorScale;\r\n  }\r\n\r\n  getColor(value) {\r\n    if (value === undefined || value === null) {\r\n      throw new Error('Value can not be null');\r\n    }\r\n    if (this.scaleType === 'linear') {\r\n      const valueScale = scaleLinear()\r\n        .domain(this.domain)\r\n        .range([0, 1]);\r\n\r\n      return this.scale(valueScale(value));\r\n    } else {\r\n      if (typeof this.customColors === 'function') {\r\n        return this.customColors(value);\r\n      }\r\n\r\n      const formattedValue = value.toString();\r\n      let found: any; // todo type customColors\r\n      if (this.customColors && this.customColors.length > 0) {\r\n        found = this.customColors.find(mapping => {\r\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\r\n        });\r\n      }\r\n\r\n      if (found) {\r\n        return found.value;\r\n      } else {\r\n        return this.scale(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  getLinearGradientStops(value, start) {\r\n    if (start === undefined) {\r\n      start = this.domain[0];\r\n    }\r\n\r\n    const valueScale = scaleLinear()\r\n      .domain(this.domain)\r\n      .range([0, 1]);\r\n\r\n    const colorValueScale = scaleBand()\r\n      .domain(this.colorDomain)\r\n      .range([0, 1]);\r\n\r\n    const endColor = this.getColor(value);\r\n\r\n    // generate the stops\r\n    const startVal = valueScale(start);\r\n    const startColor = this.getColor(start);\r\n\r\n    const endVal = valueScale(value);\r\n    let i = 1;\r\n    let currentVal = startVal;\r\n    const stops = [];\r\n\r\n    stops.push({\r\n      color: startColor,\r\n      offset: startVal,\r\n      originalOffset: startVal,\r\n      opacity: 1\r\n    });\r\n\r\n    while (currentVal < endVal && i < this.colorDomain.length) {\r\n      const color = this.colorDomain[i];\r\n      const offset = colorValueScale(color);\r\n      if (offset <= startVal) {\r\n        i++;\r\n        continue;\r\n      }\r\n\r\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\r\n        break;\r\n      }\r\n\r\n      stops.push({\r\n        color,\r\n        offset,\r\n        opacity: 1\r\n      });\r\n      currentVal = offset;\r\n      i++;\r\n    }\r\n\r\n    if (stops[stops.length - 1].offset < 100) {\r\n      stops.push({\r\n        color: endColor,\r\n        offset: endVal,\r\n        opacity: 1\r\n      });\r\n    }\r\n\r\n    if (endVal === startVal) {\r\n      stops[0].offset = 0;\r\n      stops[1].offset = 100;\r\n    } else {\r\n      // normalize the offsets into percentages\r\n      if (stops[stops.length - 1].offset !== 100) {\r\n        for (const s of stops) {\r\n          s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\r\n        }\r\n      }\r\n    }\r\n\r\n    return stops;\r\n  }\r\n}\r\n","/**\r\n * Based on the data, return an array with unique values.\r\n *\r\n * @export\r\n * @returns array\r\n */\r\nexport function getUniqueXDomainValues(results: any[]): any[] {\r\n  const valueSet = new Set();\r\n  for (const result of results) {\r\n    for (const d of result.series) {\r\n      valueSet.add(d.name);\r\n    }\r\n  }\r\n  return Array.from(valueSet);\r\n}\r\n\r\n/**\r\n * Get the scaleType of enumerable of values.\r\n * @returns  'time', 'linear' or 'ordinal'\r\n */\r\nexport function getScaleType(values: any[], checkDateType = true): string {\r\n  if (checkDateType) {\r\n    const allDates = values.every(value => value instanceof Date);\r\n    if (allDates) {\r\n      return 'time';\r\n    }\r\n  }\r\n\r\n  const allNumbers = values.every(value => typeof value === 'number');\r\n  if (allNumbers) {\r\n    return 'linear';\r\n  }\r\n\r\n  return 'ordinal';\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel, escapeLabel } from '../common/label.helper';\nimport { DataItem } from '../models/chart-data.model';\n\nexport enum D0Types {\n  positive = 'positive',\n  negative = 'negative'\n}\n\n@Component({\n  selector: 'g[ngx-charts-series-vertical]',\n  template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [isActive]=\"isActive(bar.data)\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n      [animations]=\"animations\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'vertical'\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesVerticalComponent implements OnChanges {\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() scaleType;\n  @Input() colors;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations: boolean = true;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\n\n  ngOnChanges(changes): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const oldValue = d.value;\n      if (this.scaleType === 'log') {\n        const e: any = {};\n        Object.assign(e, d);\n        e.value = Math.log10(Number(value));\n        value = e.value;\n      } else {\n\n      }\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled\n        ? undefined\n        : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${oldValue.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series = this.seriesName ? this.seriesName : d.label;\n        section.total = d.value;\n        section.x = this.xScale(d.label);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data: DataItem): void {\n    this.select.emit(data);\n  }\n\n  getLabel(dataItem): string {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n\n  trackBy(index, bar): string {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n}\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\nimport { curveLinear } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { id } from '../utils/id';\r\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-area-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n            <svg:g\r\n              ngx-charts-area-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [baseValue]=\"baseValue\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [scaleType]=\"scaleType\"\r\n              [gradient]=\"gradient\"\r\n              [curve]=\"curve\"\r\n              [animations]=\"animations\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [results]=\"results\"\r\n              [colors]=\"colors\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n\r\n            <svg:g *ngFor=\"let series of results\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                [xScale]=\"xScale\"\r\n                [yScale]=\"yScale\"\r\n                [colors]=\"colors\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                [tooltipTemplate]=\"tooltipTemplate\"\r\n                (select)=\"onClick($event, series)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g\r\n        ngx-charts-timeline\r\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\r\n        [attr.transform]=\"timelineTransform\"\r\n        [results]=\"results\"\r\n        [view]=\"[timelineWidth, height]\"\r\n        [height]=\"timelineHeight\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [legend]=\"legend\"\r\n        [scaleType]=\"scaleType\"\r\n        (onDomainChange)=\"updateDomain($event)\"\r\n      >\r\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n          <svg:g\r\n            ngx-charts-area-series\r\n            [xScale]=\"timelineXScale\"\r\n            [yScale]=\"timelineYScale\"\r\n            [baseValue]=\"baseValue\"\r\n            [colors]=\"colors\"\r\n            [data]=\"series\"\r\n            [scaleType]=\"scaleType\"\r\n            [gradient]=\"gradient\"\r\n            [curve]=\"curve\"\r\n            [animations]=\"animations\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AreaChartComponent extends BaseChartComponent {\r\n  @Input() legend;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() state;\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() baseValue: any = 'auto';\r\n  @Input() autoScale;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() timeline;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveLinear;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() xScaleMin: any;\r\n  @Input() xScaleMax: any;\r\n  @Input() yScaleMin: number;\r\n  @Input() yScaleMax: number;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  xSet: any;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  seriesDomain: any;\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  clipPathId: string;\r\n  clipPath: string;\r\n  scaleType: string;\r\n  series: any;\r\n  margin = [10, 20, 10, 20];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n\r\n  timelineWidth: any;\r\n  timelineHeight: number = 50;\r\n  timelineXScale: any;\r\n  timelineYScale: any;\r\n  timelineXDomain: any;\r\n  timelineTransform: any;\r\n  timelinePadding: number = 10;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    if (this.filteredDomain) {\r\n      this.xDomain = this.filteredDomain;\r\n    }\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\r\n\r\n    this.updateTimeline();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  updateTimeline(): void {\r\n    if (this.timeline) {\r\n      this.timelineWidth = this.dims.width;\r\n      this.timelineXDomain = this.getXDomain();\r\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\r\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\r\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\r\n    }\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = getUniqueXDomainValues(this.results);\r\n\r\n    this.scaleType = getScaleType(values);\r\n    let domain = [];\r\n\r\n    if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n    }\r\n\r\n    let min;\r\n    let max;\r\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\r\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\r\n\r\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\r\n    }\r\n\r\n    if (this.scaleType === 'time') {\r\n      domain = [new Date(min), new Date(max)];\r\n      this.xSet = [...values].sort((a, b) => {\r\n        const aDate = a.getTime();\r\n        const bDate = b.getTime();\r\n        if (aDate > bDate) return 1;\r\n        if (bDate > aDate) return -1;\r\n        return 0;\r\n      });\r\n    } else if (this.scaleType === 'linear') {\r\n      domain = [min, max];\r\n      // Use compare function to sort numbers numerically\r\n      this.xSet = [...values].sort((a, b) => a - b);\r\n    } else {\r\n      domain = values;\r\n      this.xSet = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    const values = [...domain];\r\n    if (!this.autoScale) {\r\n      values.push(0);\r\n    }\r\n    if (this.baseValue !== 'auto') {\r\n      values.push(this.baseValue);\r\n    }\r\n\r\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\r\n\r\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime();\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear();\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().padding(0.1);\r\n    }\r\n\r\n    scale.range([0, width]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear()\r\n      .range([height, 0])\r\n      .domain(domain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getScaleType(values): string {\r\n    let date = true;\r\n    let num = true;\r\n    for (const value of values) {\r\n      if (!this.isDate(value)) {\r\n        date = false;\r\n      }\r\n      if (typeof value !== 'number') {\r\n        num = false;\r\n      }\r\n    }\r\n\r\n    if (date) {\r\n      return 'time';\r\n    }\r\n\r\n    if (num) {\r\n      return 'linear';\r\n    }\r\n\r\n    return 'ordinal';\r\n  }\r\n\r\n  isDate(value): boolean {\r\n    if (value instanceof Date) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  updateDomain(domain): void {\r\n    this.filteredDomain = domain;\r\n    this.xDomain = this.filteredDomain;\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n  }\r\n\r\n  updateHoveredVertical(item): void {\r\n    this.hoveredVertical = item.value;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.hoveredVertical = null;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.seriesDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\nimport { curveLinear } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { id } from '../utils/id';\r\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-area-chart-normalized',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n            <svg:g\r\n              ngx-charts-area-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [scaleType]=\"scaleType\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [gradient]=\"gradient\"\r\n              normalized=\"true\"\r\n              [curve]=\"curve\"\r\n              [animations]=\"animations\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [results]=\"results\"\r\n              [colors]=\"colors\"\r\n              [showPercentage]=\"true\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n\r\n            <svg:g *ngFor=\"let series of results\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                type=\"stacked\"\r\n                [xScale]=\"xScale\"\r\n                [yScale]=\"yScale\"\r\n                [colors]=\"colors\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                [tooltipTemplate]=\"tooltipTemplate\"\r\n                (select)=\"onClick($event, series)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g\r\n        ngx-charts-timeline\r\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\r\n        [attr.transform]=\"timelineTransform\"\r\n        [results]=\"results\"\r\n        [view]=\"[timelineWidth, height]\"\r\n        [height]=\"timelineHeight\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [legend]=\"legend\"\r\n        [scaleType]=\"scaleType\"\r\n        (onDomainChange)=\"updateDomain($event)\"\r\n      >\r\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n          <svg:g\r\n            ngx-charts-area-series\r\n            [xScale]=\"timelineXScale\"\r\n            [yScale]=\"timelineYScale\"\r\n            [colors]=\"colors\"\r\n            [data]=\"series\"\r\n            [scaleType]=\"scaleType\"\r\n            [gradient]=\"gradient\"\r\n            normalized=\"true\"\r\n            [curve]=\"curve\"\r\n            [animations]=\"animations\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AreaChartNormalizedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() timeline;\r\n  @Input() gradient;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveLinear;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  scaleType: string;\r\n  xDomain: any[];\r\n  xSet: any[]; // the set of all values on the X Axis\r\n  yDomain: any[];\r\n  seriesDomain: any;\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  clipPathId: string;\r\n  clipPath: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  tooltipAreas: any[];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n\r\n  timelineWidth: any;\r\n  timelineHeight: number = 50;\r\n  timelineXScale: any;\r\n  timelineYScale: any;\r\n  timelineXDomain: any;\r\n  timelineTransform: any;\r\n  timelinePadding: number = 10;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    if (this.filteredDomain) {\r\n      this.xDomain = this.filteredDomain;\r\n    }\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\r\n\r\n    for (let i = 0; i < this.xSet.length; i++) {\r\n      const val = this.xSet[i];\r\n      let d0 = 0;\r\n\r\n      let total = 0;\r\n      for (const group of this.results) {\r\n        const d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n        if (d) {\r\n          total += d.value;\r\n        }\r\n      }\r\n\r\n      for (const group of this.results) {\r\n        let d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n\r\n        if (d) {\r\n          d.d0 = d0;\r\n          d.d1 = d0 + d.value;\r\n          d0 += d.value;\r\n        } else {\r\n          d = {\r\n            name: val,\r\n            value: 0,\r\n            d0,\r\n            d1: d0\r\n          };\r\n          group.series.push(d);\r\n        }\r\n\r\n        if (total > 0) {\r\n          d.d0 = (d.d0 * 100) / total;\r\n          d.d1 = (d.d1 * 100) / total;\r\n        } else {\r\n          d.d0 = 0;\r\n          d.d1 = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.updateTimeline();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  updateTimeline(): void {\r\n    if (this.timeline) {\r\n      this.timelineWidth = this.dims.width;\r\n      this.timelineXDomain = this.getXDomain();\r\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\r\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\r\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\r\n    }\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = getUniqueXDomainValues(this.results);\r\n\r\n    this.scaleType = getScaleType(values);\r\n    let domain = [];\r\n\r\n    if (this.scaleType === 'time') {\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [new Date(min), new Date(max)];\r\n      this.xSet = [...values].sort((a, b) => {\r\n        const aDate = a.getTime();\r\n        const bDate = b.getTime();\r\n        if (aDate > bDate) return 1;\r\n        if (bDate > aDate) return -1;\r\n        return 0;\r\n      });\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [min, max];\r\n      // Use compare function to sort numbers numerically\r\n      this.xSet = [...values].sort((a, b) => a - b);\r\n    } else {\r\n      domain = values;\r\n      this.xSet = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    return [0, 100];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime();\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear();\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().padding(0.1);\r\n    }\r\n\r\n    scale.range([0, width]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear()\r\n      .range([height, 0])\r\n      .domain(domain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  updateDomain(domain): void {\r\n    this.filteredDomain = domain;\r\n    this.xDomain = this.filteredDomain;\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n  }\r\n\r\n  updateHoveredVertical(item): void {\r\n    this.hoveredVertical = item.value;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.hoveredVertical = null;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.seriesDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\nimport { curveLinear } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { id } from '../utils/id';\r\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-area-chart-stacked',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n            <svg:g\r\n              ngx-charts-area-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [scaleType]=\"scaleType\"\r\n              [gradient]=\"gradient\"\r\n              [activeEntries]=\"activeEntries\"\r\n              stacked=\"true\"\r\n              [curve]=\"curve\"\r\n              [animations]=\"animations\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [results]=\"results\"\r\n              [colors]=\"colors\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n\r\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                type=\"stacked\"\r\n                [xScale]=\"xScale\"\r\n                [yScale]=\"yScale\"\r\n                [colors]=\"colors\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                [tooltipTemplate]=\"tooltipTemplate\"\r\n                (select)=\"onClick($event, series)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g\r\n        ngx-charts-timeline\r\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\r\n        [attr.transform]=\"timelineTransform\"\r\n        [results]=\"results\"\r\n        [view]=\"[timelineWidth, height]\"\r\n        [height]=\"timelineHeight\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [legend]=\"legend\"\r\n        [scaleType]=\"scaleType\"\r\n        (onDomainChange)=\"updateDomain($event)\"\r\n      >\r\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n          <svg:g\r\n            ngx-charts-area-series\r\n            [xScale]=\"timelineXScale\"\r\n            [yScale]=\"timelineYScale\"\r\n            [colors]=\"colors\"\r\n            [data]=\"series\"\r\n            [scaleType]=\"scaleType\"\r\n            [gradient]=\"gradient\"\r\n            stacked=\"true\"\r\n            [curve]=\"curve\"\r\n            [animations]=\"animations\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AreaChartStackedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() timeline;\r\n  @Input() gradient;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveLinear;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() xScaleMin: any;\r\n  @Input() xScaleMax: any;\r\n  @Input() yScaleMin: number;\r\n  @Input() yScaleMax: number;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  scaleType: string;\r\n  xDomain: any[];\r\n  xSet: any[]; // the set of all values on the X Axis\r\n  yDomain: any[];\r\n  seriesDomain: any;\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  clipPathId: string;\r\n  clipPath: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n\r\n  timelineWidth: any;\r\n  timelineHeight: number = 50;\r\n  timelineXScale: any;\r\n  timelineYScale: any;\r\n  timelineXDomain: any;\r\n  timelineTransform: any;\r\n  timelinePadding: number = 10;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    if (this.filteredDomain) {\r\n      this.xDomain = this.filteredDomain;\r\n    }\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\r\n\r\n    for (let i = 0; i < this.xSet.length; i++) {\r\n      const val = this.xSet[i];\r\n      let d0 = 0;\r\n      for (const group of this.results) {\r\n        let d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n\r\n        if (d) {\r\n          d.d0 = d0;\r\n          d.d1 = d0 + d.value;\r\n          d0 += d.value;\r\n        } else {\r\n          d = {\r\n            name: val,\r\n            value: 0,\r\n            d0,\r\n            d1: d0\r\n          };\r\n          group.series.push(d);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.updateTimeline();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  updateTimeline(): void {\r\n    if (this.timeline) {\r\n      this.timelineWidth = this.dims.width;\r\n      this.timelineXDomain = this.getXDomain();\r\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\r\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\r\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\r\n    }\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = getUniqueXDomainValues(this.results);\r\n\r\n    this.scaleType = getScaleType(values);\r\n    let domain = [];\r\n\r\n    if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n    }\r\n\r\n    let min;\r\n    let max;\r\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\r\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\r\n\r\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\r\n    }\r\n\r\n    if (this.scaleType === 'time') {\r\n      domain = [new Date(min), new Date(max)];\r\n      this.xSet = [...values].sort((a, b) => {\r\n        const aDate = a.getTime();\r\n        const bDate = b.getTime();\r\n        if (aDate > bDate) return 1;\r\n        if (bDate > aDate) return -1;\r\n        return 0;\r\n      });\r\n    } else if (this.scaleType === 'linear') {\r\n      domain = [min, max];\r\n      // Use compare function to sort numbers numerically\r\n      this.xSet = [...values].sort((a, b) => a - b);\r\n    } else {\r\n      domain = values;\r\n      this.xSet = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (let i = 0; i < this.xSet.length; i++) {\r\n      const val = this.xSet[i];\r\n      let sum = 0;\r\n      for (const group of this.results) {\r\n        const d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n\r\n        if (d) {\r\n          sum += d.value;\r\n        }\r\n      }\r\n\r\n      domain.push(sum);\r\n    }\r\n\r\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\r\n\r\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime();\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear();\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().padding(0.1);\r\n    }\r\n\r\n    scale.range([0, width]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear()\r\n      .range([height, 0])\r\n      .domain(domain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  updateDomain(domain): void {\r\n    this.filteredDomain = domain;\r\n    this.xDomain = this.filteredDomain;\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n  }\r\n\r\n  updateHoveredVertical(item) {\r\n    this.hoveredVertical = item.value;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.hoveredVertical = null;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.seriesDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { area } from 'd3-shape';\r\n\r\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-area-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-area\r\n      class=\"area-series\"\r\n      [data]=\"data\"\r\n      [path]=\"path\"\r\n      [fill]=\"colors.getColor(data.name)\"\r\n      [stops]=\"gradientStops\"\r\n      [startingPath]=\"startingPath\"\r\n      [opacity]=\"opacity\"\r\n      [gradient]=\"gradient || hasGradient\"\r\n      [animations]=\"animations\"\r\n      [class.active]=\"isActive(data)\"\r\n      [class.inactive]=\"isInactive(data)\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AreaSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() baseValue: any = 'auto';\r\n  @Input() colors;\r\n  @Input() scaleType;\r\n  @Input() stacked: boolean = false;\r\n  @Input() normalized: boolean = false;\r\n  @Input() gradient;\r\n  @Input() curve;\r\n  @Input() activeEntries: any[];\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  opacity: number;\r\n  path: string;\r\n  startingPath: string;\r\n\r\n  hasGradient: boolean;\r\n  gradientStops: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateGradient();\r\n\r\n    let currentArea;\r\n    let startingArea;\r\n\r\n    const xProperty = d => {\r\n      const label = d.name;\r\n      return this.xScale(label);\r\n    };\r\n\r\n    if (this.stacked || this.normalized) {\r\n      currentArea = area<any>()\r\n        .x(xProperty)\r\n        .y0((d, i) => this.yScale(d.d0))\r\n        .y1((d, i) => this.yScale(d.d1));\r\n\r\n      startingArea = area<any>()\r\n        .x(xProperty)\r\n        .y0(d => this.yScale.range()[0])\r\n        .y1(d => this.yScale.range()[0]);\r\n    } else {\r\n      currentArea = area<any>()\r\n        .x(xProperty)\r\n        .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\r\n        .y1(d => this.yScale(d.value));\r\n\r\n      startingArea = area<any>()\r\n        .x(xProperty)\r\n        .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\r\n        .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\r\n    }\r\n\r\n    currentArea.curve(this.curve);\r\n    startingArea.curve(this.curve);\r\n\r\n    this.opacity = 0.8;\r\n\r\n    let data = this.data.series;\r\n    if (this.scaleType === 'linear') {\r\n      data = sortLinear(data, 'name');\r\n    } else if (this.scaleType === 'time') {\r\n      data = sortByTime(data, 'name');\r\n    } else {\r\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\r\n    }\r\n\r\n    this.path = currentArea(data);\r\n    this.startingPath = startingArea(data);\r\n  }\r\n\r\n  updateGradient() {\r\n    if (this.colors.scaleType === 'linear') {\r\n      this.hasGradient = true;\r\n      if (this.stacked || this.normalized) {\r\n        const d0values = this.data.series.map(d => d.d0);\r\n        const d1values = this.data.series.map(d => d.d1);\r\n        const max = Math.max(...d1values);\r\n        const min = Math.min(...d0values);\r\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\r\n      } else {\r\n        const values = this.data.series.map(d => d.value);\r\n        const max = Math.max(...values);\r\n        this.gradientStops = this.colors.getLinearGradientStops(max);\r\n      }\r\n    } else {\r\n      this.hasGradient = false;\r\n      this.gradientStops = undefined;\r\n    }\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isInactive(entry): boolean {\r\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item === undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AreaChartComponent } from './area-chart.component';\r\nimport { AreaChartNormalizedComponent } from './area-chart-normalized.component';\r\nimport { AreaChartStackedComponent } from './area-chart-stacked.component';\r\nimport { AreaSeriesComponent } from './area-series.component';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\r\n  exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\r\n})\r\nexport class AreaChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { select } from 'd3-selection';\r\nimport { roundedRect } from '../common/shape.helper';\r\nimport { id } from '../utils/id';\r\n\r\n/* tslint:disable-next-line */\r\nimport { transition } from 'd3-transition';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-bar]',\r\n  template: `\r\n    <svg:defs *ngIf=\"hasGradient\">\r\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n    </svg:defs>\r\n    <svg:path\r\n      class=\"bar\"\r\n      stroke=\"none\"\r\n      role=\"img\"\r\n      tabIndex=\"-1\"\r\n      [class.active]=\"isActive\"\r\n      [class.hidden]=\"hideBar\"\r\n      [attr.d]=\"path\"\r\n      [attr.aria-label]=\"ariaLabel\"\r\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\r\n      (click)=\"select.emit(data)\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarComponent implements OnChanges {\r\n  @Input() fill;\r\n  @Input() data: any;\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n  @Input() x: number;\r\n  @Input() y: number;\r\n  @Input() orientation;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() gradient: boolean = false;\r\n  @Input() offset = 0;\r\n  @Input() isActive: boolean = false;\r\n  @Input() stops: any[];\r\n  @Input() animations: boolean = true;\r\n  @Input() ariaLabel: string;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  element: any;\r\n  path: any;\r\n  gradientId: any;\r\n  gradientFill: any;\r\n  startOpacity: any;\r\n  gradientStops: any[];\r\n  hasGradient: boolean = false;\r\n  hideBar: boolean = false;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.roundEdges) {\r\n      this.loadAnimation();\r\n    }\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientFill = `url(#${this.gradientId})`;\r\n\r\n    if (this.gradient || this.stops) {\r\n      this.gradientStops = this.getGradient();\r\n      this.hasGradient = true;\r\n    } else {\r\n      this.hasGradient = false;\r\n    }\r\n\r\n    this.updatePathEl();\r\n    this.checkToHideBar();\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    this.path = this.getStartingPath();\r\n    setTimeout(this.update.bind(this), 100);\r\n  }\r\n\r\n  updatePathEl(): void {\r\n    const node = select(this.element).select('.bar');\r\n    const path = this.getPath();\r\n    if (this.animations) {\r\n      node\r\n        .transition()\r\n        .duration(500)\r\n        .attr('d', path);\r\n    } else {\r\n      node.attr('d', path);\r\n    }\r\n  }\r\n\r\n  getGradient() {\r\n    if (this.stops) {\r\n      return this.stops;\r\n    }\r\n\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: this.getStartOpacity()\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n  getStartingPath() {\r\n    if (!this.animations) {\r\n      return this.getPath();\r\n    }\r\n\r\n    let radius = this.getRadius();\r\n    let path;\r\n\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        radius = Math.min(this.height, radius);\r\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\r\n      } else if (this.orientation === 'horizontal') {\r\n        radius = Math.min(this.width, radius);\r\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\r\n      }\r\n    } else {\r\n      if (this.orientation === 'vertical') {\r\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\r\n      } else if (this.orientation === 'horizontal') {\r\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\r\n      }\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  getPath() {\r\n    let radius = this.getRadius();\r\n    let path;\r\n\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        radius = Math.min(this.height, radius);\r\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\r\n      } else if (this.orientation === 'horizontal') {\r\n        radius = Math.min(this.width, radius);\r\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\r\n      }\r\n    } else {\r\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  getRadius(): number {\r\n    let radius = 0;\r\n\r\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\r\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\r\n    }\r\n\r\n    return radius;\r\n  }\r\n\r\n  getStartOpacity(): number {\r\n    if (this.roundEdges) {\r\n      return 0.2;\r\n    } else {\r\n      return 0.5;\r\n    }\r\n  }\r\n\r\n  get edges() {\r\n    let edges = [false, false, false, false];\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        if (this.data.value > 0) {\r\n          edges = [true, true, false, false];\r\n        } else {\r\n          edges = [false, false, true, true];\r\n        }\r\n      } else if (this.orientation === 'horizontal') {\r\n        if (this.data.value > 0) {\r\n          edges = [false, true, false, true];\r\n        } else {\r\n          edges = [true, false, true, false];\r\n        }\r\n      }\r\n    }\r\n    return edges;\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit(this.data);\r\n  }\r\n\r\n  private checkToHideBar() {\r\n    this.hideBar =\r\n      this.noBarWhenZero &&\r\n      ((this.orientation === 'vertical' && this.height === 0) ||\r\n        (this.orientation === 'horizontal' && this.width === 0));\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-series-horizontal\r\n          [xScale]=\"xScale\"\r\n          [yScale]=\"yScale\"\r\n          [colors]=\"colors\"\r\n          [series]=\"results\"\r\n          [dims]=\"dims\"\r\n          [gradient]=\"gradient\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [activeEntries]=\"activeEntries\"\r\n          [roundEdges]=\"roundEdges\"\r\n          [animations]=\"animations\"\r\n          [showDataLabel]=\"showDataLabel\"\r\n          [dataLabelFormatting]=\"dataLabelFormatting\"\r\n          [noBarWhenZero]=\"noBarWhenZero\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event)\"\r\n          (deactivate)=\"onDeactivate($event)\"\r\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\r\n        ></svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BarHorizontalComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() xScaleMax: number;\r\n  @Input() xScaleMin: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  yScale: any;\r\n  xScale: any;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\r\n    }\r\n\r\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getXScale(): any {\r\n    this.xDomain = this.getXDomain();\r\n\r\n    const scale = scaleLinear()\r\n      .range([0, this.dims.width])\r\n      .domain(this.xDomain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(): any {\r\n    this.yDomain = this.getYDomain();\r\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.height])\r\n      .paddingInner(spacing)\r\n      .domain(this.yDomain);\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    const values = this.results.map(d => d.value);\r\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\r\n\r\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\r\n    return [min, max];\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.yDomain;\r\n    } else {\r\n      domain = this.xDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.xDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onDataLabelMaxWidthChanged(event) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\r\n    } else {\r\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\r\n    }\r\n    if (event.index === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal-2d',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-grid-panel-series\r\n          [xScale]=\"valueScale\"\r\n          [yScale]=\"groupScale\"\r\n          [data]=\"results\"\r\n          [dims]=\"dims\"\r\n          orient=\"horizontal\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"valueScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"groupScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-horizontal\r\n            [xScale]=\"valueScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [yScale]=\"innerScale\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [roundEdges]=\"roundEdges\"\r\n            [animations]=\"animations\"\r\n            [showDataLabel]=\"showDataLabel\"\r\n            [dataLabelFormatting]=\"dataLabelFormatting\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarHorizontal2DComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() groupPadding = 16;\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() xScaleMax: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valuesDomain: any[];\r\n  groupScale: any;\r\n  innerScale: any;\r\n  valueScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\r\n    }\r\n\r\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valuesDomain = this.getValueDomain();\r\n\r\n    this.groupScale = this.getGroupScale();\r\n    this.innerScale = this.getInnerScale();\r\n    this.valueScale = this.getValueScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.height])\r\n      .paddingInner(spacing)\r\n      .paddingOuter(spacing / 2)\r\n      .domain(this.groupDomain);\r\n  }\r\n\r\n  getInnerScale(): any {\r\n    const height = this.groupScale.bandwidth();\r\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, height])\r\n      .paddingInner(spacing)\r\n      .domain(this.innerDomain);\r\n  }\r\n\r\n  getValueScale(): any {\r\n    const scale = scaleLinear()\r\n      .range([0, this.dims.width])\r\n      .domain(this.valuesDomain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getGroupDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    const min = Math.min(0, ...domain);\r\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  groupTransform(group) {\r\n    return `translate(0, ${this.groupScale(group.label)})`;\r\n  }\r\n\r\n  onClick(data, group?): void {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valuesDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valuesDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onDataLabelMaxWidthChanged(event, groupIndex) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\r\n    } else {\r\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\r\n    }\r\n    if (groupIndex === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal-normalized',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-horizontal\r\n            type=\"normalized\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarHorizontalNormalizedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    return [0, 100];\r\n  }\r\n\r\n  getYScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.height])\r\n      .paddingInner(spacing)\r\n      .domain(this.groupDomain);\r\n  }\r\n\r\n  getXScale(): any {\r\n    const scale = scaleLinear()\r\n      .range([0, this.dims.width])\r\n      .domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  groupTransform(group): string {\r\n    return `translate(0, ${this.yScale(group.name)})`;\r\n  }\r\n\r\n  onClick(data, group?): void {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal-stacked',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-horizontal\r\n            type=\"stacked\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            [showDataLabel]=\"showDataLabel\"\r\n            [dataLabelFormatting]=\"dataLabelFormatting\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarHorizontalStackedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() xScaleMax: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\r\n    }\r\n\r\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const domain = [];\r\n    let smallest = 0;\r\n    let biggest = 0;\r\n    for (const group of this.results) {\r\n      let smallestSum = 0;\r\n      let biggestSum = 0;\r\n      for (const d of group.series) {\r\n        if (d.value < 0) {\r\n          smallestSum += d.value;\r\n        } else {\r\n          biggestSum += d.value;\r\n        }\r\n        smallest = d.value < smallest ? d.value : smallest;\r\n        biggest = d.value > biggest ? d.value : biggest;\r\n      }\r\n      domain.push(smallestSum);\r\n      domain.push(biggestSum);\r\n    }\r\n    domain.push(smallest);\r\n    domain.push(biggest);\r\n\r\n    const min = Math.min(0, ...domain);\r\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  getYScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.height])\r\n      .paddingInner(spacing)\r\n      .domain(this.groupDomain);\r\n  }\r\n\r\n  getXScale(): any {\r\n    const scale = scaleLinear()\r\n      .range([0, this.dims.width])\r\n      .domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  groupTransform(group): string {\r\n    return `translate(0, ${this.yScale(group.name)})`;\r\n  }\r\n\r\n  onClick(data, group?): void {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onDataLabelMaxWidthChanged(event, groupIndex) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\r\n    } else {\r\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\r\n    }\r\n    if (groupIndex === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { DataItem } from '../models/chart-data.model';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [scaleType]=\"scaleType\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [scaleType]=\"scaleType\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarVerticalComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() yScaleMax: number;\n  @Input() yScaleMin: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  yDomainLog: any;\n  transform: string;\n  colors: ColorHelper;\n  margin: any[] = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    if (this.scaleType === 'log') {\n      this.yScale = this.getYScaleLog();\n    } else {\n      this.yScale = this.getYScale();\n    }\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .range([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScaleLog(): any {\n    this.yDomainLog = this.getYDomainLog();\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomainLog);\n    console.log(this.yDomainLog);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getXDomain(): any[] {\n    return this.results.map(d => d.label);\n  }\n\n  getYDomain(): [number, number] {\n    const values = this.results.map(d => d.value);\n\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n\n  getYDomainLog(): [number, number] {\n    const values = this.results.map(d => d.value);\n    const logvalues = this.getLogTicks(values);\n    console.log(this.getLogTicks(values));\n\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...logvalues) : Math.min(0, ...logvalues);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...logvalues) : Math.max(0, ...logvalues);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n  getLogTicks(ticks: any): any {\n    const newTicks = [];\n    for (let j = 0; j < ticks.length; j++) {\n      if (ticks[j] > 0) {\n        newTicks[j] = Math.log10(ticks[j]);\n      } else {\n        newTicks[j] = 0;\n      }\n    }\n    return newTicks;\n  }\n\n  onClick(data: DataItem) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical-2d',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class BarVertical2DComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, width])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.label)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-vertical-normalized',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-vertical\r\n            type=\"normalized\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarVerticalNormalizedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain() {\r\n    return [0, 100];\r\n  }\r\n\r\n  getXScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.width])\r\n      .paddingInner(spacing)\r\n      .domain(this.groupDomain);\r\n  }\r\n\r\n  getYScale(): any {\r\n    const scale = scaleLinear()\r\n      .range([this.dims.height, 0])\r\n      .domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  groupTransform(group) {\r\n    return `translate(${this.xScale(group.name)}, 0)`;\r\n  }\r\n\r\n  onClick(data, group?) {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }) {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }) {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-vertical-stacked',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-vertical\r\n            type=\"stacked\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [showDataLabel]=\"showDataLabel\"\r\n            [dataLabelFormatting]=\"dataLabelFormatting\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarVerticalStackedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() yScaleMax: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  tickFormatting: (label: string) => string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\r\n    }\r\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.showDataLabel) {\r\n      this.dims.height -= this.dataLabelMaxHeight.negative;\r\n    }\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\r\n  }\r\n\r\n  getGroupDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain() {\r\n    const domain = [];\r\n    let smallest = 0;\r\n    let biggest = 0;\r\n    for (const group of this.results) {\r\n      let smallestSum = 0;\r\n      let biggestSum = 0;\r\n      for (const d of group.series) {\r\n        if (d.value < 0) {\r\n          smallestSum += d.value;\r\n        } else {\r\n          biggestSum += d.value;\r\n        }\r\n        smallest = d.value < smallest ? d.value : smallest;\r\n        biggest = d.value > biggest ? d.value : biggest;\r\n      }\r\n      domain.push(smallestSum);\r\n      domain.push(biggestSum);\r\n    }\r\n    domain.push(smallest);\r\n    domain.push(biggest);\r\n\r\n    const min = Math.min(0, ...domain);\r\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  getXScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.width])\r\n      .paddingInner(spacing)\r\n      .domain(this.groupDomain);\r\n  }\r\n\r\n  getYScale(): any {\r\n    const scale = scaleLinear()\r\n      .range([this.dims.height, 0])\r\n      .domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  onDataLabelMaxHeightChanged(event, groupIndex) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\r\n    } else {\r\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\r\n    }\r\n    if (groupIndex === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  groupTransform(group) {\r\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\r\n  }\r\n\r\n  onClick(data, group?) {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }) {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }) {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\nimport { D0Types } from './series-vertical.component';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-series-horizontal]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-bar\r\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\r\n      [@animationState]=\"'active'\"\r\n      [width]=\"bar.width\"\r\n      [height]=\"bar.height\"\r\n      [x]=\"bar.x\"\r\n      [y]=\"bar.y\"\r\n      [fill]=\"bar.color\"\r\n      [stops]=\"bar.gradientStops\"\r\n      [data]=\"bar.data\"\r\n      [orientation]=\"'horizontal'\"\r\n      [roundEdges]=\"bar.roundEdges\"\r\n      (select)=\"click($event)\"\r\n      [gradient]=\"gradient\"\r\n      [isActive]=\"isActive(bar.data)\"\r\n      [ariaLabel]=\"bar.ariaLabel\"\r\n      [animations]=\"animations\"\r\n      (activate)=\"activate.emit($event)\"\r\n      (deactivate)=\"deactivate.emit($event)\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipType]=\"tooltipType\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"bar.data\"\r\n      [noBarWhenZero]=\"noBarWhenZero\"\r\n    ></svg:g>\r\n    <svg:g *ngIf=\"showDataLabel\">\r\n      <svg:g\r\n        ngx-charts-bar-label\r\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\r\n        [barX]=\"b.x\"\r\n        [barY]=\"b.y\"\r\n        [barWidth]=\"b.width\"\r\n        [barHeight]=\"b.height\"\r\n        [value]=\"b.total\"\r\n        [valueFormatting]=\"dataLabelFormatting\"\r\n        [orientation]=\"'horizontal'\"\r\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(500, style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class SeriesHorizontal implements OnChanges {\r\n  bars: any;\r\n  x: any;\r\n  y: any;\r\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\r\n\r\n  @Input() dims;\r\n  @Input() type = 'standard';\r\n  @Input() series;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[];\r\n  @Input() seriesName: string;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() roundEdges: boolean;\r\n  @Input() animations: boolean = true;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n  @Output() dataLabelWidthChanged = new EventEmitter();\r\n\r\n  tooltipPlacement: string;\r\n  tooltipType: string;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateTooltipSettings();\r\n    const d0 = {\r\n      [D0Types.positive]: 0,\r\n      [D0Types.negative]: 0\r\n    };\r\n    let d0Type: D0Types;\r\n    d0Type = D0Types.positive;\r\n    let total;\r\n    if (this.type === 'normalized') {\r\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n    }\r\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\r\n\r\n    this.bars = this.series.map((d, index) => {\r\n      let value = d.value;\r\n      const label = this.getLabel(d);\r\n      const formattedLabel = formatLabel(label);\r\n      const roundEdges = this.roundEdges;\r\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\r\n\r\n      const bar: any = {\r\n        value,\r\n        label,\r\n        roundEdges,\r\n        data: d,\r\n        formattedLabel\r\n      };\r\n\r\n      bar.height = this.yScale.bandwidth();\r\n\r\n      if (this.type === 'standard') {\r\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\r\n        if (value < 0) {\r\n          bar.x = this.xScale(value);\r\n        } else {\r\n          bar.x = this.xScale(xScaleMin);\r\n        }\r\n        bar.y = this.yScale(label);\r\n      } else if (this.type === 'stacked') {\r\n        const offset0 = d0[d0Type];\r\n        const offset1 = offset0 + value;\r\n        d0[d0Type] += value;\r\n\r\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\r\n        bar.x = this.xScale(offset0);\r\n        bar.y = 0;\r\n        bar.offset0 = offset0;\r\n        bar.offset1 = offset1;\r\n      } else if (this.type === 'normalized') {\r\n        let offset0 = d0[d0Type];\r\n        let offset1 = offset0 + value;\r\n        d0[d0Type] += value;\r\n\r\n        if (total > 0) {\r\n          offset0 = (offset0 * 100) / total;\r\n          offset1 = (offset1 * 100) / total;\r\n        } else {\r\n          offset0 = 0;\r\n          offset1 = 0;\r\n        }\r\n\r\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\r\n        bar.x = this.xScale(offset0);\r\n        bar.y = 0;\r\n        bar.offset0 = offset0;\r\n        bar.offset1 = offset1;\r\n        value = (offset1 - offset0).toFixed(2) + '%';\r\n      }\r\n\r\n      if (this.colors.scaleType === 'ordinal') {\r\n        bar.color = this.colors.getColor(label);\r\n      } else {\r\n        if (this.type === 'standard') {\r\n          bar.color = this.colors.getColor(value);\r\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\r\n        } else {\r\n          bar.color = this.colors.getColor(bar.offset1);\r\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\r\n        }\r\n      }\r\n\r\n      let tooltipLabel = formattedLabel;\r\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\r\n      if (this.seriesName) {\r\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\r\n        bar.data.series = this.seriesName;\r\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\r\n      }\r\n\r\n      bar.tooltipText = this.tooltipDisabled\r\n        ? undefined\r\n        : `\r\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\r\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\r\n      `;\r\n\r\n      return bar;\r\n    });\r\n\r\n    this.updateDataLabels();\r\n  }\r\n\r\n  updateDataLabels() {\r\n    if (this.type === 'stacked') {\r\n      this.barsForDataLabels = [];\r\n      const section: any = {};\r\n      section.series = this.seriesName;\r\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\r\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\r\n      section.total = totalPositive + totalNegative;\r\n      section.x = 0;\r\n      section.y = 0;\r\n      // if total is positive then we show it on the right, otherwise on the left\r\n      if (section.total > 0) {\r\n        section.width = this.xScale(totalPositive);\r\n      } else {\r\n        section.width = this.xScale(totalNegative);\r\n      }\r\n      section.height = this.yScale.bandwidth();\r\n      this.barsForDataLabels.push(section);\r\n    } else {\r\n      this.barsForDataLabels = this.series.map(d => {\r\n        const section: any = {};\r\n        section.series = this.seriesName ? this.seriesName : d.label;\r\n        section.total = d.value;\r\n        section.x = this.xScale(0);\r\n        section.y = this.yScale(d.label);\r\n        section.width = this.xScale(section.total) - this.xScale(0);\r\n        section.height = this.yScale.bandwidth();\r\n        return section;\r\n      });\r\n    }\r\n  }\r\n\r\n  updateTooltipSettings() {\r\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\r\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name && entry.series === d.series;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  getLabel(dataItem): string {\r\n    if (dataItem.label) {\r\n      return dataItem.label;\r\n    }\r\n    return dataItem.name;\r\n  }\r\n\r\n  trackBy(index, bar) {\r\n    return bar.label;\r\n  }\r\n\r\n  trackDataLabelBy(index, barLabel) {\r\n    return index + '#' + barLabel.series + '#' + barLabel.total;\r\n  }\r\n\r\n  click(data: DataItem): void {\r\n    this.select.emit(data);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { formatLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-bar-label]',\r\n  template: `\r\n    <svg:text\r\n      class=\"textDataLabel\"\r\n      alignment-baseline=\"middle\"\r\n      [attr.text-anchor]=\"textAnchor\"\r\n      [attr.transform]=\"transform\"\r\n      [attr.x]=\"x\"\r\n      [attr.y]=\"y\"\r\n    >\r\n      {{ formatedValue }}\r\n    </svg:text>\r\n  `,\r\n  styleUrls: ['./bar-label.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarLabelComponent implements OnChanges {\r\n  @Input() value;\r\n  @Input() valueFormatting: any;\r\n  @Input() barX;\r\n  @Input() barY;\r\n  @Input() barWidth;\r\n  @Input() barHeight;\r\n  @Input() orientation;\r\n\r\n  @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();\r\n\r\n  element: any;\r\n  x: number;\r\n  y: number;\r\n  horizontalPadding: number = 2;\r\n  verticalPadding: number = 5;\r\n  formatedValue: string;\r\n  transform: string;\r\n  textAnchor: string;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  getSize(): any {\r\n    const h = this.element.getBoundingClientRect().height;\r\n    const w = this.element.getBoundingClientRect().width;\r\n    return { height: h, width: w, negative: this.value < 0 };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dimensionsChanged.emit(this.getSize());\r\n  }\r\n\r\n  update(): void {\r\n    if (this.valueFormatting) {\r\n      this.formatedValue = this.valueFormatting(this.value);\r\n    } else {\r\n      this.formatedValue = formatLabel(this.value);\r\n    }\r\n\r\n    if (this.orientation === 'horizontal') {\r\n      this.x = this.barX + this.barWidth;\r\n      // if the value is negative then it's on the left of the x0.\r\n      // we need to put the data label in front of the bar\r\n      if (this.value < 0) {\r\n        this.x = this.x - this.horizontalPadding;\r\n        this.textAnchor = 'end';\r\n      } else {\r\n        this.x = this.x + this.horizontalPadding;\r\n        this.textAnchor = 'start';\r\n      }\r\n      this.y = this.barY + this.barHeight / 2;\r\n    } else {\r\n      // orientation must be \"vertical\"\r\n      this.x = this.barX + this.barWidth / 2;\r\n      this.y = this.barY + this.barHeight;\r\n\r\n      if (this.value < 0) {\r\n        this.y = this.y + this.verticalPadding;\r\n        this.textAnchor = 'end';\r\n      } else {\r\n        this.y = this.y - this.verticalPadding;\r\n        this.textAnchor = 'start';\r\n      }\r\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { BarComponent } from './bar.component';\r\nimport { BarHorizontalComponent } from './bar-horizontal.component';\r\nimport { BarHorizontal2DComponent } from './bar-horizontal-2d.component';\r\nimport { BarHorizontalNormalizedComponent } from './bar-horizontal-normalized.component';\r\nimport { BarHorizontalStackedComponent } from './bar-horizontal-stacked.component';\r\nimport { BarVerticalComponent } from './bar-vertical.component';\r\nimport { BarVertical2DComponent } from './bar-vertical-2d.component';\r\nimport { BarVerticalNormalizedComponent } from './bar-vertical-normalized.component';\r\nimport { BarVerticalStackedComponent } from './bar-vertical-stacked.component';\r\nimport { SeriesHorizontal } from './series-horizontal.component';\r\nimport { SeriesVerticalComponent } from './series-vertical.component';\r\nimport { BarLabelComponent } from './bar-label.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [\r\n    BarComponent,\r\n    BarHorizontalComponent,\r\n    BarHorizontal2DComponent,\r\n    BarHorizontalNormalizedComponent,\r\n    BarHorizontalStackedComponent,\r\n    BarVerticalComponent,\r\n    BarVertical2DComponent,\r\n    BarVerticalNormalizedComponent,\r\n    BarVerticalStackedComponent,\r\n    BarLabelComponent,\r\n    SeriesHorizontal,\r\n    SeriesVerticalComponent\r\n  ],\r\n  exports: [\r\n    BarComponent,\r\n    BarHorizontalComponent,\r\n    BarHorizontal2DComponent,\r\n    BarHorizontalNormalizedComponent,\r\n    BarHorizontalStackedComponent,\r\n    BarVerticalComponent,\r\n    BarVertical2DComponent,\r\n    BarVerticalNormalizedComponent,\r\n    BarVerticalStackedComponent,\r\n    BarLabelComponent,\r\n    SeriesHorizontal,\r\n    SeriesVerticalComponent\r\n  ]\r\n})\r\nexport class BarChartModule {}\r\n","import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\n\r\nexport function getDomain(values, scaleType, autoScale, minVal?, maxVal?): number[] {\r\n  let domain: number[] = [];\r\n  if (scaleType === 'linear') {\r\n    values = values.map(v => Number(v));\r\n    if (!autoScale) {\r\n      values.push(0);\r\n    }\r\n  }\r\n\r\n  if (scaleType === 'time' || scaleType === 'linear') {\r\n    const min = minVal ? minVal : Math.min(...values);\r\n    const max = maxVal ? maxVal : Math.max(...values);\r\n\r\n    domain = [min, max];\r\n  } else {\r\n    domain = values;\r\n  }\r\n\r\n  return domain;\r\n}\r\n\r\nexport function getScale(domain, range: number[], scaleType, roundDomains): any {\r\n  let scale: any;\r\n\r\n  if (scaleType === 'time') {\r\n    scale = scaleTime()\r\n      .range(range)\r\n      .domain(domain);\r\n  } else if (scaleType === 'linear') {\r\n    scale = scaleLinear()\r\n      .range(range)\r\n      .domain(domain);\r\n\r\n    if (roundDomains) {\r\n      scale = scale.nice();\r\n    }\r\n  } else if (scaleType === 'ordinal') {\r\n    scale = scalePoint()\r\n      .range([range[0], range[1]])\r\n      .domain(domain);\r\n  }\r\n\r\n  return scale;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { getScaleType } from '../common/domain.helper';\r\nimport { getDomain, getScale } from './bubble-chart.utils';\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bubble-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [dims]=\"dims\"\r\n          [xScale]=\"xScale\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        />\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        />\r\n        <svg:rect\r\n          class=\"bubble-chart-area\"\r\n          x=\"0\"\r\n          y=\"0\"\r\n          [attr.width]=\"dims.width\"\r\n          [attr.height]=\"dims.height\"\r\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\r\n          (mouseenter)=\"deactivateAll()\"\r\n        />\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\r\n            <svg:g\r\n              ngx-charts-bubble-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [rScale]=\"rScale\"\r\n              [xScaleType]=\"xScaleType\"\r\n              [yScaleType]=\"yScaleType\"\r\n              [xAxisLabel]=\"xAxisLabel\"\r\n              [yAxisLabel]=\"yAxisLabel\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              (select)=\"onClick($event, series)\"\r\n              (activate)=\"onActivate($event)\"\r\n              (deactivate)=\"onDeactivate($event)\"\r\n            />\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(\r\n          500,\r\n          style({\r\n            opacity: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BubbleChartComponent extends BaseChartComponent {\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis: boolean = true;\r\n  @Input() yAxis: boolean = true;\r\n  @Input() showXAxisLabel: boolean;\r\n  @Input() showYAxisLabel: boolean;\r\n  @Input() xAxisLabel: string;\r\n  @Input() yAxisLabel: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() maxRadius = 10;\r\n  @Input() minRadius = 3;\r\n  @Input() autoScale: boolean;\r\n  @Input() schemeType = 'ordinal';\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() xScaleMin: any;\r\n  @Input() xScaleMax: any;\r\n  @Input() yScaleMin: any;\r\n  @Input() yScaleMax: any;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  colors: ColorHelper;\r\n  scaleType = 'linear';\r\n  margin = [10, 20, 10, 20];\r\n  bubblePadding = [0, 0, 0, 0];\r\n  data: any;\r\n\r\n  legendOptions: any;\r\n  transform: string;\r\n\r\n  clipPath: string;\r\n  clipPathId: string;\r\n\r\n  seriesDomain: any[];\r\n  xDomain: any[];\r\n  yDomain: any[];\r\n  rDomain: number[];\r\n\r\n  xScaleType: string;\r\n  yScaleType: string;\r\n\r\n  yScale: any;\r\n  xScale: any;\r\n  rScale: any;\r\n\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n\r\n  activeEntries: any[] = [];\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.seriesDomain = this.results.map(d => d.name);\r\n    this.rDomain = this.getRDomain();\r\n    this.xDomain = this.getXDomain();\r\n    this.yDomain = this.getYDomain();\r\n\r\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\r\n\r\n    const colorDomain = this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\r\n\r\n    this.data = this.results;\r\n\r\n    this.minRadius = Math.max(this.minRadius, 1);\r\n    this.maxRadius = Math.max(this.maxRadius, 1);\r\n\r\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\r\n\r\n    this.bubblePadding = [0, 0, 0, 0];\r\n    this.setScales();\r\n\r\n    this.bubblePadding = this.getBubblePadding();\r\n    this.setScales();\r\n\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  getBubblePadding() {\r\n    let yMin = 0;\r\n    let xMin = 0;\r\n    let yMax = this.dims.height;\r\n    let xMax = this.dims.width;\r\n\r\n    for (const s of this.data) {\r\n      for (const d of s.series) {\r\n        const r = this.rScale(d.r);\r\n        const cx = this.xScaleType === 'linear' ? this.xScale(Number(d.x)) : this.xScale(d.x);\r\n        const cy = this.yScaleType === 'linear' ? this.yScale(Number(d.y)) : this.yScale(d.y);\r\n        xMin = Math.max(r - cx, xMin);\r\n        yMin = Math.max(r - cy, yMin);\r\n        yMax = Math.max(cy + r, yMax);\r\n        xMax = Math.max(cx + r, xMax);\r\n      }\r\n    }\r\n\r\n    xMax = Math.max(xMax - this.dims.width, 0);\r\n    yMax = Math.max(yMax - this.dims.height, 0);\r\n\r\n    return [yMin, xMax, yMax, xMin];\r\n  }\r\n\r\n  setScales() {\r\n    let width = this.dims.width;\r\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\r\n      width = width - this.bubblePadding[1];\r\n    }\r\n    let height = this.dims.height;\r\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\r\n      height = height - this.bubblePadding[2];\r\n    }\r\n    this.xScale = this.getXScale(this.xDomain, width);\r\n    this.yScale = this.getYScale(this.yDomain, height);\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\r\n  }\r\n\r\n  getRScale(domain, range): any {\r\n    const scale = scaleLinear()\r\n      .range(range)\r\n      .domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getLegendOptions(): any {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      position: this.legendPosition,\r\n      title: undefined\r\n    };\r\n\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.rDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    const values = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.x)) {\r\n          values.push(d.x);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.xScaleType = getScaleType(values);\r\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const values = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.y)) {\r\n          values.push(d.y);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.yScaleType = getScaleType(values);\r\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\r\n  }\r\n\r\n  getRDomain(): number[] {\r\n    let min = Infinity;\r\n    let max = -Infinity;\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        const value = Number(d.r) || 1;\r\n        min = Math.min(min, value);\r\n        max = Math.max(max, value);\r\n      }\r\n    }\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-bubble-series]',\r\n  template: `\r\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\r\n      <svg:g [attr.transform]=\"circle.transform\">\r\n        <svg:g\r\n          ngx-charts-circle\r\n          [@animationState]=\"'active'\"\r\n          class=\"circle\"\r\n          [cx]=\"0\"\r\n          [cy]=\"0\"\r\n          [r]=\"circle.radius\"\r\n          [fill]=\"circle.color\"\r\n          [style.opacity]=\"circle.opacity\"\r\n          [class.active]=\"circle.isActive\"\r\n          [pointerEvents]=\"'all'\"\r\n          [data]=\"circle.value\"\r\n          [classNames]=\"circle.classNames\"\r\n          (select)=\"onClick(circle.data)\"\r\n          (activate)=\"activateCircle(circle)\"\r\n          (deactivate)=\"deactivateCircle(circle)\"\r\n          ngx-tooltip\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipPlacement]=\"'top'\"\r\n          [tooltipType]=\"'tooltip'\"\r\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipContext]=\"circle.data\"\r\n        />\r\n      </svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scale(0)'\r\n        }),\r\n        animate(250, style({ opacity: 1, transform: 'scale(1)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BubbleSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() rScale;\r\n  @Input() xScaleType;\r\n  @Input() yScaleType;\r\n  @Input() colors;\r\n  @Input() visibleValue;\r\n  @Input() activeEntries: any[];\r\n  @Input() xAxisLabel: string;\r\n  @Input() yAxisLabel: string;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  areaPath: any;\r\n  circles: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.circles = this.getCircles();\r\n  }\r\n\r\n  getCircles(): any[] {\r\n    const seriesName = this.data.name;\r\n\r\n    return this.data.series\r\n      .map((d, i) => {\r\n        if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\r\n          const y = d.y;\r\n          const x = d.x;\r\n          const r = d.r;\r\n\r\n          const radius = this.rScale(r || 1);\r\n          const tooltipLabel = formatLabel(d.name);\r\n\r\n          const cx = this.xScaleType === 'linear' ? this.xScale(Number(x)) : this.xScale(x);\r\n          const cy = this.yScaleType === 'linear' ? this.yScale(Number(y)) : this.yScale(y);\r\n\r\n          const color = this.colors.scaleType === 'linear' ? this.colors.getColor(r) : this.colors.getColor(seriesName);\r\n\r\n          const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\r\n          const opacity = isActive ? 1 : 0.3;\r\n\r\n          const data = Object.assign({}, d, {\r\n            series: seriesName,\r\n            name: d.name,\r\n            value: d.y,\r\n            x: d.x,\r\n            radius: d.r\r\n          });\r\n\r\n          return {\r\n            data,\r\n            x,\r\n            y,\r\n            r,\r\n            classNames: [`circle-data-${i}`],\r\n            value: y,\r\n            label: x,\r\n            cx,\r\n            cy,\r\n            radius,\r\n            tooltipLabel,\r\n            color,\r\n            opacity,\r\n            seriesName,\r\n            isActive,\r\n            transform: `translate(${cx},${cy})`\r\n          };\r\n        }\r\n      })\r\n      .filter(circle => circle !== undefined);\r\n  }\r\n\r\n  getTooltipText(circle): string {\r\n    const hasRadius = typeof circle.r !== 'undefined';\r\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\r\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\r\n\r\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\r\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\r\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\r\n    const x = formatLabel(circle.x);\r\n    const y = formatLabel(circle.y);\r\n    const name =\r\n      hasSeriesName && hasTooltipLabel\r\n        ? `${circle.seriesName} â¢ ${circle.tooltipLabel}`\r\n        : circle.seriesName + circle.tooltipLabel;\r\n    const tooltipTitle =\r\n      hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\r\n\r\n    return `\r\n      ${tooltipTitle}\r\n      <span class=\"tooltip-label\">\r\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\r\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\r\n      </span>\r\n      <span class=\"tooltip-val\">\r\n        ${escapeLabel(radiusValue)}\r\n      </span>\r\n    `;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isVisible(circle): boolean {\r\n    if (this.activeEntries.length > 0) {\r\n      return this.isActive({ name: circle.seriesName });\r\n    }\r\n\r\n    return circle.opacity !== 0;\r\n  }\r\n\r\n  activateCircle(circle): void {\r\n    circle.barVisible = true;\r\n    this.activate.emit({ name: this.data.name });\r\n  }\r\n\r\n  deactivateCircle(circle): void {\r\n    circle.barVisible = false;\r\n    this.deactivate.emit({ name: this.data.name });\r\n  }\r\n\r\n  trackBy(index, circle): string {\r\n    return `${circle.data.series} ${circle.data.name}`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { BubbleChartComponent } from './bubble-chart.component';\r\nimport { BubbleSeriesComponent } from './bubble-series.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [BubbleChartComponent, BubbleSeriesComponent],\r\n  exports: [BubbleChartComponent, BubbleSeriesComponent]\r\n})\r\nexport class BubbleChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { select } from 'd3-selection';\r\n\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-heat-map-cell]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\r\n      <defs *ngIf=\"gradient\">\r\n        <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n      </defs>\r\n      <svg:rect\r\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\r\n        rx=\"3\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        class=\"cell\"\r\n        style=\"cursor: pointer\"\r\n        (click)=\"onClick()\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeatMapCellComponent implements OnChanges {\r\n  @Input() fill;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() data;\r\n  @Input() label;\r\n  @Input() gradient: boolean = false;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  transform: string;\r\n  activeRange: any[];\r\n  startOpacity: number;\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n  gradientStops: any[];\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.transform = `translate(${this.x} , ${this.y})`;\r\n\r\n    this.startOpacity = 0.3;\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientUrl = `url(#${this.gradientId})`;\r\n    this.gradientStops = this.getGradientStops();\r\n\r\n    if (this.animations) {\r\n      this.loadAnimation();\r\n    }\r\n  }\r\n\r\n  getGradientStops() {\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: this.startOpacity\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    const node = select(this.element).select('.cell');\r\n    node.attr('opacity', 0);\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  animateToCurrentForm(): void {\r\n    const node = select(this.element).select('.cell');\r\n\r\n    node\r\n      .transition()\r\n      .duration(750)\r\n      .attr('opacity', 1);\r\n  }\r\n\r\n  onClick() {\r\n    this.select.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit(this.data);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-heat-map-cell-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-heat-map-cell\r\n      *ngFor=\"let c of cells; trackBy: trackBy\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [fill]=\"c.fill\"\r\n      [data]=\"c.data\"\r\n      (select)=\"onClick(c.cell)\"\r\n      (activate)=\"activate.emit(c.cell)\"\r\n      (deactivate)=\"deactivate.emit(c.cell)\"\r\n      [gradient]=\"gradient\"\r\n      [animations]=\"animations\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeatCellSeriesComponent implements OnChanges, OnInit {\r\n  @Input() data;\r\n  @Input() colors;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() gradient: boolean;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: any;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  cells: any[];\r\n\r\n  ngOnInit() {\r\n    if (!this.tooltipText) {\r\n      this.tooltipText = this.getTooltipText;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.cells = this.getCells();\r\n  }\r\n\r\n  getCells() {\r\n    const cells = [];\r\n\r\n    this.data.map(row => {\r\n      row.series.map(cell => {\r\n        const value = cell.value;\r\n        cell.series = row.name;\r\n\r\n        cells.push({\r\n          row,\r\n          cell,\r\n          x: this.xScale(row.name),\r\n          y: this.yScale(cell.name),\r\n          width: this.xScale.bandwidth(),\r\n          height: this.yScale.bandwidth(),\r\n          fill: this.colors.getColor(value),\r\n          data: value,\r\n          label: formatLabel(cell.name),\r\n          series: row.name\r\n        });\r\n      });\r\n    });\r\n\r\n    return cells;\r\n  }\r\n\r\n  getTooltipText({ label, data, series }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(series)} â¢ ${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\r\n    `;\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.tooltipText;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { scaleBand } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-heat-map',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [animations]=\"animations\"\r\n      [legendOptions]=\"legendOptions\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:rect\r\n          *ngFor=\"let rect of rects\"\r\n          [attr.x]=\"rect.x\"\r\n          [attr.y]=\"rect.y\"\r\n          [attr.rx]=\"rect.rx\"\r\n          [attr.width]=\"rect.width\"\r\n          [attr.height]=\"rect.height\"\r\n          [attr.fill]=\"rect.fill\"\r\n        />\r\n        <svg:g\r\n          ngx-charts-heat-map-cell-series\r\n          [xScale]=\"xScale\"\r\n          [yScale]=\"yScale\"\r\n          [colors]=\"colors\"\r\n          [data]=\"results\"\r\n          [gradient]=\"gradient\"\r\n          [animations]=\"animations\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipText]=\"tooltipText\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event, undefined)\"\r\n          (deactivate)=\"onDeactivate($event, undefined)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HeatMapComponent extends BaseChartComponent {\r\n  @Input() legend;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() gradient: boolean;\r\n  @Input() innerPadding: number | number[] = 8;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: any;\r\n  @Input() min: any;\r\n  @Input() max: any;\r\n  @Input() activeEntries: any[] = [];\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  xDomain: any[];\r\n  yDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  color: any;\r\n  colors: ColorHelper;\r\n  colorScale: any;\r\n  transform: string;\r\n  rects: any[];\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  scaleType: string = 'linear';\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.formatDates();\r\n\r\n    this.xDomain = this.getXDomain();\r\n    this.yDomain = this.getYDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.scaleType = getScaleType(this.valueDomain, false);\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.scaleType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.scaleType === 'linear') {\r\n      let min = this.min;\r\n      let max = this.max;\r\n      if (!this.min) {\r\n        min = Math.min(0, ...this.valueDomain);\r\n      }\r\n      if (!this.max) {\r\n        max = Math.max(...this.valueDomain);\r\n      }\r\n      this.valueDomain = [min, max];\r\n    }\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n    this.rects = this.getRects();\r\n  }\r\n\r\n  getXDomain(): any {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.name)) {\r\n        domain.push(group.name);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.name)) {\r\n          domain.push(d.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  /**\r\n   * Converts the input to gap paddingInner in fraction\r\n   * Supports the following inputs:\r\n   *    Numbers: 8\r\n   *    Strings: \"8\", \"8px\", \"8%\"\r\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\r\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\r\n   *\r\n   * @memberOf HeatMapComponent\r\n   */\r\n  getDimension(value: string | number | Array<string | number>, index = 0, N: number, L: number): number {\r\n    if (typeof value === 'string') {\r\n      value = value\r\n        .replace('[', '')\r\n        .replace(']', '')\r\n        .replace('px', '')\r\n        // tslint:disable-next-line: quotemark\r\n        .replace(\"'\", '');\r\n\r\n      if (value.includes(',')) {\r\n        value = value.split(',');\r\n      }\r\n    }\r\n    if (Array.isArray(value) && typeof index === 'number') {\r\n      return this.getDimension(value[index], null, N, L);\r\n    }\r\n    if (typeof value === 'string' && value.includes('%')) {\r\n      return +value.replace('%', '') / 100;\r\n    }\r\n    return N / (L / +value + 1);\r\n  }\r\n\r\n  getXScale(): any {\r\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.width])\r\n      .domain(this.xDomain)\r\n      .paddingInner(f);\r\n  }\r\n\r\n  getYScale(): any {\r\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\r\n    return scaleBand()\r\n      .rangeRound([this.dims.height, 0])\r\n      .domain(this.yDomain)\r\n      .paddingInner(f);\r\n  }\r\n\r\n  getRects(): any[] {\r\n    const rects = [];\r\n\r\n    this.xDomain.map(xVal => {\r\n      this.yDomain.map(yVal => {\r\n        rects.push({\r\n          x: this.xScale(xVal),\r\n          y: this.yScale(yVal),\r\n          rx: 3,\r\n          width: this.xScale.bandwidth(),\r\n          height: this.yScale.bandwidth(),\r\n          fill: 'rgba(200,200,200,0.03)'\r\n        });\r\n      });\r\n    });\r\n\r\n    return rects;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    return {\r\n      scaleType: this.scaleType,\r\n      domain: this.valueDomain,\r\n      colors: this.scaleType === 'ordinal' ? this.colors : this.colors.scale,\r\n      title: this.scaleType === 'ordinal' ? this.legendTitle : undefined,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { HeatMapCellComponent } from './heat-map-cell.component';\r\nimport { HeatCellSeriesComponent } from './heat-map-cell-series.component';\r\nimport { HeatMapComponent } from './heat-map.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\r\n  exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\r\n})\r\nexport class HeatMapModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ElementRef,\r\n  ChangeDetectionStrategy,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { select } from 'd3-selection';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-line]',\r\n  template: `\r\n    <svg:path\r\n      [@animationState]=\"'active'\"\r\n      class=\"line\"\r\n      [attr.d]=\"initialPath\"\r\n      [attr.fill]=\"fill\"\r\n      [attr.stroke]=\"stroke\"\r\n      stroke-width=\"1.5px\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [\r\n        style({\r\n          strokeDasharray: 2000,\r\n          strokeDashoffset: 2000\r\n        }),\r\n        animate(\r\n          1000,\r\n          style({\r\n            strokeDashoffset: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class LineComponent implements OnChanges {\r\n  @Input() path;\r\n  @Input() stroke;\r\n  @Input() data;\r\n  @Input() fill: string = 'none';\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  initialized: boolean = false;\r\n  initialPath: string;\r\n\r\n  constructor(private element: ElementRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this.initialized) {\r\n      this.initialized = true;\r\n      this.initialPath = this.path;\r\n    } else {\r\n      this.updatePathEl();\r\n    }\r\n  }\r\n\r\n  updatePathEl(): void {\r\n    const node = select(this.element.nativeElement).select('.line');\r\n\r\n    if (this.animations) {\r\n      node\r\n        .transition()\r\n        .duration(750)\r\n        .attr('d', this.path);\r\n    } else {\r\n      node.attr('d', this.path);\r\n    }\r\n  }\r\n}\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-line-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [scaleType]=\"scaleType\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-line-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [hasRange]=\"hasRange\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(\n          500,\n          style({\n            opacity: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class LineChartComponent extends BaseChartComponent {\n  @Input() legend;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity: number;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() showRefLines: boolean = false;\n  @Input() referenceLines: any;\n  @Input() showRefLabels: boolean = true;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  yDomainLog: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  clipPath: string;\n  clipPathId: string;\n  series: any;\n  areaPath: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  hasRange: boolean; // whether the line has a min-max range around it\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n    for (const results of this.results) {\n      for (const d of results.series) {\n        d.value = Math.floor(Math.random() * 60000) + 1 ;\n      }\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    console.log(this.scaleType);\n    console.log(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    const values = [...domain];\n    console.log(values);\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n\n    return [min, max];\n  }\n  getYDomainLog(): any[] {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n\n    return [min, max];\n  }\n  getLogTicks(ticks: any): any {\n    const newTicks = [];\n    for (let j = 0; j < ticks.length; j++) {\n      if (ticks[j] > 0) {\n        newTicks[j] = Math.log10(ticks[j]);\n      } else {\n        newTicks[j] = 0;\n      }\n    }\n    return newTicks;\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, width])\n        .domain(domain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, width])\n        .domain(domain);\n\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, width])\n        .padding(0.1)\n        .domain(domain);\n    }\n\n    return scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScaleLog(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    this.deactivateAll();\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { area, line } from 'd3-shape';\r\n\r\nimport { id } from '../utils/id';\r\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-line-series]',\r\n  template: `\r\n    <svg:g>\r\n      <defs>\r\n        <svg:g\r\n          ngx-charts-svg-linear-gradient\r\n          *ngIf=\"hasGradient\"\r\n          orientation=\"vertical\"\r\n          [name]=\"gradientId\"\r\n          [stops]=\"gradientStops\"\r\n        />\r\n      </defs>\r\n      <svg:g\r\n        ngx-charts-area\r\n        class=\"line-highlight\"\r\n        [data]=\"data\"\r\n        [path]=\"areaPath\"\r\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\r\n        [opacity]=\"0.25\"\r\n        [startOpacity]=\"0\"\r\n        [gradient]=\"true\"\r\n        [stops]=\"areaGradientStops\"\r\n        [class.active]=\"isActive(data)\"\r\n        [class.inactive]=\"isInactive(data)\"\r\n        [animations]=\"animations\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-line\r\n        class=\"line-series\"\r\n        [data]=\"data\"\r\n        [path]=\"path\"\r\n        [stroke]=\"stroke\"\r\n        [animations]=\"animations\"\r\n        [class.active]=\"isActive(data)\"\r\n        [class.inactive]=\"isInactive(data)\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-area\r\n        *ngIf=\"hasRange\"\r\n        class=\"line-series-range\"\r\n        [data]=\"data\"\r\n        [path]=\"outerPath\"\r\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\r\n        [class.active]=\"isActive(data)\"\r\n        [class.inactive]=\"isInactive(data)\"\r\n        [opacity]=\"rangeFillOpacity\"\r\n        [animations]=\"animations\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LineSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors;\r\n  @Input() scaleType;\r\n  @Input() curve: any;\r\n  @Input() activeEntries: any[];\r\n  @Input() rangeFillOpacity: number;\r\n  @Input() hasRange: boolean;\r\n  @Input() animations: boolean = true;\r\n\r\n  path: string;\r\n  outerPath: string;\r\n  areaPath: string;\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n  hasGradient: boolean;\r\n  gradientStops: any[];\r\n  areaGradientStops: any[];\r\n  stroke: any;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateGradients();\r\n\r\n    const data = this.sortData(this.data.series);\r\n\r\n    const lineGen = this.getLineGenerator();\r\n    this.path = lineGen(data) || '';\r\n\r\n    const areaGen = this.getAreaGenerator();\r\n    this.areaPath = areaGen(data) || '';\r\n\r\n    if (this.hasRange) {\r\n      const range = this.getRangeGenerator();\r\n      this.outerPath = range(data) || '';\r\n    }\r\n\r\n    if (this.hasGradient) {\r\n      this.stroke = this.gradientUrl;\r\n      const values = this.data.series.map(d => d.value);\r\n      const max = Math.max(...values);\r\n      const min = Math.min(...values);\r\n      if (max === min) {\r\n        this.stroke = this.colors.getColor(max);\r\n      }\r\n    } else {\r\n      this.stroke = this.colors.getColor(this.data.name);\r\n    }\r\n  }\r\n\r\n  getLineGenerator(): any {\r\n    return line<any>()\r\n      .x(d => {\r\n        const label = d.name;\r\n        let value;\r\n        if (this.scaleType === 'time') {\r\n          value = this.xScale(label);\r\n        } else if (this.scaleType === 'linear') {\r\n          value = this.xScale(Number(label));\r\n        } else {\r\n          value = this.xScale(label);\r\n        }\r\n        return value;\r\n      })\r\n      .y(d => this.yScale(d.value))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  getRangeGenerator(): any {\r\n    return area<any>()\r\n      .x(d => {\r\n        const label = d.name;\r\n        let value;\r\n        if (this.scaleType === 'time') {\r\n          value = this.xScale(label);\r\n        } else if (this.scaleType === 'linear') {\r\n          value = this.xScale(Number(label));\r\n        } else {\r\n          value = this.xScale(label);\r\n        }\r\n        return value;\r\n      })\r\n      .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\r\n      .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  getAreaGenerator(): any {\r\n    const xProperty = d => {\r\n      const label = d.name;\r\n      return this.xScale(label);\r\n    };\r\n\r\n    return area<any>()\r\n      .x(xProperty)\r\n      .y0(() => this.yScale.range()[0])\r\n      .y1(d => this.yScale(d.value))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  sortData(data) {\r\n    if (this.scaleType === 'linear') {\r\n      data = sortLinear(data, 'name');\r\n    } else if (this.scaleType === 'time') {\r\n      data = sortByTime(data, 'name');\r\n    } else {\r\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  updateGradients() {\r\n    if (this.colors.scaleType === 'linear') {\r\n      this.hasGradient = true;\r\n      this.gradientId = 'grad' + id().toString();\r\n      this.gradientUrl = `url(#${this.gradientId})`;\r\n      const values = this.data.series.map(d => d.value);\r\n      const max = Math.max(...values);\r\n      const min = Math.min(...values);\r\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\r\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\r\n    } else {\r\n      this.hasGradient = false;\r\n      this.gradientStops = undefined;\r\n      this.areaGradientStops = undefined;\r\n    }\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isInactive(entry): boolean {\r\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item === undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { LineComponent } from './line.component';\r\nimport { LineChartComponent } from './line-chart.component';\r\nimport { LineSeriesComponent } from './line-series.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\r\n  exports: [LineComponent, LineChartComponent, LineSeriesComponent]\r\n})\r\nexport class LineChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\r\nimport { curveCardinalClosed } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { getScaleType } from '../common/domain.helper';\r\nimport { isDate } from '../utils/types';\r\n\r\nconst twoPI = 2 * Math.PI;\r\n\r\n@Component({\r\n  selector: 'ngx-charts-polar-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\r\n        <svg:g [attr.transform]=\"transformPlot\">\r\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\r\n          <svg:g *ngIf=\"showGridLines\">\r\n            <svg:circle\r\n              *ngFor=\"let r of radiusTicks\"\r\n              class=\"gridline-path radial-gridline-path\"\r\n              cx=\"0\"\r\n              cy=\"0\"\r\n              [attr.r]=\"r\"\r\n            />\r\n          </svg:g>\r\n          <svg:g *ngIf=\"xAxis\">\r\n            <svg:g\r\n              ngx-charts-pie-label\r\n              *ngFor=\"let tick of thetaTicks\"\r\n              [data]=\"tick\"\r\n              [radius]=\"outerRadius\"\r\n              [label]=\"tick.label\"\r\n              [max]=\"outerRadius\"\r\n              [value]=\"showGridLines ? 1 : outerRadius\"\r\n              [explodeSlices]=\"true\"\r\n              [animations]=\"animations\"\r\n              [labelTrim]=\"labelTrim\"\r\n              [labelTrimSize]=\"labelTrimSize\"\r\n            ></svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          [attr.transform]=\"transformYAxis\"\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yAxisScale\"\r\n          [dims]=\"yAxisDims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-axis-label\r\n          *ngIf=\"xAxis && showXAxisLabel\"\r\n          [label]=\"xAxisLabel\"\r\n          [offset]=\"labelOffset\"\r\n          [orient]=\"'bottom'\"\r\n          [height]=\"dims.height\"\r\n          [width]=\"dims.width\"\r\n        ></svg:g>\r\n        <svg:g [attr.transform]=\"transformPlot\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\r\n            <svg:g\r\n              ngx-charts-polar-series\r\n              [gradient]=\"gradient\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [scaleType]=\"scaleType\"\r\n              [curve]=\"curve\"\r\n              [rangeFillOpacity]=\"rangeFillOpacity\"\r\n              [animations]=\"animations\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              (select)=\"onClick($event)\"\r\n              (activate)=\"onActivate($event)\"\r\n              (deactivate)=\"onDeactivate($event)\"\r\n            />\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: [\r\n    '../common/base-chart.component.scss',\r\n    '../pie-chart/pie-chart.component.scss',\r\n    './polar-chart.component.scss'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(\r\n          500,\r\n          style({\r\n            opacity: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class PolarChartComponent extends BaseChartComponent {\r\n  @Input() legend: boolean;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis: boolean;\r\n  @Input() yAxis: boolean;\r\n  @Input() showXAxisLabel: boolean;\r\n  @Input() showYAxisLabel: boolean;\r\n  @Input() xAxisLabel: string;\r\n  @Input() yAxisLabel: string;\r\n  @Input() autoScale: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveCardinalClosed;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() rangeFillOpacity: number = 0.15;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: (o: any) => any;\r\n  @Input() yAxisTickFormatting: (o: any) => any;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() showSeriesOnHover: boolean = true;\r\n  @Input() gradient: boolean = false;\r\n  @Input() yAxisMinScale: number = 0;\r\n  @Input() labelTrim: boolean = true;\r\n  @Input() labelTrimSize: number = 10;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  yAxisDims: ViewDimensions;\r\n  labelOffset: number;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  seriesDomain: any;\r\n  yScale: any; // -> rScale\r\n  xScale: any; // -> tScale\r\n  yAxisScale: any; // -> yScale\r\n  colors: ColorHelper;\r\n  scaleType: string;\r\n  transform: string;\r\n  transformPlot: string;\r\n  transformYAxis: string;\r\n  transformXAxis: string;\r\n  series: any; // ???\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n  thetaTicks: any[];\r\n  radiusTicks: number[];\r\n  outerRadius: number;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.setDims();\r\n\r\n    this.setScales();\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.setTicks();\r\n  }\r\n\r\n  setDims() {\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    const halfWidth = Math.floor(this.dims.width / 2);\r\n    const halfHeight = Math.floor(this.dims.height / 2);\r\n\r\n    const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\r\n\r\n    const yOffset = Math.max(0, halfHeight - outerRadius);\r\n\r\n    this.yAxisDims = {\r\n      ...this.dims,\r\n      width: halfWidth\r\n    };\r\n\r\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\r\n    this.transformYAxis = `translate(0, ${yOffset})`;\r\n    this.labelOffset = this.dims.height + 40;\r\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\r\n  }\r\n\r\n  setScales() {\r\n    const xValues = this.getXValues();\r\n    this.scaleType = getScaleType(xValues);\r\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, twoPI);\r\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\r\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\r\n  }\r\n\r\n  setTicks() {\r\n    let tickFormat;\r\n    if (this.xAxisTickFormatting) {\r\n      tickFormat = this.xAxisTickFormatting;\r\n    } else if (this.xScale.tickFormat) {\r\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\r\n    } else {\r\n      tickFormat = d => {\r\n        if (isDate(d)) {\r\n          return d.toLocaleDateString();\r\n        }\r\n        return d.toLocaleString();\r\n      };\r\n    }\r\n\r\n    const outerRadius = this.outerRadius;\r\n    const s = 1.1;\r\n\r\n    this.thetaTicks = this.xDomain.map(d => {\r\n      const startAngle = this.xScale(d);\r\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\r\n      const label = tickFormat(d);\r\n\r\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\r\n      const pos = [dd, s * startPos[1]];\r\n      return {\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle: startAngle,\r\n        value: outerRadius,\r\n        label,\r\n        startPos,\r\n        pos\r\n      };\r\n    });\r\n\r\n    const minDistance = 10;\r\n\r\n    /* from pie chart, abstract out -*/\r\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\r\n      const a = this.thetaTicks[i];\r\n\r\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\r\n        const b = this.thetaTicks[j];\r\n        // if they're on the same side\r\n        if (b.pos[0] * a.pos[0] > 0) {\r\n          // if they're overlapping\r\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\r\n          if (o > 0) {\r\n            // push the second up or down\r\n            b.pos[1] += Math.sign(b.pos[0]) * o;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\r\n  }\r\n\r\n  getXValues(): any[] {\r\n    const values = [];\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.name)) {\r\n          values.push(d.name);\r\n        }\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  getXDomain(values = this.getXValues()): any[] {\r\n    if (this.scaleType === 'time') {\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      return [min, max];\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      return [min, max];\r\n    }\r\n    return values;\r\n  }\r\n\r\n  getYValues(): any[] {\r\n    const domain = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (domain.indexOf(d.value) < 0) {\r\n          domain.push(d.value);\r\n        }\r\n        if (d.min !== undefined) {\r\n          if (domain.indexOf(d.min) < 0) {\r\n            domain.push(d.min);\r\n          }\r\n        }\r\n        if (d.max !== undefined) {\r\n          if (domain.indexOf(d.max) < 0) {\r\n            domain.push(d.max);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(domain = this.getYValues()): any[] {\r\n    let min = Math.min(...domain);\r\n    const max = Math.max(this.yAxisMinScale, ...domain);\r\n\r\n    min = Math.max(0, min);\r\n    if (!this.autoScale) {\r\n      min = Math.min(0, min);\r\n    }\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    switch (this.scaleType) {\r\n      case 'time':\r\n        return scaleTime()\r\n          .range([0, width])\r\n          .domain(domain);\r\n      case 'linear':\r\n        const scale = scaleLinear()\r\n          .range([0, width])\r\n          .domain(domain);\r\n        return this.roundDomains ? scale.nice() : scale;\r\n      default:\r\n        return scalePoint()\r\n          .range([0, width - twoPI / domain.length])\r\n          .padding(0)\r\n          .domain(domain);\r\n    }\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear()\r\n      .range([0, height])\r\n      .domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    const domain = this.schemeType === 'ordinal' ? this.seriesDomain : this.yDomain.reverse();\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    if (this.schemeType === 'ordinal') {\r\n      return {\r\n        scaleType: this.schemeType,\r\n        colors: this.colors,\r\n        domain: this.seriesDomain,\r\n        title: this.legendTitle,\r\n        position: this.legendPosition\r\n      };\r\n    }\r\n    return {\r\n      scaleType: this.schemeType,\r\n      colors: this.colors.scale,\r\n      domain: this.yDomain,\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.name;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { lineRadial } from 'd3-shape';\r\n\r\nimport { id } from '../utils/id';\r\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\r\nimport { escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-polar-series]',\r\n  template: `\r\n    <svg:g class=\"polar-charts-series\">\r\n      <defs>\r\n        <svg:g\r\n          ngx-charts-svg-radial-gradient\r\n          *ngIf=\"hasGradient\"\r\n          orientation=\"vertical\"\r\n          [color]=\"seriesColor\"\r\n          [name]=\"gradientId\"\r\n          [startOpacity]=\"0.25\"\r\n          [endOpacity]=\"1\"\r\n          [stops]=\"gradientStops\"\r\n        />\r\n      </defs>\r\n      <svg:g\r\n        ngx-charts-line\r\n        class=\"polar-series-path\"\r\n        [path]=\"path\"\r\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\r\n        [class.active]=\"active\"\r\n        [class.inactive]=\"inactive\"\r\n        [attr.fill-opacity]=\"rangeFillOpacity\"\r\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\r\n        [animations]=\"animations\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-circle\r\n        *ngFor=\"let circle of circles\"\r\n        class=\"circle\"\r\n        [cx]=\"circle.cx\"\r\n        [cy]=\"circle.cy\"\r\n        [r]=\"circleRadius\"\r\n        [fill]=\"circle.color\"\r\n        [style.opacity]=\"inactive ? 0.2 : 1\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'top'\"\r\n        tooltipType=\"tooltip\"\r\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipContext]=\"circle.data\"\r\n        (select)=\"select.emit(circle.data)\"\r\n        (activate)=\"activate.emit({ name: circle.data.series })\"\r\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PolarSeriesComponent implements OnChanges {\r\n  @Input() name;\r\n  @Input() data;\r\n  @Input() xScale; // Theta\r\n  @Input() yScale; // R\r\n  @Input() colors;\r\n  @Input() scaleType;\r\n  @Input() curve: any;\r\n  @Input() activeEntries: any[];\r\n  @Input() rangeFillOpacity: number;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: (o: any) => string;\r\n  @Input() gradient: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  path: string;\r\n  circles: any[];\r\n  circleRadius: number = 3;\r\n\r\n  outerPath: string;\r\n  areaPath: string;\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n  hasGradient: boolean;\r\n  gradientStops: any[];\r\n  areaGradientStops: any[];\r\n  seriesColor: string;\r\n\r\n  active: boolean;\r\n  inactive: boolean;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateGradients();\r\n\r\n    const line = this.getLineGenerator();\r\n\r\n    const data = this.sortData(this.data.series);\r\n\r\n    const seriesName = this.data.name;\r\n    const linearScaleType = this.colors.scaleType === 'linear';\r\n    const min = this.yScale.domain()[0];\r\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\r\n\r\n    this.path = line(data) || '';\r\n\r\n    this.circles = data.map(d => {\r\n      const a = this.getAngle(d);\r\n      const r = this.getRadius(d);\r\n      const value = d.value;\r\n\r\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\r\n\r\n      const cData = Object.assign({}, d, {\r\n        series: seriesName,\r\n        value,\r\n        name: d.name\r\n      });\r\n\r\n      return {\r\n        data: cData,\r\n        cx: r * Math.sin(a),\r\n        cy: -r * Math.cos(a),\r\n        value,\r\n        color,\r\n        label: d.name\r\n      };\r\n    });\r\n\r\n    this.active = this.isActive(this.data);\r\n    this.inactive = this.isInactive(this.data);\r\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\r\n  }\r\n\r\n  getAngle(d) {\r\n    const label = d.name;\r\n    if (this.scaleType === 'time') {\r\n      return this.xScale(label);\r\n    } else if (this.scaleType === 'linear') {\r\n      return this.xScale(Number(label));\r\n    }\r\n    return this.xScale(label);\r\n  }\r\n\r\n  getRadius(d) {\r\n    return this.yScale(d.value);\r\n  }\r\n\r\n  getLineGenerator(): any {\r\n    return lineRadial<any>()\r\n      .angle(d => this.getAngle(d))\r\n      .radius(d => this.getRadius(d))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  sortData(data) {\r\n    if (this.scaleType === 'linear') {\r\n      return sortLinear(data, 'name');\r\n    } else if (this.scaleType === 'time') {\r\n      return sortByTime(data, 'name');\r\n    }\r\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isInactive(entry): boolean {\r\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item === undefined;\r\n  }\r\n\r\n  defaultTooltipText({ label, value }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} â¢ ${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\r\n    `;\r\n  }\r\n\r\n  updateGradients() {\r\n    this.hasGradient = this.gradient || this.colors.scaleType === 'linear';\r\n\r\n    if (!this.hasGradient) {\r\n      return;\r\n    }\r\n\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientUrl = `url(#${this.gradientId})`;\r\n\r\n    if (this.colors.scaleType === 'linear') {\r\n      const values = this.data.series.map(d => d.value);\r\n      const max = Math.max(...values);\r\n      const min = Math.min(...values);\r\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\r\n    } else {\r\n      this.gradientStops = undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-advanced-pie-chart',\r\n  template: `\r\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\r\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\r\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\r\n            <svg:g\r\n              ngx-charts-pie-series\r\n              [colors]=\"colors\"\r\n              [series]=\"results\"\r\n              [innerRadius]=\"innerRadius\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [outerRadius]=\"outerRadius\"\r\n              [gradient]=\"gradient\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipText]=\"tooltipText\"\r\n              (select)=\"onClick($event)\"\r\n              (activate)=\"onActivate($event)\"\r\n              (deactivate)=\"onDeactivate($event)\"\r\n              [animations]=\"animations\"\r\n            ></svg:g>\r\n          </svg:g>\r\n        </ngx-charts-chart>\r\n      </div>\r\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\r\n        <ngx-charts-advanced-legend\r\n          [data]=\"results\"\r\n          [colors]=\"colors\"\r\n          [width]=\"width - dims.width - margin[1]\"\r\n          [label]=\"label\"\r\n          [animations]=\"animations\"\r\n          [valueFormatting]=\"valueFormatting\"\r\n          [labelFormatting]=\"nameFormatting\"\r\n          [percentageFormatting]=\"percentageFormatting\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event, true)\"\r\n          (deactivate)=\"onDeactivate($event, true)\"\r\n        >\r\n        </ngx-charts-advanced-legend>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './advanced-pie-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdvancedPieChartComponent extends BaseChartComponent {\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: any;\r\n  @Input() label: string = 'Total';\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  data: any;\r\n  dims: ViewDimensions;\r\n  domain: any[];\r\n  outerRadius: number;\r\n  innerRadius: number;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  legendWidth: number;\r\n  margin = [20, 20, 20, 20];\r\n\r\n  @Input() valueFormatting: (value: number) => any;\r\n  @Input() nameFormatting: (value: string) => any;\r\n  @Input() percentageFormatting: (value: number) => any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: (this.width * 4) / 12.0,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.domain = this.getDomain();\r\n    this.setColors();\r\n\r\n    const xOffset = this.dims.width / 2;\r\n    const yOffset = this.margin[0] + this.dims.height / 2;\r\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\r\n\r\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\r\n    this.innerRadius = this.outerRadius * 0.75;\r\n\r\n    this.transform = `translate(${xOffset} , ${yOffset})`;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data: DataItem) {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { arc } from 'd3-shape';\r\n\r\nimport { trimLabel } from '../common/trim-label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-label]',\r\n  template: `\r\n    <title>{{ label }}</title>\r\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\r\n      <svg:text\r\n        class=\"pie-label\"\r\n        [class.animation]=\"animations\"\r\n        dy=\".35em\"\r\n        [style.textAnchor]=\"textAnchor()\"\r\n        [style.shapeRendering]=\"'crispEdges'\"\r\n      >\r\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\r\n      </svg:text>\r\n    </svg:g>\r\n    <svg:path\r\n      [attr.d]=\"line\"\r\n      [attr.stroke]=\"color\"\r\n      fill=\"none\"\r\n      class=\"pie-label-line line\"\r\n      [class.animation]=\"animations\"\r\n    ></svg:path>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieLabelComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() radius;\r\n  @Input() label;\r\n  @Input() color;\r\n  @Input() max;\r\n  @Input() value;\r\n  @Input() explodeSlices;\r\n  @Input() animations: boolean = true;\r\n  @Input() labelTrim: boolean = true;\r\n  @Input() labelTrimSize: number = 10;\r\n\r\n  trimLabel: (label: string, max?: number) => string;\r\n  line: string;\r\n\r\n  private readonly isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\r\n\r\n  constructor() {\r\n    this.trimLabel = trimLabel;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    let startRadius = this.radius;\r\n    if (this.explodeSlices) {\r\n      startRadius = (this.radius * this.value) / this.max;\r\n    }\r\n\r\n    const innerArc = arc()\r\n      .innerRadius(startRadius)\r\n      .outerRadius(startRadius);\r\n\r\n    // Calculate innerPos then scale outer position to match label position\r\n    const innerPos = innerArc.centroid(this.data);\r\n\r\n    let scale = this.data.pos[1] / innerPos[1];\r\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\r\n      scale = 1;\r\n    }\r\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\r\n\r\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\r\n  }\r\n\r\n  get textX(): number {\r\n    return this.data.pos[0];\r\n  }\r\n\r\n  get textY(): number {\r\n    return this.data.pos[1];\r\n  }\r\n\r\n  get styleTransform(): string {\r\n    return this.isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\r\n  }\r\n\r\n  get attrTransform(): string {\r\n    return !this.isIE ? null : `translate(${this.textX},${this.textY})`;\r\n  }\r\n\r\n  get textTransition(): string {\r\n    return this.isIE || !this.animations ? null : 'transform 0.75s';\r\n  }\r\n\r\n  textAnchor(): any {\r\n    return this.midAngle(this.data) < Math.PI ? 'start' : 'end';\r\n  }\r\n\r\n  midAngle(d): number {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { interpolate } from 'd3-interpolate';\r\nimport { select } from 'd3-selection';\r\nimport { arc } from 'd3-shape';\r\n\r\nimport { id } from '../utils/id';\r\n/* tslint:disable */\r\nimport { MouseEvent } from '../events';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-arc]',\r\n  template: `\r\n    <svg:g class=\"arc-group\">\r\n      <svg:defs *ngIf=\"gradient\">\r\n        <svg:g\r\n          ngx-charts-svg-radial-gradient\r\n          [color]=\"fill\"\r\n          orientation=\"vertical\"\r\n          [name]=\"radialGradientId\"\r\n          [startOpacity]=\"startOpacity\"\r\n        />\r\n      </svg:defs>\r\n      <svg:path\r\n        [attr.d]=\"path\"\r\n        class=\"arc\"\r\n        [class.active]=\"isActive\"\r\n        [attr.fill]=\"getGradient()\"\r\n        (click)=\"onClick()\"\r\n        (dblclick)=\"onDblClick($event)\"\r\n        (mouseenter)=\"activate.emit(data)\"\r\n        (mouseleave)=\"deactivate.emit(data)\"\r\n        [style.pointer-events]=\"getPointerEvents()\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieArcComponent implements OnChanges {\r\n  @Input() fill;\r\n  @Input() startAngle: number = 0;\r\n  @Input() endAngle: number = Math.PI * 2;\r\n  @Input() innerRadius;\r\n  @Input() outerRadius;\r\n  @Input() cornerRadius: number = 0;\r\n  @Input() value;\r\n  @Input() max;\r\n  @Input() data;\r\n  @Input() explodeSlices: boolean = false;\r\n  @Input() gradient: boolean = false;\r\n  @Input() animate: boolean = true;\r\n  @Input() pointerEvents: boolean = true;\r\n  @Input() isActive: boolean = false;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n  @Output() dblclick = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  path: any;\r\n  startOpacity: number;\r\n  radialGradientId: string;\r\n  linearGradientId: string;\r\n  gradientFill: string;\r\n  initialized: boolean = false;\r\n  private _timeout;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  getGradient() {\r\n    return this.gradient ? this.gradientFill : this.fill;\r\n  }\r\n\r\n  getPointerEvents() {\r\n    return this.pointerEvents ? 'auto' : 'none';\r\n  }\r\n\r\n  update(): void {\r\n    const calc = this.calculateArc();\r\n    this.startOpacity = 0.5;\r\n    this.radialGradientId = 'linearGrad' + id().toString();\r\n    this.gradientFill = `url(#${this.radialGradientId})`;\r\n\r\n    if (this.animate) {\r\n      if (this.initialized) {\r\n        this.updateAnimation();\r\n      } else {\r\n        this.loadAnimation();\r\n        this.initialized = true;\r\n      }\r\n    } else {\r\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\r\n    }\r\n  }\r\n\r\n  calculateArc(): any {\r\n    let outerRadius = this.outerRadius;\r\n    if (this.explodeSlices && this.innerRadius === 0) {\r\n      outerRadius = (this.outerRadius * this.value) / this.max;\r\n    }\r\n\r\n    return arc()\r\n      .innerRadius(this.innerRadius)\r\n      .outerRadius(outerRadius)\r\n      .cornerRadius(this.cornerRadius);\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    const node = select(this.element)\r\n      .selectAll('.arc')\r\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\r\n\r\n    const calc = this.calculateArc();\r\n\r\n    node\r\n      .transition()\r\n      .attrTween('d', function(d) {\r\n        (<any>this)._current = (<any>this)._current || d;\r\n        const copyOfD = Object.assign({}, d);\r\n        copyOfD.endAngle = copyOfD.startAngle;\r\n        const interpolater = interpolate(copyOfD, copyOfD);\r\n        (<any>this)._current = interpolater(0);\r\n        return function(t) {\r\n          return calc(interpolater(t));\r\n        };\r\n      })\r\n      .transition()\r\n      .duration(750)\r\n      .attrTween('d', function(d) {\r\n        (<any>this)._current = (<any>this)._current || d;\r\n        const interpolater = interpolate((<any>this)._current, d);\r\n        (<any>this)._current = interpolater(0);\r\n        return function(t) {\r\n          return calc(interpolater(t));\r\n        };\r\n      });\r\n  }\r\n\r\n  updateAnimation(): void {\r\n    const node = select(this.element)\r\n      .selectAll('.arc')\r\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\r\n\r\n    const calc = this.calculateArc();\r\n\r\n    node\r\n      .transition()\r\n      .duration(750)\r\n      .attrTween('d', function(d) {\r\n        (<any>this)._current = (<any>this)._current || d;\r\n        const interpolater = interpolate((<any>this)._current, d);\r\n        (<any>this)._current = interpolater(0);\r\n        return function(t) {\r\n          return calc(interpolater(t));\r\n        };\r\n      });\r\n  }\r\n\r\n  onClick(): void {\r\n    clearTimeout(this._timeout);\r\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\r\n  }\r\n\r\n  onDblClick(event: MouseEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    clearTimeout(this._timeout);\r\n\r\n    this.dblclick.emit({\r\n      data: this.data,\r\n      nativeEvent: event\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-pie-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\r\n        <svg:g\r\n          ngx-charts-pie-series\r\n          [colors]=\"colors\"\r\n          [series]=\"data\"\r\n          [showLabels]=\"labels\"\r\n          [labelFormatting]=\"labelFormatting\"\r\n          [trimLabels]=\"trimLabels\"\r\n          [maxLabelLength]=\"maxLabelLength\"\r\n          [activeEntries]=\"activeEntries\"\r\n          [innerRadius]=\"innerRadius\"\r\n          [outerRadius]=\"outerRadius\"\r\n          [explodeSlices]=\"explodeSlices\"\r\n          [gradient]=\"gradient\"\r\n          [animations]=\"animations\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipText]=\"tooltipText\"\r\n          (dblclick)=\"dblclick.emit($event)\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event)\"\r\n          (deactivate)=\"onDeactivate($event)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './pie-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieChartComponent extends BaseChartComponent {\r\n  @Input() labels = false;\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() explodeSlices = false;\r\n  @Input() doughnut = false;\r\n  @Input() arcWidth = 0.25;\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() labelFormatting: any;\r\n  @Input() trimLabels: boolean = true;\r\n  @Input() maxLabelLength: number = 10;\r\n  @Input() tooltipText: any;\r\n  @Output() dblclick = new EventEmitter();\r\n  // optional margins\r\n  @Input() margins: number[];\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  translation: string;\r\n  outerRadius: number;\r\n  innerRadius: number;\r\n  data: any;\r\n  colors: ColorHelper;\r\n  domain: any;\r\n  dims: any;\r\n  legendOptions: any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\r\n      this.margins = [30, 80, 30, 80];\r\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\r\n      // default value for margins\r\n      this.margins = [20, 20, 20, 20];\r\n    }\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margins,\r\n      showLegend: this.legend,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    const xOffset = this.margins[3] + this.dims.width / 2;\r\n    const yOffset = this.margins[0] + this.dims.height / 2;\r\n    this.translation = `translate(${xOffset}, ${yOffset})`;\r\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\r\n    if (this.labels) {\r\n      // make room for labels\r\n      this.outerRadius /= 3;\r\n    } else {\r\n      this.outerRadius /= 2;\r\n    }\r\n    this.innerRadius = 0;\r\n    if (this.doughnut) {\r\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\r\n    }\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    // sort data according to domain\r\n    this.data = this.results.sort((a, b) => {\r\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\r\n    });\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data: DataItem): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    return {\r\n      scaleType: 'ordinal',\r\n      domain: this.domain,\r\n      colors: this.colors,\r\n      title: this.legendTitle,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  private hasNoOptionalMarginsSet(): boolean {\r\n    return !this.margins || this.margins.length <= 0;\r\n  }\r\n}\r\n","import { scaleBand } from 'd3-scale';\r\n\r\nexport function gridSize(dims, len, minWidth) {\r\n  let rows = 1;\r\n  let cols = len;\r\n  const width = dims.width;\r\n\r\n  if (width > minWidth) {\r\n    while (width / cols < minWidth) {\r\n      rows += 1;\r\n      cols = Math.ceil(len / rows);\r\n    }\r\n  }\r\n\r\n  return [cols, rows];\r\n}\r\n\r\nexport function gridLayout(dims, data, minWidth, designatedTotal) {\r\n  const xScale: any = scaleBand<number>();\r\n  const yScale: any = scaleBand<number>();\r\n  const width = dims.width;\r\n  const height = dims.height;\r\n\r\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\r\n\r\n  const xDomain = [];\r\n  const yDomain = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    yDomain.push(i);\r\n  }\r\n  for (let i = 0; i < columns; i++) {\r\n    xDomain.push(i);\r\n  }\r\n  xScale.domain(xDomain);\r\n  yScale.domain(yDomain);\r\n\r\n  xScale.rangeRound([0, width], 0.1);\r\n  yScale.rangeRound([0, height], 0.1);\r\n\r\n  const res = [];\r\n  const total = designatedTotal ? designatedTotal : getTotal(data);\r\n  const cardWidth = xScale.bandwidth();\r\n  const cardHeight = yScale.bandwidth();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    res[i] = {};\r\n    res[i].data = {\r\n      name: data[i] ? data[i].name : '',\r\n      value: data[i] ? data[i].value : undefined,\r\n      extra: data[i] ? data[i].extra : undefined,\r\n      label: data[i] ? data[i].label : ''\r\n    };\r\n    res[i].x = xScale(i % columns);\r\n    res[i].y = yScale(Math.floor(i / columns));\r\n    res[i].width = cardWidth;\r\n    res[i].height = cardHeight;\r\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\r\n    res[i].data.total = total;\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction getTotal(results) {\r\n  return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { min } from 'd3-array';\r\nimport { format } from 'd3-format';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport { gridLayout } from '../common/grid-layout.helper';\r\nimport { formatLabel } from '../common/label.helper';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-pie-grid',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\r\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\r\n          <svg:g\r\n            ngx-charts-pie-grid-series\r\n            [colors]=\"series.colors\"\r\n            [data]=\"series.data\"\r\n            [innerRadius]=\"series.innerRadius\"\r\n            [outerRadius]=\"series.outerRadius\"\r\n            [animations]=\"animations\"\r\n            (select)=\"onClick($event)\"\r\n            ngx-tooltip\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipPlacement]=\"'top'\"\r\n            [tooltipType]=\"'tooltip'\"\r\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [tooltipContext]=\"series.data[0].data\"\r\n            (activate)=\"onActivate($event)\"\r\n            (deactivate)=\"onDeactivate($event)\"\r\n          />\r\n          <svg:text\r\n            *ngIf=\"animations\"\r\n            class=\"label percent-label\"\r\n            dy=\"-0.5em\"\r\n            x=\"0\"\r\n            y=\"5\"\r\n            ngx-charts-count-up\r\n            [countTo]=\"series.percent\"\r\n            [countSuffix]=\"'%'\"\r\n            text-anchor=\"middle\"\r\n          ></svg:text>\r\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\r\n            {{ series.percent.toLocaleString() }}\r\n          </svg:text>\r\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\r\n            {{ series.label }}\r\n          </svg:text>\r\n          <svg:text\r\n            *ngIf=\"animations\"\r\n            class=\"label\"\r\n            dy=\"1.23em\"\r\n            x=\"0\"\r\n            [attr.y]=\"series.outerRadius\"\r\n            text-anchor=\"middle\"\r\n            ngx-charts-count-up\r\n            [countTo]=\"series.total\"\r\n            [countPrefix]=\"label + ': '\"\r\n          ></svg:text>\r\n          <svg:text\r\n            *ngIf=\"!animations\"\r\n            class=\"label\"\r\n            dy=\"1.23em\"\r\n            x=\"0\"\r\n            [attr.y]=\"series.outerRadius\"\r\n            text-anchor=\"middle\"\r\n          >\r\n            {{ label }}: {{ series.total.toLocaleString() }}\r\n          </svg:text>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './pie-grid.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieGridComponent extends BaseChartComponent {\r\n  @Input() designatedTotal: number;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: (o: any) => any;\r\n  @Input() label: string = 'Total';\r\n  @Input() minWidth: number = 150;\r\n  @Input() activeEntries: any[] = [];\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  dims: ViewDimensions;\r\n  data: any[];\r\n  transform: string;\r\n  series: any[];\r\n  domain: any[];\r\n  colorScale: ColorHelper;\r\n  margin = [20, 20, 20, 20];\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\r\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\r\n\r\n    this.series = this.getSeries();\r\n    this.setColors();\r\n\r\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\r\n  }\r\n\r\n  defaultTooltipText({ data }): string {\r\n    const label = trimLabel(formatLabel(data.name));\r\n    const val = data.value.toLocaleString();\r\n    return `\r\n      <span class=\"tooltip-label\">${label}</span>\r\n      <span class=\"tooltip-val\">${val}</span>\r\n    `;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  getSeries(): any[] {\r\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\r\n\r\n    return this.data.map(d => {\r\n      const baselineLabelHeight = 20;\r\n      const padding = 10;\r\n      const name = d.data.name;\r\n      const label = formatLabel(name);\r\n      const value = d.data.value;\r\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\r\n      const innerRadius = radius * 0.9;\r\n\r\n      let count = 0;\r\n      const colors = () => {\r\n        count += 1;\r\n        if (count === 1) {\r\n          return 'rgba(100,100,100,0.3)';\r\n        } else {\r\n          return this.colorScale.getColor(label);\r\n        }\r\n      };\r\n\r\n      const xPos = d.x + (d.width - padding) / 2;\r\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\r\n\r\n      return {\r\n        transform: `translate(${xPos}, ${yPos})`,\r\n        colors,\r\n        innerRadius,\r\n        outerRadius: radius,\r\n        name,\r\n        label: trimLabel(label),\r\n        total: value,\r\n        value,\r\n        percent: format('.1%')(d.data.percent),\r\n        data: [\r\n          d,\r\n          {\r\n            data: {\r\n              other: true,\r\n              value: total - value,\r\n              name: d.data.name\r\n            }\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  getTotal(): any {\r\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n  }\r\n\r\n  onClick(data: DataItem): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { pie } from 'd3-shape';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-grid-series]',\r\n  template: `\r\n    <svg:g class=\"pie-grid-arcs\">\r\n      <svg:g\r\n        ngx-charts-pie-arc\r\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\r\n        [attr.class]=\"arc.class\"\r\n        [startAngle]=\"arc.startAngle\"\r\n        [endAngle]=\"arc.endAngle\"\r\n        [innerRadius]=\"innerRadius\"\r\n        [outerRadius]=\"outerRadius\"\r\n        [fill]=\"color(arc)\"\r\n        [value]=\"arc.data.value\"\r\n        [data]=\"arc.data\"\r\n        [gradient]=\"false\"\r\n        [pointerEvents]=\"arc.pointerEvents\"\r\n        [animate]=\"arc.animate\"\r\n        (select)=\"onClick($event)\"\r\n        (activate)=\"activate.emit($event)\"\r\n        (deactivate)=\"deactivate.emit($event)\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieGridSeriesComponent implements OnChanges {\r\n  @Input() colors;\r\n  @Input() data;\r\n  @Input() innerRadius = 70;\r\n  @Input() outerRadius = 80;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  layout: any;\r\n  arcs: any;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.layout = pie<any, any>()\r\n      .value(d => d.data.value)\r\n      .sort(null);\r\n\r\n    this.arcs = this.getArcs();\r\n  }\r\n\r\n  getArcs(): any[] {\r\n    return this.layout(this.data).map((arc, index) => {\r\n      const label = arc.data.data.name;\r\n      const other = arc.data.data.other;\r\n\r\n      if (index === 0) {\r\n        arc.startAngle = 0;\r\n      }\r\n\r\n      const color = this.colors(label);\r\n      return {\r\n        data: arc.data.data,\r\n        class: 'arc ' + 'arc' + index,\r\n        fill: color,\r\n        startAngle: other ? 0 : arc.startAngle,\r\n        endAngle: arc.endAngle,\r\n        animate: this.animations && !other,\r\n        pointerEvents: !other\r\n      };\r\n    });\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(this.data[0].data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.data.name;\r\n  }\r\n\r\n  label(arc): string {\r\n    return arc.data.name;\r\n  }\r\n\r\n  color(arc): any {\r\n    return this.colors(this.label(arc));\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  SimpleChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { max } from 'd3-array';\r\nimport { arc, pie } from 'd3-shape';\r\n\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-series]',\r\n  template: `\r\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\r\n      <svg:g\r\n        ngx-charts-pie-label\r\n        *ngIf=\"labelVisible(arc)\"\r\n        [data]=\"arc\"\r\n        [radius]=\"outerRadius\"\r\n        [color]=\"color(arc)\"\r\n        [label]=\"labelText(arc)\"\r\n        [labelTrim]=\"trimLabels\"\r\n        [labelTrimSize]=\"maxLabelLength\"\r\n        [max]=\"max\"\r\n        [value]=\"arc.value\"\r\n        [explodeSlices]=\"explodeSlices\"\r\n        [animations]=\"animations\"\r\n      ></svg:g>\r\n      <svg:g\r\n        ngx-charts-pie-arc\r\n        [startAngle]=\"arc.startAngle\"\r\n        [endAngle]=\"arc.endAngle\"\r\n        [innerRadius]=\"innerRadius\"\r\n        [outerRadius]=\"outerRadius\"\r\n        [fill]=\"color(arc)\"\r\n        [value]=\"arc.data.value\"\r\n        [gradient]=\"gradient\"\r\n        [data]=\"arc.data\"\r\n        [max]=\"max\"\r\n        [explodeSlices]=\"explodeSlices\"\r\n        [isActive]=\"isActive(arc.data)\"\r\n        [animate]=\"animations\"\r\n        (select)=\"onClick($event)\"\r\n        (activate)=\"activate.emit($event)\"\r\n        (deactivate)=\"deactivate.emit($event)\"\r\n        (dblclick)=\"dblclick.emit($event)\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'top'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipContext]=\"arc.data\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieSeriesComponent implements OnChanges {\r\n  @Input() colors;\r\n  @Input() series: any = [];\r\n  @Input() dims;\r\n  @Input() innerRadius = 60;\r\n  @Input() outerRadius = 80;\r\n  @Input() explodeSlices;\r\n  @Input() showLabels;\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[];\r\n  @Input() labelFormatting: any;\r\n  @Input() trimLabels: boolean = true;\r\n  @Input() maxLabelLength: number = 10;\r\n  @Input() tooltipText: (o: any) => any;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n  @Output() dblclick = new EventEmitter();\r\n\r\n  max: number;\r\n  data: any;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    const pieGenerator = pie<any, any>()\r\n      .value(d => d.value)\r\n      .sort(null);\r\n\r\n    const arcData = pieGenerator(this.series);\r\n\r\n    this.max = max(arcData, d => {\r\n      return d.value;\r\n    });\r\n\r\n    this.data = this.calculateLabelPositions(arcData);\r\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\r\n  }\r\n\r\n  midAngle(d): number {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n\r\n  outerArc(): any {\r\n    const factor = 1.5;\r\n\r\n    return arc()\r\n      .innerRadius(this.outerRadius * factor)\r\n      .outerRadius(this.outerRadius * factor);\r\n  }\r\n\r\n  calculateLabelPositions(pieData): any {\r\n    const factor = 1.5;\r\n    const minDistance = 10;\r\n    const labelPositions = pieData;\r\n\r\n    labelPositions.forEach(d => {\r\n      d.pos = this.outerArc().centroid(d);\r\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\r\n    });\r\n\r\n    for (let i = 0; i < labelPositions.length - 1; i++) {\r\n      const a = labelPositions[i];\r\n      if (!this.labelVisible(a)) {\r\n        continue;\r\n      }\r\n\r\n      for (let j = i + 1; j < labelPositions.length; j++) {\r\n        const b = labelPositions[j];\r\n        if (!this.labelVisible(b)) {\r\n          continue;\r\n        }\r\n        // if they're on the same side\r\n        if (b.pos[0] * a.pos[0] > 0) {\r\n          // if they're overlapping\r\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\r\n          if (o > 0) {\r\n            // push the second up or down\r\n            b.pos[1] += Math.sign(b.pos[0]) * o;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return labelPositions;\r\n  }\r\n\r\n  labelVisible(myArc): boolean {\r\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\r\n  }\r\n\r\n  getTooltipTitle(a) {\r\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\r\n  }\r\n\r\n  labelText(myArc): string {\r\n    if (this.labelFormatting) {\r\n      return this.labelFormatting(myArc.data.name);\r\n    }\r\n    return this.label(myArc);\r\n  }\r\n\r\n  label(myArc): string {\r\n    return formatLabel(myArc.data.name);\r\n  }\r\n\r\n  defaultTooltipText(myArc): string {\r\n    const label = this.label(myArc);\r\n    const val = formatLabel(myArc.data.value);\r\n\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${val}</span>\r\n    `;\r\n  }\r\n\r\n  color(myArc): any {\r\n    return this.colors.getColor(this.label(myArc));\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.data.name;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name && entry.series === d.series;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { AdvancedPieChartComponent } from './advanced-pie-chart.component';\r\nimport { PieLabelComponent } from './pie-label.component';\r\nimport { PieArcComponent } from './pie-arc.component';\r\nimport { PieChartComponent } from './pie-chart.component';\r\nimport { PieGridComponent } from './pie-grid.component';\r\nimport { PieGridSeriesComponent } from './pie-grid-series.component';\r\nimport { PieSeriesComponent } from './pie-series.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [\r\n    AdvancedPieChartComponent,\r\n    PieLabelComponent,\r\n    PieArcComponent,\r\n    PieChartComponent,\r\n    PieGridComponent,\r\n    PieGridSeriesComponent,\r\n    PieSeriesComponent\r\n  ],\r\n  exports: [\r\n    AdvancedPieChartComponent,\r\n    PieLabelComponent,\r\n    PieArcComponent,\r\n    PieChartComponent,\r\n    PieGridComponent,\r\n    PieGridSeriesComponent,\r\n    PieSeriesComponent\r\n  ]\r\n})\r\nexport class PieChartModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { PolarChartComponent } from './polar-chart.component';\r\nimport { PolarSeriesComponent } from './polar-series.component';\r\nimport { PieChartModule } from '../pie-chart/';\r\nimport { LineChartModule } from '../line-chart/';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule, PieChartModule, LineChartModule],\r\n  declarations: [PolarChartComponent, PolarSeriesComponent],\r\n  exports: [PolarChartComponent, PolarSeriesComponent]\r\n})\r\nexport class PolarChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ViewChild,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  NgZone,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport { roundedRect } from '../common/shape.helper';\r\nimport { count, decimalChecker } from '../common/count';\r\nimport { escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-card]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\r\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\r\n      <svg:path\r\n        *ngIf=\"bandColor && bandColor !== color\"\r\n        class=\"card-band\"\r\n        [attr.fill]=\"bandColor\"\r\n        [attr.transform]=\"transformBand\"\r\n        stroke=\"none\"\r\n        [attr.d]=\"bandPath\"\r\n      />\r\n      <title>{{ label }}</title>\r\n      <svg:foreignObject\r\n        class=\"trimmed-label\"\r\n        x=\"5\"\r\n        [attr.x]=\"textPadding[3]\"\r\n        [attr.y]=\"cardHeight - textPadding[2]\"\r\n        [attr.width]=\"textWidth\"\r\n        [attr.height]=\"labelFontSize + textPadding[2]\"\r\n        alignment-baseline=\"hanging\"\r\n      >\r\n        <xhtml:p\r\n          [style.color]=\"textColor\"\r\n          [style.fontSize.px]=\"labelFontSize\"\r\n          [style.lineHeight.px]=\"labelFontSize\"\r\n          [innerHTML]=\"formattedLabel\"\r\n        >\r\n        </xhtml:p>\r\n      </svg:foreignObject>\r\n      <svg:text\r\n        #textEl\r\n        class=\"value-text\"\r\n        [attr.x]=\"textPadding[3]\"\r\n        [attr.y]=\"textPadding[0]\"\r\n        [style.fill]=\"textColor\"\r\n        text-anchor=\"start\"\r\n        alignment-baseline=\"hanging\"\r\n        [style.font-size.pt]=\"textFontSize\"\r\n      >\r\n        {{ value }}\r\n      </svg:text>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CardComponent implements OnChanges, OnDestroy {\r\n  @Input() color;\r\n  @Input() bandColor;\r\n  @Input() textColor;\r\n\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() label;\r\n  @Input() data;\r\n  @Input() medianSize: number;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  @ViewChild('textEl', { static: false }) textEl: ElementRef;\r\n\r\n  element: HTMLElement;\r\n  value: string = '';\r\n  transform: string;\r\n  formattedLabel: string;\r\n  cardWidth: number;\r\n  cardHeight: number;\r\n  textWidth: number;\r\n  textFontSize: number = 12;\r\n  textTransform: string = '';\r\n  initialized: boolean = false;\r\n  animationReq: any;\r\n\r\n  bandHeight: number = 10;\r\n  transformBand: string;\r\n  textPadding = [10, 20, 5, 20];\r\n  labelFontSize = 15;\r\n\r\n  bandPath: string;\r\n\r\n  constructor(element: ElementRef, private cd: ChangeDetectorRef, private zone: NgZone) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    cancelAnimationFrame(this.animationReq);\r\n  }\r\n\r\n  update(): void {\r\n    this.zone.run(() => {\r\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\r\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\r\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\r\n\r\n      this.transform = `translate(${this.x} , ${this.y})`;\r\n\r\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\r\n      this.cardWidth = Math.max(0, this.width);\r\n      this.cardHeight = Math.max(0, this.height);\r\n\r\n      this.label = this.label ? this.label : this.data.name;\r\n\r\n      const cardData = {\r\n        label: this.label,\r\n        data: this.data,\r\n        value: this.data.value\r\n      };\r\n\r\n      this.formattedLabel = labelFormatting(cardData);\r\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\r\n\r\n      const value = hasValue ? valueFormatting(cardData) : '';\r\n\r\n      this.value = this.paddedValue(value);\r\n      this.setPadding();\r\n\r\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\r\n\r\n      setTimeout(() => {\r\n        this.scaleText();\r\n        this.value = value;\r\n        if (hasValue && !this.initialized) {\r\n          setTimeout(() => this.startCount(), 20);\r\n        }\r\n      }, 8);\r\n    });\r\n  }\r\n\r\n  paddedValue(value: string) {\r\n    if (this.medianSize && this.medianSize > value.length) {\r\n      value += '\\u2007'.repeat(this.medianSize - value.length);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  startCount(): void {\r\n    if (!this.initialized && this.animations) {\r\n      cancelAnimationFrame(this.animationReq);\r\n\r\n      const val = this.data.value;\r\n      const decs = decimalChecker(val);\r\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\r\n\r\n      const callback = ({ value, finished }) => {\r\n        this.zone.run(() => {\r\n          value = finished ? val : value;\r\n          this.value = valueFormatting({ label: this.label, data: this.data, value });\r\n          if (!finished) {\r\n            this.value = this.paddedValue(this.value);\r\n          }\r\n          this.cd.markForCheck();\r\n        });\r\n      };\r\n\r\n      this.animationReq = count(0, val, decs, 1, callback);\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  scaleText(): void {\r\n    this.zone.run(() => {\r\n      const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\r\n      if (width === 0 || height === 0) {\r\n        return;\r\n      }\r\n\r\n      const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\r\n      const availableWidth = this.cardWidth - 2 * textPadding;\r\n      const availableHeight = this.cardHeight / 3;\r\n\r\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\r\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\r\n      this.labelFontSize = Math.min(this.textFontSize, 15);\r\n\r\n      this.setPadding();\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  setPadding() {\r\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\r\n    const padding = this.cardHeight / 2;\r\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\r\n    this.textPadding[2] = padding - this.labelFontSize;\r\n  }\r\n\r\n  onClick(): void {\r\n    this.select.emit(this.data);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { invertColor } from '../utils/color-utils';\r\n\r\nexport interface CardModel {\r\n  x;\r\n  y;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n  label: string;\r\n  data;\r\n  tooltipText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-card-series]',\r\n  template: `\r\n    <svg:rect\r\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\r\n      class=\"card-empty\"\r\n      [attr.x]=\"c.x\"\r\n      [attr.y]=\"c.y\"\r\n      [style.fill]=\"emptyColor\"\r\n      [attr.width]=\"c.width\"\r\n      [attr.height]=\"c.height\"\r\n      rx=\"3\"\r\n      ry=\"3\"\r\n    />\r\n    <svg:g\r\n      ngx-charts-card\r\n      *ngFor=\"let c of cards; trackBy: trackBy\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [color]=\"c.color\"\r\n      [bandColor]=\"c.bandColor\"\r\n      [textColor]=\"c.textColor\"\r\n      [data]=\"c.data\"\r\n      [label]=\"c.label\"\r\n      [medianSize]=\"medianSize\"\r\n      [valueFormatting]=\"valueFormatting\"\r\n      [labelFormatting]=\"labelFormatting\"\r\n      [animations]=\"animations\"\r\n      (select)=\"onClick($event)\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CardSeriesComponent implements OnChanges {\r\n  @Input() data: any[];\r\n  @Input() slots: any[];\r\n  @Input() dims;\r\n  @Input() colors;\r\n  @Input() innerPadding = 15;\r\n\r\n  @Input() cardColor;\r\n  @Input() bandColor;\r\n  @Input() emptyColor = 'rgba(0, 0, 0, 0)';\r\n  @Input() textColor;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  cards: CardModel[];\r\n  emptySlots: any[];\r\n  medianSize: number;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    if (this.data.length > 2) {\r\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\r\n\r\n      const sortedLengths = this.data\r\n        .map(d => {\r\n          const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\r\n          return hasValue\r\n            ? valueFormatting({\r\n                data: d.data,\r\n                label: d ? d.data.name : '',\r\n                value: d && d.data ? d.data.value : ''\r\n              }).length\r\n            : 0;\r\n        })\r\n        .sort((a, b) => b - a);\r\n      const idx = Math.ceil(this.data.length / 2);\r\n      this.medianSize = sortedLengths[idx];\r\n    }\r\n\r\n    const cards = this.getCards();\r\n    this.cards = cards.filter(d => d.data.value !== null);\r\n    this.emptySlots = cards.filter(d => d.data.value === null);\r\n  }\r\n\r\n  getCards(): any[] {\r\n    const yPadding =\r\n      typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\r\n    const xPadding =\r\n      typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\r\n\r\n    return this.data.map((d, index) => {\r\n      let label = d.data.name;\r\n      if (label && label.constructor.name === 'Date') {\r\n        label = label.toLocaleDateString();\r\n      } else {\r\n        label = label ? label.toLocaleString() : label;\r\n      }\r\n\r\n      const value = d.data.value;\r\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\r\n      const color = this.cardColor || valueColor || '#000';\r\n      return {\r\n        x: d.x,\r\n        y: d.y,\r\n        width: d.width - xPadding,\r\n        height: d.height - yPadding,\r\n        color,\r\n        bandColor: this.bandColor || valueColor,\r\n        textColor: this.textColor || invertColor(color),\r\n        label,\r\n        data: d.data,\r\n        tooltipText: `${label}: ${value}`\r\n      };\r\n    });\r\n  }\r\n\r\n  trackBy(index, card): string {\r\n    return card.label;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { gridLayout, gridSize } from '../common/grid-layout.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-number-card',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\r\n        <svg:g\r\n          ngx-charts-card-series\r\n          [colors]=\"colors\"\r\n          [cardColor]=\"cardColor\"\r\n          [bandColor]=\"bandColor\"\r\n          [textColor]=\"textColor\"\r\n          [emptyColor]=\"emptyColor\"\r\n          [data]=\"data\"\r\n          [dims]=\"dims\"\r\n          [innerPadding]=\"innerPadding\"\r\n          [valueFormatting]=\"valueFormatting\"\r\n          [labelFormatting]=\"labelFormatting\"\r\n          [animations]=\"animations\"\r\n          (select)=\"onClick($event)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './card.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NumberCardComponent extends BaseChartComponent {\r\n  @Input() cardColor: string;\r\n  @Input() bandColor: string;\r\n  @Input() emptyColor: string = 'rgba(0, 0, 0, 0)';\r\n  @Input() innerPadding = 15;\r\n  @Input() textColor: string;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() designatedTotal: number;\r\n\r\n  dims: ViewDimensions;\r\n  data: any[];\r\n  slots: any[];\r\n  colors: ColorHelper;\r\n  transform: string;\r\n  domain: any[];\r\n  margin = [10, 10, 10, 10];\r\n\r\n  backgroundCards: any[];\r\n\r\n  get clickable() {\r\n    return !!this.select.observers.length;\r\n  }\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    this.setColors();\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n\r\n    const size = gridSize(this.dims, this.results.length, 150);\r\n    const N = size[0] * size[1];\r\n\r\n    const data = this.results.slice();\r\n\r\n    while (data.length < N) {\r\n      data.push({ value: null });\r\n    }\r\n\r\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { CardComponent } from './card.component';\r\nimport { CardSeriesComponent } from './card-series.component';\r\nimport { NumberCardComponent } from './number-card.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\r\n  exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\r\n})\r\nexport class NumberCardModule {}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { select } from 'd3-selection';\r\n\r\nimport { invertColor } from '../utils/color-utils';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport { escapeLabel } from '../common/label.helper';\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-tree-map-cell]',\r\n  template: `\r\n    <svg:g>\r\n      <defs *ngIf=\"gradient\">\r\n        <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n      </defs>\r\n      <svg:rect\r\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        [attr.x]=\"x\"\r\n        [attr.y]=\"y\"\r\n        [style.cursor]=\"'pointer'\"\r\n        class=\"cell\"\r\n        (click)=\"onClick()\"\r\n      />\r\n      <svg:foreignObject\r\n        *ngIf=\"width >= 70 && height >= 35\"\r\n        [attr.x]=\"x\"\r\n        [attr.y]=\"y\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        class=\"treemap-label\"\r\n        [style.pointer-events]=\"'none'\"\r\n      >\r\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\r\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\r\n          <xhtml:br />\r\n          <xhtml:span\r\n            *ngIf=\"animations\"\r\n            class=\"treemap-val\"\r\n            ngx-charts-count-up\r\n            [countTo]=\"value\"\r\n            [valueFormatting]=\"valueFormatting\"\r\n          >\r\n          </xhtml:span>\r\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\r\n            {{ formattedValue }}\r\n          </xhtml:span>\r\n        </xhtml:p>\r\n      </svg:foreignObject>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TreeMapCellComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() fill;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() label;\r\n  @Input() value;\r\n  @Input() valueType;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() gradient: boolean = false;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  gradientStops: any[];\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n\r\n  element: HTMLElement;\r\n  transform: string;\r\n  formattedLabel: string;\r\n  formattedValue: string;\r\n  initialized: boolean = false;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.update();\r\n\r\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\r\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\r\n\r\n    const cellData = {\r\n      data: this.data,\r\n      label: this.label,\r\n      value: this.value\r\n    };\r\n\r\n    this.formattedValue = this.valueFormatting(cellData.value);\r\n    this.formattedLabel = labelFormatting(cellData);\r\n\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientUrl = `url(#${this.gradientId})`;\r\n    this.gradientStops = this.getGradientStops();\r\n  }\r\n\r\n  update(): void {\r\n    if (this.initialized) {\r\n      this.animateToCurrentForm();\r\n    } else {\r\n      if (this.animations) {\r\n        this.loadAnimation();\r\n      }\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    const node = select(this.element).select('.cell');\r\n\r\n    node\r\n      .attr('opacity', 0)\r\n      .attr('x', this.x)\r\n      .attr('y', this.y);\r\n\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  getTextColor(): string {\r\n    return invertColor(this.fill);\r\n  }\r\n\r\n  animateToCurrentForm(): void {\r\n    const node = select(this.element).select('.cell');\r\n\r\n    if (this.animations) {\r\n      node\r\n        .transition()\r\n        .duration(750)\r\n        .attr('opacity', 1)\r\n        .attr('x', this.x)\r\n        .attr('y', this.y)\r\n        .attr('width', this.width)\r\n        .attr('height', this.height);\r\n    } else {\r\n      node\r\n        .attr('opacity', 1)\r\n        .attr('x', this.x)\r\n        .attr('y', this.y)\r\n        .attr('width', this.width)\r\n        .attr('height', this.height);\r\n    }\r\n  }\r\n\r\n  onClick(): void {\r\n    this.select.emit(this.data);\r\n  }\r\n\r\n  getGradientStops() {\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: 0.3\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-tree-map-cell-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-tree-map-cell\r\n      *ngFor=\"let c of cells; trackBy: trackBy\"\r\n      [data]=\"c.data\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [fill]=\"c.fill\"\r\n      [label]=\"c.label\"\r\n      [value]=\"c.value\"\r\n      [valueType]=\"c.valueType\"\r\n      [valueFormatting]=\"valueFormatting\"\r\n      [labelFormatting]=\"labelFormatting\"\r\n      [gradient]=\"gradient\"\r\n      [animations]=\"animations\"\r\n      (select)=\"onClick($event)\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"c.data\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TreeMapCellSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() dims;\r\n  @Input() colors;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() gradient: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  cells: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.cells = this.getCells();\r\n  }\r\n\r\n  getCells(): any[] {\r\n    return this.data.children\r\n      .filter(d => {\r\n        return d.depth === 1;\r\n      })\r\n      .map((d, index) => {\r\n        const label = d.id;\r\n\r\n        return {\r\n          data: d.data,\r\n          x: d.x0,\r\n          y: d.y0,\r\n          width: d.x1 - d.x0,\r\n          height: d.y1 - d.y0,\r\n          fill: this.colors.getColor(label),\r\n          label,\r\n          value: d.value,\r\n          valueType: d.valueType\r\n        };\r\n      });\r\n  }\r\n\r\n  getTooltipText({ label, value }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\r\n    `;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.label;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { treemap, stratify } from 'd3-hierarchy';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-tree-map',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\r\n        <svg:g\r\n          ngx-charts-tree-map-cell-series\r\n          [colors]=\"colors\"\r\n          [data]=\"data\"\r\n          [dims]=\"dims\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [valueFormatting]=\"valueFormatting\"\r\n          [labelFormatting]=\"labelFormatting\"\r\n          [gradient]=\"gradient\"\r\n          [animations]=\"animations\"\r\n          (select)=\"onClick($event)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['./tree-map.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TreeMapComponent extends BaseChartComponent {\r\n  @Input() results;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() gradient: boolean = false;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: any;\r\n  domain: any;\r\n  transform: any;\r\n  colors: ColorHelper;\r\n  treemap: any;\r\n  data: any;\r\n  margin = [10, 10, 10, 10];\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    this.treemap = treemap<any>().size([this.dims.width, this.dims.height]);\r\n\r\n    const rootNode = {\r\n      name: 'root',\r\n      value: 0,\r\n      isRoot: true\r\n    };\r\n\r\n    const root = stratify<any>()\r\n      .id(d => {\r\n        let label = d.name;\r\n\r\n        if (label.constructor.name === 'Date') {\r\n          label = label.toLocaleDateString();\r\n        } else {\r\n          label = label.toLocaleString();\r\n        }\r\n        return label;\r\n      })\r\n      .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\r\n      .sum(d => d.value);\r\n\r\n    this.data = this.treemap(root);\r\n\r\n    this.setColors();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { TreeMapCellComponent } from './tree-map-cell.component';\r\nimport { TreeMapCellSeriesComponent } from './tree-map-cell-series.component';\r\nimport { TreeMapComponent } from './tree-map.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\r\n  exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\r\n})\r\nexport class TreeMapModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ElementRef,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-linear-gauge',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\r\n      <svg:g class=\"linear-gauge chart\">\r\n        <svg:g\r\n          ngx-charts-bar\r\n          class=\"background-bar\"\r\n          [width]=\"dims.width\"\r\n          [height]=\"3\"\r\n          [x]=\"margin[3]\"\r\n          [y]=\"dims.height / 2 + margin[0] - 2\"\r\n          [data]=\"{}\"\r\n          [orientation]=\"'horizontal'\"\r\n          [roundEdges]=\"true\"\r\n          [animations]=\"animations\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-bar\r\n          [width]=\"valueScale(value)\"\r\n          [height]=\"3\"\r\n          [x]=\"margin[3]\"\r\n          [y]=\"dims.height / 2 + margin[0] - 2\"\r\n          [fill]=\"colors.getColor(units)\"\r\n          [data]=\"{}\"\r\n          [orientation]=\"'horizontal'\"\r\n          [roundEdges]=\"true\"\r\n          [animations]=\"animations\"\r\n        ></svg:g>\r\n\r\n        <svg:line\r\n          *ngIf=\"hasPreviousValue\"\r\n          [attr.transform]=\"transformLine\"\r\n          x1=\"0\"\r\n          y1=\"5\"\r\n          x2=\"0\"\r\n          y2=\"15\"\r\n          [attr.stroke]=\"colors.getColor(units)\"\r\n        />\r\n\r\n        <svg:line\r\n          *ngIf=\"hasPreviousValue\"\r\n          [attr.transform]=\"transformLine\"\r\n          x1=\"0\"\r\n          y1=\"-5\"\r\n          x2=\"0\"\r\n          y2=\"-15\"\r\n          [attr.stroke]=\"colors.getColor(units)\"\r\n        />\r\n\r\n        <svg:g [attr.transform]=\"transform\">\r\n          <svg:g [attr.transform]=\"valueTranslate\">\r\n            <svg:text\r\n              #valueTextEl\r\n              class=\"value\"\r\n              [style.textAnchor]=\"'middle'\"\r\n              [attr.transform]=\"valueTextTransform\"\r\n              alignment-baseline=\"after-edge\"\r\n            >\r\n              {{ displayValue }}\r\n            </svg:text>\r\n          </svg:g>\r\n\r\n          <svg:g [attr.transform]=\"unitsTranslate\">\r\n            <svg:text\r\n              #unitsTextEl\r\n              class=\"units\"\r\n              [style.textAnchor]=\"'middle'\"\r\n              [attr.transform]=\"unitsTextTransform\"\r\n              alignment-baseline=\"before-edge\"\r\n            >\r\n              {{ units }}\r\n            </svg:text>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './linear-gauge.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LinearGaugeComponent extends BaseChartComponent implements AfterViewInit {\r\n  @Input() min: number = 0;\r\n  @Input() max: number = 100;\r\n  @Input() value: number = 0;\r\n  @Input() units: string;\r\n  @Input() previousValue;\r\n  @Input() valueFormatting: any;\r\n\r\n  @ViewChild('valueTextEl') valueTextEl: ElementRef;\r\n  @ViewChild('unitsTextEl') unitsTextEl: ElementRef;\r\n\r\n  dims: ViewDimensions;\r\n  valueDomain: any;\r\n  valueScale: any;\r\n\r\n  colors: ColorHelper;\r\n  transform: string;\r\n  margin: any[] = [10, 20, 10, 20];\r\n  transformLine: string;\r\n\r\n  valueResizeScale: number = 1;\r\n  unitsResizeScale: number = 1;\r\n  valueTextTransform: string = '';\r\n  valueTranslate: string = '';\r\n  unitsTextTransform: string = '';\r\n  unitsTranslate: string = '';\r\n  displayValue: string;\r\n  hasPreviousValue: boolean;\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    setTimeout(() => {\r\n      this.scaleText('value');\r\n      this.scaleText('units');\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.hasPreviousValue = this.previousValue !== undefined;\r\n    this.max = Math.max(this.max, this.value);\r\n    this.min = Math.min(this.min, this.value);\r\n    if (this.hasPreviousValue) {\r\n      this.max = Math.max(this.max, this.previousValue);\r\n      this.min = Math.min(this.min, this.previousValue);\r\n    }\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.valueDomain = this.getValueDomain();\r\n    this.valueScale = this.getValueScale();\r\n    this.displayValue = this.getDisplayValue();\r\n\r\n    this.setColors();\r\n\r\n    const xOffset = this.margin[3] + this.dims.width / 2;\r\n    const yOffset = this.margin[0] + this.dims.height / 2;\r\n\r\n    this.transform = `translate(${xOffset}, ${yOffset})`;\r\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\r\n    this.valueTranslate = `translate(0, -15)`;\r\n    this.unitsTranslate = `translate(0, 15)`;\r\n    setTimeout(() => this.scaleText('value'), 50);\r\n    setTimeout(() => this.scaleText('units'), 50);\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    return [this.min, this.max];\r\n  }\r\n\r\n  getValueScale(): any {\r\n    return scaleLinear()\r\n      .range([0, this.dims.width])\r\n      .domain(this.valueDomain);\r\n  }\r\n\r\n  getDisplayValue(): string {\r\n    if (this.valueFormatting) {\r\n      return this.valueFormatting(this.value);\r\n    }\r\n    return this.value.toLocaleString();\r\n  }\r\n\r\n  scaleText(element, repeat: boolean = true): void {\r\n    let el;\r\n    let resizeScale;\r\n    if (element === 'value') {\r\n      el = this.valueTextEl;\r\n      resizeScale = this.valueResizeScale;\r\n    } else {\r\n      el = this.unitsTextEl;\r\n      resizeScale = this.unitsResizeScale;\r\n    }\r\n\r\n    const { width, height } = el.nativeElement.getBoundingClientRect();\r\n    if (width === 0 || height === 0) return;\r\n    const oldScale = resizeScale;\r\n    const availableWidth = this.dims.width;\r\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\r\n    const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\r\n    const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\r\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\r\n\r\n    if (resizeScale !== oldScale) {\r\n      if (element === 'value') {\r\n        this.valueResizeScale = resizeScale;\r\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\r\n      } else {\r\n        this.unitsResizeScale = resizeScale;\r\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\r\n      }\r\n      this.cd.markForCheck();\r\n      if (repeat) {\r\n        setTimeout(() => {\r\n          this.scaleText(element, false);\r\n        }, 50);\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick(): void {\r\n    this.select.emit({\r\n      name: 'Value',\r\n      value: this.value\r\n    });\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', [this.value], this.customColors);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ElementRef,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-gauge',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\r\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\r\n          <svg:g\r\n            ngx-charts-gauge-arc\r\n            [backgroundArc]=\"arc.backgroundArc\"\r\n            [valueArc]=\"arc.valueArc\"\r\n            [cornerRadius]=\"cornerRadius\"\r\n            [colors]=\"colors\"\r\n            [isActive]=\"isActive(arc.valueArc.data)\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [valueFormatting]=\"valueFormatting\"\r\n            [animations]=\"animations\"\r\n            (select)=\"onClick($event)\"\r\n            (activate)=\"onActivate($event)\"\r\n            (deactivate)=\"onDeactivate($event)\"\r\n          ></svg:g>\r\n        </svg:g>\r\n\r\n        <svg:g\r\n          ngx-charts-gauge-axis\r\n          *ngIf=\"showAxis\"\r\n          [bigSegments]=\"bigSegments\"\r\n          [smallSegments]=\"smallSegments\"\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [radius]=\"outerRadius\"\r\n          [angleSpan]=\"angleSpan\"\r\n          [valueScale]=\"valueScale\"\r\n          [startAngle]=\"startAngle\"\r\n          [tickFormatting]=\"axisTickFormatting\"\r\n        ></svg:g>\r\n\r\n        <svg:text\r\n          #textEl\r\n          *ngIf=\"showText\"\r\n          [style.textAnchor]=\"'middle'\"\r\n          [attr.transform]=\"textTransform\"\r\n          alignment-baseline=\"central\"\r\n        >\r\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\r\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\r\n        </svg:text>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './gauge.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GaugeComponent extends BaseChartComponent implements AfterViewInit {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() min: number = 0;\r\n  @Input() max: number = 100;\r\n  @Input() textValue: string;\r\n  @Input() units: string;\r\n  @Input() bigSegments: number = 10;\r\n  @Input() smallSegments: number = 5;\r\n  @Input() results: any[];\r\n  @Input() showAxis: boolean = true;\r\n  @Input() startAngle: number = -120;\r\n  @Input() angleSpan: number = 240;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() axisTickFormatting: any;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() valueFormatting: (value: any) => string;\r\n  @Input() showText: boolean = true;\r\n\r\n  // Specify margins\r\n  @Input() margin: any[];\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('textEl') textEl: ElementRef;\r\n\r\n  dims: ViewDimensions;\r\n  domain: any[];\r\n  valueDomain: any;\r\n  valueScale: any;\r\n\r\n  colors: ColorHelper;\r\n  transform: string;\r\n\r\n  outerRadius: number;\r\n  textRadius: number; // max available radius for the text\r\n  resizeScale: number = 1;\r\n  rotation: string = '';\r\n  textTransform: string = 'scale(1, 1)';\r\n  cornerRadius: number = 10;\r\n  arcs: any[];\r\n  displayValue: string;\r\n  legendOptions: any;\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    setTimeout(() => this.scaleText());\r\n  }\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showAxis) {\r\n      if (!this.margin) {\r\n        this.margin = [10, 20, 10, 20];\r\n      }\r\n    } else {\r\n      if (!this.margin) {\r\n        this.margin = [60, 100, 60, 100];\r\n      }\r\n    }\r\n\r\n    // make the starting angle positive\r\n    if (this.startAngle < 0) {\r\n      this.startAngle = (this.startAngle % 360) + 360;\r\n    }\r\n\r\n    this.angleSpan = Math.min(this.angleSpan, 360);\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showLegend: this.legend,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.domain = this.getDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n    this.valueScale = this.getValueScale();\r\n    this.displayValue = this.getDisplayValue();\r\n\r\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\r\n\r\n    this.arcs = this.getArcs();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    const xOffset = this.margin[3] + this.dims.width / 2;\r\n    const yOffset = this.margin[0] + this.dims.height / 2;\r\n\r\n    this.transform = `translate(${xOffset}, ${yOffset})`;\r\n    this.rotation = `rotate(${this.startAngle})`;\r\n    setTimeout(() => this.scaleText(), 50);\r\n  }\r\n\r\n  getArcs(): any[] {\r\n    const arcs = [];\r\n\r\n    const availableRadius = this.outerRadius * 0.7;\r\n\r\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\r\n    const arcWidth = radiusPerArc * 0.7;\r\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\r\n    this.cornerRadius = Math.floor(arcWidth / 2);\r\n\r\n    let i = 0;\r\n    for (const d of this.results) {\r\n      const outerRadius = this.outerRadius - i * radiusPerArc;\r\n      const innerRadius = outerRadius - arcWidth;\r\n\r\n      const backgroundArc = {\r\n        endAngle: (this.angleSpan * Math.PI) / 180,\r\n        innerRadius,\r\n        outerRadius,\r\n        data: {\r\n          value: this.max,\r\n          name: d.name\r\n        }\r\n      };\r\n\r\n      const valueArc = {\r\n        endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\r\n        innerRadius,\r\n        outerRadius,\r\n        data: {\r\n          value: d.value,\r\n          name: d.name\r\n        }\r\n      };\r\n\r\n      const arc = {\r\n        backgroundArc,\r\n        valueArc\r\n      };\r\n\r\n      arcs.push(arc);\r\n      i++;\r\n    }\r\n\r\n    return arcs;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const values = this.results.map(d => d.value);\r\n    const dataMin = Math.min(...values);\r\n    const dataMax = Math.max(...values);\r\n\r\n    if (this.min !== undefined) {\r\n      this.min = Math.min(this.min, dataMin);\r\n    } else {\r\n      this.min = dataMin;\r\n    }\r\n\r\n    if (this.max !== undefined) {\r\n      this.max = Math.max(this.max, dataMax);\r\n    } else {\r\n      this.max = dataMax;\r\n    }\r\n\r\n    return [this.min, this.max];\r\n  }\r\n\r\n  getValueScale(): any {\r\n    return scaleLinear()\r\n      .range([0, this.angleSpan])\r\n      .nice()\r\n      .domain(this.valueDomain);\r\n  }\r\n\r\n  getDisplayValue(): string {\r\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\r\n\r\n    if (this.textValue && 0 !== this.textValue.length) {\r\n      return this.textValue.toLocaleString();\r\n    }\r\n\r\n    if (this.valueFormatting) {\r\n      return this.valueFormatting(value);\r\n    }\r\n\r\n    return value.toLocaleString();\r\n  }\r\n\r\n  scaleText(repeat: boolean = true): void {\r\n    if (!this.showText) {\r\n      return;\r\n    }\r\n    const { width } = this.textEl.nativeElement.getBoundingClientRect();\r\n    const oldScale = this.resizeScale;\r\n\r\n    if (width === 0) {\r\n      this.resizeScale = 1;\r\n    } else {\r\n      const availableSpace = this.textRadius;\r\n      this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\r\n    }\r\n\r\n    if (this.resizeScale !== oldScale) {\r\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\r\n      this.cd.markForCheck();\r\n      if (repeat) {\r\n        setTimeout(() => this.scaleText(false), 50);\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  getLegendOptions(): any {\r\n    return {\r\n      scaleType: 'ordinal',\r\n      colors: this.colors,\r\n      domain: this.domain,\r\n      title: this.legendTitle,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  onActivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name && entry.series === d.series;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.valueArc.data.name;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-gauge-arc]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-pie-arc\r\n      class=\"background-arc\"\r\n      [startAngle]=\"0\"\r\n      [endAngle]=\"backgroundArc.endAngle\"\r\n      [innerRadius]=\"backgroundArc.innerRadius\"\r\n      [outerRadius]=\"backgroundArc.outerRadius\"\r\n      [cornerRadius]=\"cornerRadius\"\r\n      [data]=\"backgroundArc.data\"\r\n      [animate]=\"false\"\r\n      [pointerEvents]=\"false\"\r\n    ></svg:g>\r\n    <svg:g\r\n      ngx-charts-pie-arc\r\n      [startAngle]=\"0\"\r\n      [endAngle]=\"valueArc.endAngle\"\r\n      [innerRadius]=\"valueArc.innerRadius\"\r\n      [outerRadius]=\"valueArc.outerRadius\"\r\n      [cornerRadius]=\"cornerRadius\"\r\n      [fill]=\"colors.getColor(valueArc.data.name)\"\r\n      [data]=\"valueArc.data\"\r\n      [animate]=\"animations\"\r\n      [isActive]=\"isActive\"\r\n      (select)=\"select.emit($event)\"\r\n      (activate)=\"activate.emit($event)\"\r\n      (deactivate)=\"deactivate.emit($event)\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"valueArc.data\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GaugeArcComponent {\r\n  @Input() backgroundArc: any;\r\n  @Input() valueArc: any;\r\n  @Input() cornerRadius: any;\r\n  @Input() colors: ColorHelper;\r\n  @Input() isActive: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() valueFormatting: (value: any) => string;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  tooltipText(arc): string {\r\n    const label = formatLabel(arc.data.name);\r\n    let val;\r\n\r\n    if (this.valueFormatting) {\r\n      val = this.valueFormatting(arc.data.value);\r\n    } else {\r\n      val = formatLabel(arc.data.value);\r\n    }\r\n\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${val}</span>\r\n    `;\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { line } from 'd3-shape';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-gauge-axis]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"rotate\">\r\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\r\n        <svg:path [attr.d]=\"tick.line\" />\r\n      </svg:g>\r\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\r\n        <svg:text\r\n          [style.textAnchor]=\"tick.textAnchor\"\r\n          [attr.transform]=\"tick.textTransform\"\r\n          alignment-baseline=\"central\"\r\n        >\r\n          {{ tick.text }}\r\n        </svg:text>\r\n      </svg:g>\r\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\r\n        <svg:path [attr.d]=\"tick.line\" />\r\n      </svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GaugeAxisComponent implements OnChanges {\r\n  @Input() bigSegments: any;\r\n  @Input() smallSegments: any;\r\n  @Input() min: any;\r\n  @Input() max: any;\r\n  @Input() angleSpan: number;\r\n  @Input() startAngle: number;\r\n  @Input() radius: any;\r\n  @Input() valueScale: any;\r\n  @Input() tickFormatting: any;\r\n\r\n  ticks: any;\r\n  rotationAngle: number;\r\n  rotate: string = '';\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.rotationAngle = -90 + this.startAngle;\r\n    this.rotate = `rotate(${this.rotationAngle})`;\r\n    this.ticks = this.getTicks();\r\n  }\r\n\r\n  getTicks(): any {\r\n    const bigTickSegment = this.angleSpan / this.bigSegments;\r\n    const smallTickSegment = bigTickSegment / this.smallSegments;\r\n    const tickLength = 20;\r\n    const ticks = {\r\n      big: [],\r\n      small: []\r\n    };\r\n\r\n    const startDistance = this.radius + 10;\r\n    const textDist = startDistance + tickLength + 10;\r\n\r\n    for (let i = 0; i <= this.bigSegments; i++) {\r\n      const angleDeg = i * bigTickSegment;\r\n      const angle = (angleDeg * Math.PI) / 180;\r\n\r\n      const textAnchor = this.getTextAnchor(angleDeg);\r\n\r\n      let skip = false;\r\n      if (i === 0 && this.angleSpan === 360) {\r\n        skip = true;\r\n      }\r\n\r\n      if (!skip) {\r\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\r\n        if (this.tickFormatting) {\r\n          text = this.tickFormatting(text);\r\n        }\r\n        ticks.big.push({\r\n          line: this.getTickPath(startDistance, tickLength, angle),\r\n          textAnchor,\r\n          text,\r\n          textTransform: `\r\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\r\n          `\r\n        });\r\n      }\r\n\r\n      if (i === this.bigSegments) {\r\n        continue;\r\n      }\r\n\r\n      for (let j = 1; j <= this.smallSegments; j++) {\r\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\r\n        const smallAngle = (smallAngleDeg * Math.PI) / 180;\r\n\r\n        ticks.small.push({\r\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\r\n        });\r\n      }\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  getTextAnchor(angle) {\r\n    // [0, 45] = 'middle';\r\n    // [46, 135] = 'start';\r\n    // [136, 225] = 'middle';\r\n    // [226, 315] = 'end';\r\n\r\n    angle = (this.startAngle + angle) % 360;\r\n    let textAnchor = 'middle';\r\n    if (angle > 45 && angle <= 135) {\r\n      textAnchor = 'start';\r\n    } else if (angle > 225 && angle <= 315) {\r\n      textAnchor = 'end';\r\n    }\r\n    return textAnchor;\r\n  }\r\n\r\n  getTickPath(startDistance, tickLength, angle): any {\r\n    const y1 = startDistance * Math.sin(angle);\r\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\r\n    const x1 = startDistance * Math.cos(angle);\r\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\r\n\r\n    const points = [\r\n      { x: x1, y: y1 },\r\n      { x: x2, y: y2 }\r\n    ];\r\n    const lineGenerator = line<any>()\r\n      .x(d => d.x)\r\n      .y(d => d.y);\r\n    return lineGenerator(points);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { LinearGaugeComponent } from './linear-gauge.component';\r\nimport { GaugeComponent } from './gauge.component';\r\nimport { GaugeArcComponent } from './gauge-arc.component';\r\nimport { GaugeAxisComponent } from './gauge-axis.component';\r\nimport { PieChartModule } from '../pie-chart/pie-chart.module';\r\nimport { BarChartModule } from '../bar-chart/bar-chart.module';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule, PieChartModule, BarChartModule],\r\n  declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\r\n  exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\r\n})\r\nexport class GaugeModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from './common/chart-common.module';\r\nimport { AreaChartModule } from './area-chart/area-chart.module';\r\nimport { BarChartModule } from './bar-chart/bar-chart.module';\r\nimport { BubbleChartModule } from './bubble-chart/bubble-chart.module';\r\nimport { HeatMapModule } from './heat-map/heat-map.module';\r\nimport { LineChartModule } from './line-chart/line-chart.module';\r\nimport { PolarChartModule } from './polar-chart/polar-chart.module';\r\nimport { NumberCardModule } from './number-card/number-card.module';\r\nimport { PieChartModule } from './pie-chart/pie-chart.module';\r\nimport { TreeMapModule } from './tree-map/tree-map.module';\r\nimport { GaugeModule } from './gauge/gauge.module';\r\nimport { ngxChartsPolyfills } from './polyfills';\r\n\r\n@NgModule({\r\n  exports: [\r\n    ChartCommonModule,\r\n    AreaChartModule,\r\n    BarChartModule,\r\n    BubbleChartModule,\r\n    HeatMapModule,\r\n    LineChartModule,\r\n    PolarChartModule,\r\n    NumberCardModule,\r\n    PieChartModule,\r\n    TreeMapModule,\r\n    GaugeModule\r\n  ]\r\n})\r\nexport class NgxChartsModule {\r\n  constructor() {\r\n    ngxChartsPolyfills();\r\n  }\r\n}\r\n","// The export is needed here to generate a valid polyfills.metadata.json file\r\nexport function ngxChartsPolyfills() {\r\n  // IE11 fix\r\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\r\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\r\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\r\n  }\r\n}\r\n","import { timeFormat } from 'd3-time-format';\r\n\r\nexport function tickFormat(fieldType, groupByType): (label: string) => string {\r\n  return function(label: string): string {\r\n    if (label === 'No Value' || label === 'Other') {\r\n      return label;\r\n    }\r\n    if (fieldType === 'date' && groupByType === 'groupBy') {\r\n      const formatter = timeFormat('MM/DD/YYYY');\r\n      return formatter(<any>label);\r\n    }\r\n\r\n    return label.toString();\r\n  };\r\n}\r\n"]}