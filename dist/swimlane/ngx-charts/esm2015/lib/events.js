// If we don't check whether 'window' and 'global' variables are defined,
// code will fail in browser/node with 'variable is undefined' error.
let root;
if (typeof window !== 'undefined') {
    root = window;
}
else if (typeof global !== 'undefined') {
    root = global;
}
// tslint:disable-next-line:variable-name
export const MouseEvent = root.MouseEvent;
export function createMouseEvent(name, bubbles = false, cancelable = true) {
    // Calling new of an event does not work correctly on IE. The following is a tested workaround
    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11
    if (typeof MouseEvent === 'function') {
        // Sane browsers
        return new MouseEvent(name, { bubbles, cancelable });
    }
    else {
        // IE
        const event = document.createEvent('MouseEvent');
        event.initEvent(name, bubbles, cancelable);
        return event;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHN3aW1sYW5lL25neC1jaGFydHMvIiwic291cmNlcyI6WyJsaWIvZXZlbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLHlFQUF5RTtBQUN6RSxxRUFBcUU7QUFDckUsSUFBSSxJQUFTLENBQUM7QUFDZCxJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsRUFBRTtJQUNqQyxJQUFJLEdBQUcsTUFBTSxDQUFDO0NBQ2Y7S0FBTSxJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsRUFBRTtJQUN4QyxJQUFJLEdBQUcsTUFBTSxDQUFDO0NBQ2Y7QUFFRCx5Q0FBeUM7QUFDekMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxVQUc5QixDQUFDO0FBRUYsTUFBTSxVQUFVLGdCQUFnQixDQUFDLElBQVksRUFBRSxVQUFtQixLQUFLLEVBQUUsYUFBc0IsSUFBSTtJQUNqRyw4RkFBOEY7SUFDOUYscUZBQXFGO0lBQ3JGLElBQUksT0FBTyxVQUFVLEtBQUssVUFBVSxFQUFFO1FBQ3BDLGdCQUFnQjtRQUNoQixPQUFPLElBQUksVUFBVSxDQUFDLElBQUksRUFBRSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0tBQ3REO1NBQU07UUFDTCxLQUFLO1FBQ0wsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNqRCxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDM0MsT0FBTyxLQUFLLENBQUM7S0FDZDtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWNsYXJlIGxldCBnbG9iYWw6IGFueTtcclxuXHJcbi8vIElmIHdlIGRvbid0IGNoZWNrIHdoZXRoZXIgJ3dpbmRvdycgYW5kICdnbG9iYWwnIHZhcmlhYmxlcyBhcmUgZGVmaW5lZCxcclxuLy8gY29kZSB3aWxsIGZhaWwgaW4gYnJvd3Nlci9ub2RlIHdpdGggJ3ZhcmlhYmxlIGlzIHVuZGVmaW5lZCcgZXJyb3IuXHJcbmxldCByb290OiBhbnk7XHJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gIHJvb3QgPSB3aW5kb3c7XHJcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICByb290ID0gZ2xvYmFsO1xyXG59XHJcblxyXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxyXG5leHBvcnQgY29uc3QgTW91c2VFdmVudCA9IHJvb3QuTW91c2VFdmVudCBhcyBNb3VzZUV2ZW50ICYge1xyXG4gIHByb3RvdHlwZT86IE1vdXNlRXZlbnQ7XHJcbiAgbmV3ICh0eXBlQXJnOiBzdHJpbmcsIGV2ZW50SW5pdERpY3Q/OiBNb3VzZUV2ZW50SW5pdCk6IE1vdXNlRXZlbnQ7XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTW91c2VFdmVudChuYW1lOiBzdHJpbmcsIGJ1YmJsZXM6IGJvb2xlYW4gPSBmYWxzZSwgY2FuY2VsYWJsZTogYm9vbGVhbiA9IHRydWUpOiBNb3VzZUV2ZW50IHtcclxuICAvLyBDYWxsaW5nIG5ldyBvZiBhbiBldmVudCBkb2VzIG5vdCB3b3JrIGNvcnJlY3RseSBvbiBJRS4gVGhlIGZvbGxvd2luZyBpcyBhIHRlc3RlZCB3b3JrYXJvdW5kXHJcbiAgLy8gU2VlIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzI3MTc2OTgzL2Rpc3BhdGNoZXZlbnQtbm90LXdvcmtpbmctaW4taWUxMVxyXG4gIGlmICh0eXBlb2YgTW91c2VFdmVudCA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgLy8gU2FuZSBicm93c2Vyc1xyXG4gICAgcmV0dXJuIG5ldyBNb3VzZUV2ZW50KG5hbWUsIHsgYnViYmxlcywgY2FuY2VsYWJsZSB9KTtcclxuICB9IGVsc2Uge1xyXG4gICAgLy8gSUVcclxuICAgIGNvbnN0IGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ01vdXNlRXZlbnQnKTtcclxuICAgIGV2ZW50LmluaXRFdmVudChuYW1lLCBidWJibGVzLCBjYW5jZWxhYmxlKTtcclxuICAgIHJldHVybiBldmVudDtcclxuICB9XHJcbn1cclxuIl19